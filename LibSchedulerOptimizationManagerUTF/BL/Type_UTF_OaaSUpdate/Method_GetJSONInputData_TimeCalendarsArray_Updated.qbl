Quintiq file version 2.0
#parent: #root
Method GetJSONInputData_TimeCalendarsArray_Updated () const as owning JSONBuilder
{
  Description:
  [*
    Generates standard time calendars JSON input data similar to data from 3DSpace.
    Only contains new data to update.
  *]
  TextBody:
  [*
    // Create timeCalendars Array
    timeCalendars := JSON::Array();
    
    // Create timeCalendar with LOWER priority
    timeCalendar := JSON::Object();
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_ShiftPatternID(), "ShiftPattern3" );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_Text(), "Machine broken. Waiting for spare parts delivery." );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_ChunkStartDate(), DateTimeToString::ISOConverter().Convert( DateTime::Construct( 2019, 8, 21 ) ) );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_ChunkEndDate(), DateTimeToString::ISOConverter().Convert( DateTime::Construct( 2050, 1, 1 ) ) );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_Priority(), "1" );
    
    // Add timeCalendar to timeCalendars array
    timeCalendars.Add( timeCalendar );
    
    // Create timeCalendar with HIGHER priority
    timeCalendar := JSON::Object();
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_ShiftPatternID(), "ShiftPattern4" );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_Text(), "Machine broken. Waiting for spare parts delivery." );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_ChunkStartDate(), DateTimeToString::ISOConverter().Convert( DateTime::Construct( 2019, 8, 22 ) ) );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_ChunkEndDate(), DateTimeToString::ISOConverter().Convert( DateTime::Construct( 2050, 1, 1 ) ) );
    timeCalendar.Add( Constants::JSON_TimeCalendarAssignment_Priority(), "2" );
    
    // Add timeCalendar to timeCalendars array
    timeCalendars.Add( timeCalendar );
    
    return &timeCalendars;
  *]
  InterfaceProperties { Accessibility: 'Module' }
}
