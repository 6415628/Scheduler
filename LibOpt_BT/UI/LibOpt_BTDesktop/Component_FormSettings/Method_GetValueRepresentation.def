Quintiq file version 2.0
#parent: #root
Method GetValueRepresentation (NamedValue nv) as String id:Method_FormSettings_GetValueRepresentation
{
  #keys: '[139544.1.1263145612]'
  Body:
  [*
    value := nv.GetValue();
    
    value_repr := '';
    
    
    if( value.istype( BinaryValue ) )
    {
      value_repr := [String] value.astype( BinaryValue );
    }
    else if( value.istype( Boolean ) )
    {
      value_repr := [String] value.astype( Boolean );
    }
    else if( value.istype( Char ) )
    {
      value_repr := [String] value.astype( Char );
    }
    else if( value.istype( Date ) )
    {
      value_repr := [String] value.astype( Date );
    }
    else if( value.istype( DateTime ) )
    {
      value_repr := [String] value.astype( DateTime );
    }
    else if( value.istype( Duration ) )
    {
      value_repr := [String] value.astype( Duration );
    }
    else if( value.istype( Key ) )
    {
      value_repr := [String] value.astype( Key );
    }
    else if( value.istype( Number ) )
    {
      value_repr := [String] value.astype( Number );
    }
    else if( value.istype( Real ) )
    {
      value_repr := [String] value.astype( Real );
    }
    else if( value.istype( String ) )
    {
      value_repr := [String] value.astype( String );
    }
    
    return value_repr;
  *]
}
