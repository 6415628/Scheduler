_meta.kind=Quintiq Template Property File
_meta.specification=libopt
_meta.template=libopt
_meta.type=quill library
_meta.version.config=1.1
_meta.version.quintiq=6.2.0.0 , build 216579

#default values for optional fields:
#<property>.hidevalue=false
#<property>.persistent=false
#<property>.changevalueallowed=true
#<property>.repositorytyperestriction=all
#<property>.mandatory=false
#<property>.multiline=false
#<property>.constraint=""

libopt.autoexportresult.argtype=boolean
libopt.autoexportresult.defaultvalue=false
libopt.autoexportresult.description=If true, LibOpt_BT will export result automatically to path listed in "resultexportpath" once test is completed
libopt.autoexportresult.mandatory=true

libopt.numberofiterations.argtype=number
libopt.numberofiterations.constraint=[1,1000000]
libopt.numberofiterations.defaultvalue=1
libopt.numberofiterations.description="Number of benchmark iterations.\n(default=1)"
libopt.numberofiterations.mandatory=true

libopt.queuetemplate.argtype=string
libopt.queuetemplate.defaultvalue=""
libopt.queuetemplate.description="Name of the QueueTemplate that specifies which benchmarks should be executed.\nIf the QueueTemplate does not exist, all tables will be executed once."

libopt.resultexportcharacterencoding.argtype=string
libopt.resultexportcharacterencoding.defaultvalue=UTF-8
libopt.resultexportcharacterencoding.description=Indicate which character encoding to use for the output file

libopt.resultexportformat.argtype=string
libopt.resultexportformat.constraint=(JSON)
libopt.resultexportformat.defaultvalue=JSON
libopt.resultexportformat.description=Indicate the export format (currently only JSON)

libopt.resultexportpath.argtype=string
libopt.resultexportpath.defaultvalue="~log/libopt_bt"
libopt.resultexportpath.description="Directory where LibOpt_BT will export test results when the benchmarks are completed. Default: ~log/libopt_bt\n\nExport of benchmarks results only happens if \"autoexportresult\" is set to true."

libopt.runonstartup.argtype=boolean
libopt.runonstartup.defaultvalue=false
libopt.runonstartup.description="If true, LibOpt_BT dataset, upon creation/loading, will run the benchmarks.\n(default=false)"
libopt.runonstartup.mandatory=true

libopt.showprogress.argtype=boolean
libopt.showprogress.defaultvalue=false
libopt.showprogress.description="If true, LibOpt_BT will write benchmark progress in server log.\nBy default it is set to false.\n\nSample benchmarking progress:\nExecuting benchmarks...\nExecuting benchmark 1 (<Cell1>)\nExecuting benchmark 2 (<Cell2>)"
libopt.showprogress.mandatory=true

libopt.shutdownaftercompletion.argtype=boolean
libopt.shutdownaftercompletion.defaultvalue=false
libopt.shutdownaftercompletion.description="If true, LibOpt_BT will shutdown the server after all benchmarks were auto-run on server startup.\nAuto shutdown of the server is only done when \"runonstartup\" is set to true.\n(default=false)"

libopt.backuprundatasets.argtype=string
libopt.backuprundatasets.constraint=(true,false,dataset)
libopt.backuprundatasets.defaultvalue=dataset
libopt.backuprundatasets.description="If true, LibOpt_BT will backup the datasets in which the benchmark has been run.\nIf false, LibOpt_BT will not backup the datasets in which the benchmark has been run.\nIf dataset, this is configured inside the LibOpt_BT_BenchmarkTrackingDataset dataset. Note that this option will be removed in a major version upgrade.\n(default=dataset)"

libopt.backuprundatasetspath.argtype=string
libopt.backuprundatasetspath.defaultvalue="../benchmark-backups/"
libopt.backuprundatasetspath.description="Directory where LibOpt_BT will export the dataset after a benchmark run has completed. This allows you to check the dataset at a later time.\nThis is only done if \"backuprundatasets\" is set to true.\n\nWe highly advise you to store your runs outside of the model path, so you cannot accidentally add it to version control. The default adds a new directory called \"benchmark-backups\" in your Quintiq installation directory.\n(default=../benchmark-backups/)"