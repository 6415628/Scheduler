Quintiq file version 2.0
#parent: #root
InfoMessages id:#InfoMessages #extension
{
  InfoMessage LibOpt_BT_BTS_Comment_MultipleValues
  {
    DefaultText: '<Multiple different values>'
  }
  InfoMessage LibOpt_BT_BTS_HasCorrectTargetValue (const LibOpt_BT_KPIs set)
  {
    DefaultText:
    [*
      In total @set.Size()@ KPIs changed target values:
      @selectvalues( selectsortedset( set, Elements, elem, true, elem.KPIDefinition().KPIType(), elem.KPIDefinition().Name() ), Elements, elem, true, ' - ' + elem.KPIDefinition().KPIType() + '.' + elem.KPIDefinition().Name() + ' (was ' + [String] elem.InitialValue() + ', is ' + [String] elem.TargetKPI().Value() + ')' ).ToString( String::NewLine() )@.
    *]
  }
  InfoMessage LibOpt_BT_BTS_RestoreMDS_NoExport
  {
    DefaultText: 'The dataset of this BTS row has not been backed up.'
  }
  InfoMessage LibOpt_BT_BTS_RestoreMDS_NotFound (const String foldername)
  {
    DefaultText: 'Cannot find the dataset file at @ foldername @. Maybe it has been removed?'
  }
  InfoMessage LibOpt_BT_BenchmarkTrackingDataset_CantResume
  {
    DefaultText: 'All active runs have completed or there is no active run.'
  }
  InfoMessage LibOpt_BT_BenchmarkTrackingDataset_DatasetBackupPathInvalid
  {
    DefaultText: 'The dataset backup path is invalid.'
  }
  InfoMessage LibOpt_BT_BenchmarkTrackingDataset_ExecutingBenchmarks
  {
    DefaultText: 'Executing benchmarks...'
  }
  InfoMessage LibOpt_BT_BenchmarkTrackingDataset_IsNotRunning
  {
    DefaultText: 'Nothing is running.'
  }
  InfoMessage LibOpt_BT_BenchmarkTrackingDataset_IsRunning
  {
    DefaultText: 'Runs are currently ongoing.'
  }
  InfoMessage LibOpt_BT_BenchmarkTrackingDataset_RemainingDurationOfActiveSequence (const String name, const Duration remaining)
  {
    DefaultText: "@name@ will complete in @remaining.Format('h:m:s')@"
  }
  InfoMessage LibOpt_BT_CannotFindOptimizer (const String optimizer_name, const String dataset_name)
  {
    DefaultText: 'Cannot find the optimizer "@optimizer_name@" in a copy of the dataset "@dataset_name@".'
  }
  InfoMessage LibOpt_BT_CustomSetting_CannotFindArgument (const LibOpt_BT_CustomSetting setting)
  {
    DefaultText: 'Cannot find argument of type @setting.ArgumentType()@ when calling @typeof( LibOpt_BT_CustomSetting ).Name()@::@setting.MethodName()@( @setting.ArgumentType()@ )'
  }
  InfoMessage LibOpt_BT_CustomSetting_CannotFindMethod (const LibOpt_BT_CustomSetting setting)
  {
    DefaultText: 'Cannot find method @typeof( LibOpt_BT_CustomSetting ).Name()@::@setting.MethodName()@( @setting.ArgumentType()@ )'
  }
  InfoMessage LibOpt_BT_CustomSetting_Executing (const LibOpt_BT_CustomSetting setting)
  {
    DefaultText: 'Executing @typeof( LibOpt_BT_CustomSetting ).Name()@::@setting.MethodName()@( @setting.ArgumentType()@ )'
  }
  InfoMessage LibOpt_BT_Dataset_UpdateSettingsWhileSyncing
  {
    DefaultText: 'Cannot update settings while the settings are still synchronizing.'
  }
  InfoMessage LibOpt_BT_KPI_HasCorrectTargetValue (const Real initial, const Real target, const String type)
  {
    DefaultText: 'The initial value of the KPI in the dataset is @LibOpt_BT_UIKPIColumn::ValueRepresentation( type, initial )@, but was expecting the target value of @LibOpt_BT_UIKPIColumn::ValueRepresentation( type, target )@.'
  }
  InfoMessage LibOpt_BT_PromiseString_GetOptimizers (const String dataset_kind, const String dataset_name)
  {
    DefaultText: 'Getting optimizers living in dataset "@dataset_name@" with type @dataset_kind@.'
  }
  InfoMessage LibOpt_BT_PromiseVoid_SynchronizeTargetKPIs (const String table_name, const String dataset_name, const Number num_cells)
  {
    DefaultText: 'Updating target KPIs for @num_cells@ cells in tracking table "@table_name@" with associated dataset "@dataset_name@".'
  }
  InfoMessage LibOpt_BT_Promise_PreconditionDeleteFinished
  {
    DefaultText: 'Can only delete background tasks that have finished.'
  }
  InfoMessage LibOpt_BT_RunBackupSettingDefinedOnConfigurationUtility
  {
    DefaultText:
    [*
      Whether the run should be backed up is defined in the configuration utility under model settings "libopt.backuprundatasets".
      Set this to "dataset", click "Synchronize with config util" in the dialog and reopen this dialog again to update the values.
    *]
  }
  InfoMessage LibOpt_BT_RunSequenceElement_BenchmarkNotBeaten (const String actualScore, const String benchmarkScore, const String scoreToBeat)
  {
    DefaultText: 'The benchmark is not beaten. One run score is @actualScore@ while the benchmark score is @benchmarkScore@ and the run score needs to be better than @scoreToBeat@.'
  }
  InfoMessage LibOpt_BT_RunSequenceElement_CannotMove
  {
    DefaultText: 'Cannot move the selected elements. The order of elements that are started or finished cannot be changed.'
  }
  InfoMessage LibOpt_BT_RunSequenceElement_CantPlanAfter
  {
    DefaultText: "Can't plan after this element."
  }
  InfoMessage LibOpt_BT_RunSequenceElement_DatasetNotFound (const String datasetName)
  {
    DefaultText: 'Could not find benchmark dataset @datasetName@.'
  }
  InfoMessage LibOpt_BT_RunSequenceElement_IsDisabled
  {
    DefaultText: 'All selected run elements are already disabled.'
  }
  InfoMessage LibOpt_BT_RunSequenceElement_IsEnabled
  {
    DefaultText: 'All selected elements are already enabled.'
  }
  InfoMessage LibOpt_BT_RunSequenceElement_RunNumber
  {
    DefaultText: "The number of runs needs to be at least one. If you don't want to run this, delete or disable the run sequence element."
  }
  InfoMessage LibOpt_BT_RunSequence_ExecuteBenchmark (const Number seq_nr, const String cell_description)
  {
    DefaultText: 'Executing benchmark @seq_nr@ (@cell_description@)'
  }
  InfoMessage LibOpt_BT_RunSequence_IsActive
  {
    DefaultText: 'This run sequence already is active.'
  }
  InfoMessage LibOpt_BT_RunSequence_IsRunning
  {
    DefaultText: 'A run that is ongoing cannot be edited.'
  }
  InfoMessage LibOpt_BT_TrackingColumn_Full_Description
  {
    DefaultText: 'All features'
  }
  InfoMessage LibOpt_BT_TrackingTableBase_NameCell
  {
    DefaultText: 'Cell'
  }
  InfoMessage LibOpt_BT_TrackingTableBase_NameColumn
  {
    DefaultText: 'Column'
  }
  InfoMessage LibOpt_BT_TrackingTableBase_NameRow
  {
    DefaultText: 'Row'
  }
  InfoMessage LibOpt_BT_TrackingTableBase_NameTable
  {
    DefaultText: 'Table'
  }
  InfoMessage LibOpt_BT_TrackingTableCell_IsRunning
  {
    DefaultText: 'Cells are involved in a run that is currently ongoing.'
  }
  InfoMessage LibOpt_BT_Dataset_NoSettings
  {
    DefaultText: 'No settings found. Synchronize the settings, or check in the dataset if the settings exist.'
  }
  InfoMessage LibOpt_BT_PromiseVoid_SynchronizeSettings (const String dataset_name, const String table_name)
  {
    DefaultText: 'Synchronizing settings for tracking table "@table_name@" with associated dataset "@dataset_name@"'
  }
  InfoMessage LibOpt_BT_TrackingTable_CopyDescription (const String old_description)
  {
    DefaultText: 'Copy of @old_description@'
  }
  InfoMessage LibOpt_BT_TrackingTable_DatasetNameTooLong
  {
    DefaultText:
    [*
      The name of the benchmark dataset may be too long to backup the run datasets.
      This is because Windows has a maximum path length of 260 characters.
      
      Shorten the name of your benchmark dataset, or change the location of the dataset backup.
    *]
  }
}
