Quintiq file version 2.0
#parent: #root
StaticMethod FormatName (String name) const declarative remote as String
{
  Description: 'Create a name that can be used as an identifier (in a Quill context, so only alphanumerical characters + _)'
  TextBody:
  [*
    name := name.ReplaceAll( '[', '_Get' ).ReplaceAll( ']', '' );
    
    if( not name.Regex( '^[a-zA-Z0-9_]*$' ) )
    {
      A := StringToChar::ISOConverter().Convert( 'A' );
      Z := StringToChar::ISOConverter().Convert( 'Z' );
      a := StringToChar::ISOConverter().Convert( 'a' );
      z := StringToChar::ISOConverter().Convert( 'z' );
      zero := StringToChar::ISOConverter().Convert( '0' );
      nine := StringToChar::ISOConverter().Convert( '9' );
      
      for( i := 0; i < name.Length(); i++ )
      {
        char := StringToChar::ISOConverter().Convert( name.SubString( i, 1 ) )
        if( not ( ( char >= A and char <= Z ) or ( char >= a and char <= z ) or ( char >= zero and char <= nine ) or char = '_' ) )
        {
          name := name.Replace( i, 1, '_' );
        }
      }  
    }
    
    return name;
  *]
}
