Quintiq file version 2.0
#parent: #root
Method GetIssueDetails (Real value) const declarative remote as String
{
  Description: 'Return the issue text for the given value'
  TextBody:
  [*
    result := '';
    
    if( this.IsAbsolute() )
    {
      if( this.IsRoot() )
      {
        result := Translations::LibOpt_Issue_Details_TimeIterationAbsolute( value,
                                                                            this.LowerThreshold(),
                                                                            this.UpperThreshold(),
                                                                            LibOpt_Statistic::GetFormat( value,
                                                                                                         this.LowerThreshold(),
                                                                                                         this.UpperThreshold() ) );
      }
      else
      {
        result := Translations::LibOpt_Issue_Details_TimeComponentAbsolute( value,
                                                                            this.LowerThreshold(),
                                                                            this.UpperThreshold(),
                                                                            LibOpt_Statistic::GetFormat( value,
                                                                                                         this.LowerThreshold(),
                                                                                                         this.UpperThreshold() ) );
      }
    }
    else
    {
      result := Translations::LibOpt_Issue_Details_TimeComponentRelative( value,
                                                                          this.LowerThreshold(),
                                                                          LibOpt_Statistic::GetFormat( value,
                                                                                                       this.LowerThreshold() ) );
    }
    
    return result;
  *]
  InterfaceProperties { Accessibility: 'Module' }
}
