Quintiq file version 2.0
#parent: #root
Method TestOperationAllowedInBatchPrecondition_Setup (Schedule schedule)
{
  Description: 'Setup to test the precondition methods that are being used to batch operations together in a batch'
  TextBody:
  [*
    hasDifferentOperationType := false;
    hasDifferentPractice := false;
    belongToTheSamePlanUnit := false;
    isAllowedToBatchTogether := false;
    operation_2 := null( Operation_SC );
    
    this.GetTestVariant( hasDifferentOperationType, hasDifferentPractice, belongToTheSamePlanUnit, isAllowedToBatchTogether );
    
    // Create resource
    resource := UTFMockObjectFactory::CreateBatchResource( schedule, 'resource_01' );
    resource.ResourceGroup_SC().HasPractice( true );
    
    // Create order, plan unit and operations
    operation_1 := UTFMockObjectFactory::CreateOperation( schedule, "operation_1", 1.0 );
    operation_1.Type( 'type_1' );
    operation_1.Practice( 'practice_1' );
    
    if( belongToTheSamePlanUnit )
    {
      operation_2 := UTFMockObjectFactory::CreateOperation( operation_1.PlanUnit_SC() );
    }
    else
    {
      operation_2 := UTFMockObjectFactory::CreateOperation( schedule, "operation_2", 1.0 );
    }
    
    operation_2.Type( 'type_1' );
    operation_2.Practice( 'practice_1' );
    
    // Create practice
    GenericPractice::Create( schedule, 'practice_1' );
    
    if( hasDifferentOperationType )
    {
      operation_2.Type( 'type_2' );
    }
    
    if( hasDifferentPractice )
    {
      GenericPractice::Create( schedule, 'practice_2' );
      operation_2.Practice( 'practice_2' );
    }
  *]
}
