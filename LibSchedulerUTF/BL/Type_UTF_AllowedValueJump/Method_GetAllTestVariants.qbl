Quintiq file version 2.0
#parent: #root
Method GetAllTestVariants (output Booleans allowedValueJumps, output Strings ruleChangeoverFroms, output Strings ruleChangeoverTos, 
  output Booleans isValids) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Scenario 1: Test rule subtype allowed value jump with no constraint violation.
    variants.Add( 'Test rule subtype allowed value jump with no constraint violation' );
    allowedValueJumps.Add( true );
    ruleChangeoverFroms.Add( 'A' );
    ruleChangeoverTos.Add( 'A' );
    isValids.Add( true );
    
    // Scenario 2: Test rule subtype allowed value jump with no constraint violation.
    variants.Add( 'Test rule subtype allowed value jump with constraint violation' );
    allowedValueJumps.Add( true );
    ruleChangeoverFroms.Add( 'A' );
    ruleChangeoverTos.Add( 'B' );
    isValids.Add( false );
    
    // Scenario 3: Test rule subtype not allowed value jump with no constraint violation.
    variants.Add( 'Test rule subtype not allowed value jump with no constraint violation' );
    allowedValueJumps.Add( false );
    ruleChangeoverFroms.Add( 'A' );
    ruleChangeoverTos.Add( 'B' );
    isValids.Add( true );
    
    // Scenario 4: Test rule subtype allowed value jump with constraint violation.
    variants.Add( 'Test rule subtype not allowed value jump with constraint violation' );
    allowedValueJumps.Add( false );
    ruleChangeoverFroms.Add( 'A' );
    ruleChangeoverTos.Add( 'A' );
    isValids.Add( false );
    
    return &variants;
  *]
}
