Quintiq file version 2.0
#parent: #root
Method TestRuleSubtypeOverlappingRange (Schedule schedule)
{
  Description: 'Test rule subtype overlapping range'
  TextBody:
  [*
    // Get variant attribute
    minTemperature1 := 0.0;
    maxTemperature1 := 0.0;
    minTemperature2 := 0.0;
    maxTemperature2 := 0.0;
    ruleValue := 0.0;
    isValid := false; 
    
    this.GetTestVariant( minTemperature1,
                         maxTemperature1,
                         minTemperature2,
                         maxTemperature2,
                         ruleValue,
                         isValid );
    
    task2 := select( schedule, Operation_SC.Task_SC, task,
                     task.GetOperation().OperationID() = 'Operation2' );
    
    // Propoagete constraint isAllLowPriorityRulesOK and isAllHighPriorityRulesOK
    Transaction::Transaction().Propagate( constraint( Task_SC, IsAllLowPriorityRulesOK ) );
    Transaction::Transaction().Propagate( constraint( Task_SC, IsAllHighPriorityRulesOK ) );
    
    isNoViolateConstraint := task2.IsAllLowPriorityRulesOK()
                             and task2.IsAllHighPriorityRulesOK();
    
    this.Run().AssertEqual( isValid, isNoViolateConstraint,
                            UTFUtility::GenerateFailedMessage( 'Rule subtype allowed overlapping range failed.', this.Variant() ) );
  *]
}
