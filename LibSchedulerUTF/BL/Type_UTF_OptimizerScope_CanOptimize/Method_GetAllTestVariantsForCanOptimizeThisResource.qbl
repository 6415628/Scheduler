Quintiq file version 2.0
#parent: #root
Method GetAllTestVariantsForCanOptimizeThisResource (output Booleans resource1hasconfigurablerules, output Booleans isprogramoptimizerenableds, output Booleans isalloweds) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic for constraint checking.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Scenario 1.1: Test resource with configurable rules with optimizer "Program" is enabled ( CanOptimizeThisResource = TRUE )
    variants.Add( 'Test resource with configurable rules with optimizer "Program" is enabled ( CanOptimizeThisResource = TRUE )' );
    resource1hasconfigurablerules.Add( true );
    isprogramoptimizerenableds.Add( true );
    isalloweds.Add( true )
    
    // Scenario 1.2: Test resource without configurable rules with optimizer "Program" is enabled ( CanOptimizeThisResource = FALSE )
    variants.Add( 'Test resource without configurable rules with optimizer "Program" is enabled ( CanOptimizeThisResource = FALSE )' );
    resource1hasconfigurablerules.Add( false );
    isprogramoptimizerenableds.Add( true );
    isalloweds.Add( false )
    
    // Scenario 1.3: Test resource with configurable rules with optimizer "Program" is disabled ( CanOptimizeThisResource = FALSE )
    variants.Add( 'Test resource with configurable rules with optimizer "Program" is disabled ( CanOptimizeThisResource = FALSE )' );
    resource1hasconfigurablerules.Add( true );
    isprogramoptimizerenableds.Add( false );
    isalloweds.Add( false )
    
    return &variants;
  *]
}
