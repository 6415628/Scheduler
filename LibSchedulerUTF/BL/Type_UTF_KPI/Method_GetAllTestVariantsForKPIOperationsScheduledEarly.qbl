Quintiq file version 2.0
#parent: #root
Method GetAllTestVariantsForKPIOperationsScheduledEarly (output Booleans isdummy, output Booleans hasfeedback, output Booleans hasfinished, 
  output Booleans iscpplanstart, output Booleans isplanned, output Booleans isstartinsch, 
  output Reals kpioperationsearly) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic for constraint checking.'
  TextBody:
  [*
    variants := construct( Strings );
    
    //Default value for argument used in KPI, but kept as similar in all variant
    isdummy_arg := false;
    hasfinished_arg := false;
    
    // Scenario 1.1: Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart after scheduling end, is planned, and start in scheduling horizon ( increase KPI )
    kpi := 5.0;
    this.SetTestVariant( 'Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart after scheduling end, is planned, and start in scheduling horizon ( increase KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          true,  //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpioperationsearly, &variants );
    iscpplanstart.Add( false );
    isstartinsch.Add( true );
    
    // Scenario 1.2: Test KPI OperationsScheduledEarly with feedback, is CPPlanStart after scheduling end, is planned, and start in scheduling horizon ( no change KPI )
    kpi := 4.0;
    this.SetTestVariant( 'Test KPI OperationsScheduledEarly with feedback, is CPPlanStart after scheduling end, is planned, and start in scheduling horizon ( no change KPI )',
                          isdummy_arg,
                          true, //hasfeedback//
                          hasfinished_arg,
                          true,  //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpioperationsearly, &variants );
    iscpplanstart.Add( false );
    isstartinsch.Add( true );
    
    // Scenario 1.3: Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart after scheduling end, is not planned, and start in scheduling horizon ( no change KPI )
    kpi := 4.0;
    this.SetTestVariant( 'Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart after scheduling end, is not planned, and start in scheduling horizon ( no change KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          false,  //isplanned//
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpioperationsearly, &variants );
    iscpplanstart.Add( false );
    isstartinsch.Add( true );
    
    // Scenario 1.4: Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart before scheduling end, is planned, and start in scheduling horizon ( no change KPI )
    kpi := 4.0;
    this.SetTestVariant( 'Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart before scheduling end, is planned, and start in scheduling horizon ( no change KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          true,  //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpioperationsearly, &variants );
    iscpplanstart.Add( true );//
    isstartinsch.Add( true );
    
    // Scenario 1.5: Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart after scheduling end, is planned, and starts not within scheduling horizon ( no change KPI )
    kpi := 4.0;
    this.SetTestVariant( 'Test KPI OperationsScheduledEarly with no feedback, is CPPlanStart after scheduling end, is planned, and starts not within scheduling horizon ( no change KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          true,  //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpioperationsearly, &variants );
    iscpplanstart.Add( false );
    isstartinsch.Add( false );//
    
    return &variants;
  *]
}
