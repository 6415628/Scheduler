Quintiq file version 2.0
#parent: #root
Method GetAllTestVariantsForKPIMPSAdherenceEarly (output Booleans isfinite_mpswindowstart, output Booleans isdummy, output Booleans hasfeedback, 
  output Booleans hasfinished, output Booleans isplanned, output Booleans isdue, 
  output Booleans isadherenceCPPlannedStart, output Reals kpimpsadherenceearly) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic for constraint checking.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Default value for kpi mpsAdherenceEarly
    mpsAdherenceEarlyDeviation := 2;
    a := 2; //PenaltyParameterMPSAdherenceEarlySlope_a
    b := 2; //PenaltyParameterMPSAdherenceEarlyPower_b
    c := 2; //PenaltyParameterMPSAdherenceEarlyOffset_c
    
    kpiincreamentforoneoperation := 100.0 * ( a * pow( mpsAdherenceEarlyDeviation + c, b ) ) ;
    // Kpi from 4 main operations, with same quantity 100
    kpifrommainoperations := kpiincreamentforoneoperation*4;
    
    //Default value for argument used in KPI, but kept as similar in all variant
    isdummy_arg := false;
    hasfinished_arg := false;
    isfinite_mpswindowstart_arg := true;
    
    // Scenario 1.1: Test KPI MPSAdherenceEarly with no feedback, is due in scheduling horizon, is planned and it start before MPS window Start ( increase KPI )
    kpi := kpiincreamentforoneoperation + kpifrommainoperations;
    this.SetTestVariant( 'Test KPI MPSAdherenceEarly with no feedback, is due in scheduling horizon, is planned and it start before MPS window Start ( increase KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          true, //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpimpsadherenceearly, &variants );
    
    isdue.Add( true );
    isfinite_mpswindowstart.Add( isfinite_mpswindowstart_arg );
    isadherenceCPPlannedStart.Add( false );
    
    // Scenario 1.2: Test KPI MPSAdherenceEarly with feedback, has not finished, is due in scheduling horizon, is planned and it start before MPS window Start ( no change KPI )
    kpi := kpifrommainoperations;
    this.SetTestVariant( 'Test KPI MPSAdherenceEarly with feedback, has not finished, is due in scheduling horizon, is planned and it start before MPS window Start ( no change KPI )',
                          isdummy_arg,
                          true, //hasfeedback//
                          hasfinished_arg,
                          true, //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpimpsadherenceearly, &variants );
    
    isdue.Add( true );
    isfinite_mpswindowstart.Add( isfinite_mpswindowstart_arg );
    isadherenceCPPlannedStart.Add( false );
    
    // Scenario 1.3: Test KPI MPSAdherenceEarly with no feedback, is not due in scheduling horizon, is planned and it start before MPS window Start ( no change KPI )
    kpi := kpifrommainoperations;
    this.SetTestVariant( 'Test KPI MPSAdherenceEarly with no feedback, is not due in scheduling horizon, is planned and it start before MPS window Start ( no change KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          true, //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpimpsadherenceearly, &variants );
    
    isdue.Add( false );//
    isfinite_mpswindowstart.Add( isfinite_mpswindowstart_arg );
    isadherenceCPPlannedStart.Add( false );
    
    // Scenario 1.4: Test KPI MPSAdherenceEarly with no feedback, is due in scheduling horizon, is not planned and it start before MPS window Start ( no change KPI )
    kpi := kpifrommainoperations;
    
    this.SetTestVariant( 'Test KPI MPSAdherenceEarly with no feedback, is due in scheduling horizon, is not planned and it start before MPS window Start ( no change KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          false, //isplanned//
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpimpsadherenceearly, &variants );
    
    isdue.Add( true );
    isfinite_mpswindowstart.Add( isfinite_mpswindowstart_arg );
    isadherenceCPPlannedStart.Add( false );
    
    // Scenario 1.5: Test KPI MPSAdherenceEarly with no feedback, is due in scheduling horizon, is planned and it start after MPS window Start ( no change KPI )
    kpi := kpifrommainoperations;
    this.SetTestVariant( 'Test KPI MPSAdherenceEarly with no feedback, is due in scheduling horizon, is planned and it start after MPS window Start ( no change KPI )',
                          isdummy_arg,
                          false, //hasfeedback
                          hasfinished_arg,
                          true, //isplanned
                          kpi,
                          //output arg
                          isdummy, hasfeedback, hasfinished, isplanned, kpimpsadherenceearly, &variants );
    
    isdue.Add( true );
    isfinite_mpswindowstart.Add( isfinite_mpswindowstart_arg );
    isadherenceCPPlannedStart.Add( true );//
    
    return &variants;
  *]
}
