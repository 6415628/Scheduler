Quintiq file version 2.0
#parent: #root
Method GetAllTestVariants (output Strings rulesubtypes, output Strings chracteristics) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Scenario 1: Test max combined length - Length
    variants.Add( 'Test max combined length - Length' );
    rulesubtypes.Add( RuleConstant::RuleSubType_MaxCombinedLength() );
    chracteristics.Add( RuleConstant::Characteristic_OperationLength() );
    
    // Scenario 2: Test max combined length - Number of task
    variants.Add( 'Test max combined length - Number of task' );
    rulesubtypes.Add( RuleConstant::RuleSubType_MaxCombinedLength() );
    chracteristics.Add( RuleConstant::Characteristic_NumberOfTasks() );
    
    // Scenario 3: Test max different jump - Width
    variants.Add( 'Test max different jump - Width' );
    rulesubtypes.Add( RuleConstant::RuleSubType_MaxAbsoluteDifferenceUpwards() );
    chracteristics.Add( RuleConstant::Characteristic_OperationWidth() );
    
    // Scenario 4: Test Max value - Width
    variants.Add( 'Test Max value - Width' );
    rulesubtypes.Add( RuleConstant::RuleSubType_MaximumValue() );
    chracteristics.Add( RuleConstant::Characteristic_OperationWidth() );
    
    // Scenario 5: Test max combined length - Number of task + Length
    variants.Add( 'Test max combined length - Number of task + Length' );
    rulesubtypes.Add( RuleConstant::RuleSubType_MaxCombinedLength() );
    chracteristics.Add( RuleConstant::Characteristic_NumberOfTasks() 
                        + Constants::SemiColon()
                        + RuleConstant::Characteristic_OperationLength() );
    
    // Scenario 6: Test not allowed value jump - Practice
    variants.Add( 'Test not allowed value jump - Practice' );
    rulesubtypes.Add( RuleConstant::RuleSubType_NotAllowedJumpValue() );
    chracteristics.Add( RuleConstant::Characteristic_OperationPractice() );
    
    return &variants;
  *]
}
