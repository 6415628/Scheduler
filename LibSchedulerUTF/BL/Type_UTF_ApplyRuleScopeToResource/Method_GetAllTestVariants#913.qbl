Quintiq file version 2.0
#parent: #root
Method GetAllTestVariants (output Booleans planOnResourceWithRules, output Booleans hasNoConstraintViolations) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Scenario 1: Test to plan operation on resource with rule, expected to cause constraint violation on task.
    variants.Add( 'Test to plan operation on resource with rule, expected to cause constraint violation on task' );
    planOnResourceWithRules.Add( true );
    hasNoConstraintViolations.Add( false );
    
    // Scenario 2: Test to plan operation on resource without rules, expected to not cause constraint violation on task.
    variants.Add( 'Test to plan operation on resource without rules, expected to not cause constraint violation on task' );
    planOnResourceWithRules.Add( false );
    hasNoConstraintViolations.Add( true );
    
    return &variants;
  *]
}
