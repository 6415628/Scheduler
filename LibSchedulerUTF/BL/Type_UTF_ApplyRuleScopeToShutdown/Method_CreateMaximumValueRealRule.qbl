Quintiq file version 2.0
#parent: #root
Method CreateMaximumValueRealRule (Schedule schedule) as Rule
{
  TextBody:
  [*
    // Create rule
    rule := Rule::Create( schedule, 1 );
    
    // Create rule type - Allowed Value Min Max
    ruleType := UTFMockObjectFactory::CreateRuleType( schedule,
                                                      RuleConstant::RuleType_AllowedValueMinMaxCheck() );
    
    rule.RuleType( relset, ruleType );
    
    // Create rule subtype - Maximum Allowed Value Real Check
    ruleSubtype := UTFMockObjectFactory::CreateRuleSubtypeValueMinMaxCheck( ruleType,
                                                                            RuleConstant::RuleSubType_MaximumValue(),
                                                                            false );
    
    rule.RuleSubType( relset, ruleSubtype );
    
    // Create characteristic main - Operation Width
    characteristicMain := UTFMockObjectFactory::CreateCharacteristic( schedule,
                                                                      RuleConstant::Characteristic_OperationWidth(),
                                                                      false, 
                                                                      true, 
                                                                      false, 
                                                                      RuleConstant::ValueType_Real(), 
                                                                      true, 
                                                                      false );
    
    rule.CharacteristicMain( relset, characteristicMain );
    
    //Create characteristic scope - Nr of tasks
    characteristicScope := UTFMockObjectFactory::CreateCharacteristic( schedule,
                                                                       RuleConstant::Characteristic_NumberOfTasks(),
                                                                       true, 
                                                                       false, 
                                                                       false, 
                                                                       RuleConstant::ValueType_Number(), 
                                                                       true, 
                                                                       false );
    
    rule.CharacteristicScope( relset, characteristicScope );
    
    // Set attribute in rule to only take 2 tasks after shutdown into consideration.
    rule.IsEnabled( true );
    rule.IsBeforeShutdown( false );
    rule.RuleScopeShutdownAggregateThreshold( 2.0 );
    
    // Set the maximum allowed value is 10.0
    rule.RuleValue( 10.0 );
    
    return rule;
  *]
}
