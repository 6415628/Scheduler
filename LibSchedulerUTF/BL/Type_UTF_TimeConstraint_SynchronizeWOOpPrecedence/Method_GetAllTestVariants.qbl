Quintiq file version 2.0
#parent: #root
Method GetAllTestVariants (output Booleans hasValidCircularPrecedences, output Booleans hasValidDependencyTypes, output Booleans hasValidNoBufferTypes, 
  output Booleans hasValidOffsetRelations, output Booleans results) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic and final assert result comparison.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Scenario 1
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Fully valid data' ) );
    hasValidCircularPrecedences.Add( true );
    hasValidDependencyTypes.Add( true );
    hasValidNoBufferTypes.Add( true );
    hasValidOffsetRelations.Add( true );
    results.Add( true );
    
    // Scenario 2
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Fully invalid data' ) );
    hasValidCircularPrecedences.Add( false );
    hasValidDependencyTypes.Add( false );
    hasValidNoBufferTypes.Add( false );
    hasValidOffsetRelations.Add( false );
    results.Add( false );
    
    // Scenario 3
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Circular Precedence' ) );
    hasValidCircularPrecedences.Add( false );
    hasValidDependencyTypes.Add( true );
    hasValidNoBufferTypes.Add( true );
    hasValidOffsetRelations.Add( true );
    results.Add( false );
    
    // Scenario 4
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Invalid DependencyType' ) );
    hasValidCircularPrecedences.Add( true );
    hasValidDependencyTypes.Add( false );
    hasValidNoBufferTypes.Add( true );
    hasValidOffsetRelations.Add( true );
    results.Add( false );
    
    // Scenario 5
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Invalid NoBufferType' ) );
    hasValidCircularPrecedences.Add( true );
    hasValidDependencyTypes.Add( true );
    hasValidNoBufferTypes.Add( false );
    hasValidOffsetRelations.Add( true );
    results.Add( false );
    
    // Scenario 6
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Invalid OffsetRelation' ) );
    hasValidCircularPrecedences.Add( true );
    hasValidDependencyTypes.Add( true );
    hasValidNoBufferTypes.Add( true );
    hasValidOffsetRelations.Add( false );
    results.Add( false );
    
    // Scenario 7
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Circular Precedence, Invalid DependencyType' ) );
    hasValidCircularPrecedences.Add( false );
    hasValidDependencyTypes.Add( false );
    hasValidNoBufferTypes.Add( true );
    hasValidOffsetRelations.Add( true );
    results.Add( false );
    
    // Scenario 8
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Invalid DependencyType, Invalid NoBufferType' ) );
    hasValidCircularPrecedences.Add( true );
    hasValidDependencyTypes.Add( false );
    hasValidNoBufferTypes.Add( false );
    hasValidOffsetRelations.Add( true );
    results.Add( false );
    
    // Scenario 9
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Invalid NoBufferType, Invalid OffsetRelation' ) );
    hasValidCircularPrecedences.Add( true );
    hasValidDependencyTypes.Add( true );
    hasValidNoBufferTypes.Add( false );
    hasValidOffsetRelations.Add( false );
    results.Add( false );
    
    // Scenario 10
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Circular Precedence, Invalid DependencyType, Invalid NoBufferType' ) );
    hasValidCircularPrecedences.Add( false );
    hasValidDependencyTypes.Add( false );
    hasValidNoBufferTypes.Add( false );
    hasValidOffsetRelations.Add( true );
    results.Add( false );
    
    // Scenario 11
    variants.Add( NumberToString::ISOConverter().Convert( variants.Size() )
                  .Concat( ' - ' )
                  .Concat( 'Invalid DependencyType, Invalid NoBufferType, Invalid OffsetRelation' ) );
    hasValidCircularPrecedences.Add( true );
    hasValidDependencyTypes.Add( false );
    hasValidNoBufferTypes.Add( false );
    hasValidOffsetRelations.Add( false );
    results.Add( false );
    
    return &variants;
  *]
}
