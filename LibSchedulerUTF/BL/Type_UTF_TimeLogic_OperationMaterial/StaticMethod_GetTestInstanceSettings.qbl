Quintiq file version 2.0
#parent: #root
StaticMethod GetTestInstanceSettings (UTF_TL_OperationMaterial_MainRow testinstance) as owning Strings
{
  Description: 'Get the settings (input parameter) of the test instance to be displayed in Measurement groups list'
  TextBody:
  [*
    settings := construct( Strings );
    
    settings.Add( UTFUtility::GetSetting( 'General', 'ResourceStrategy', testinstance.ResourceStrategy() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'Due date', [String]testinstance.DueDate() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'Additional lead time', [String]testinstance.AdditionalLeadTime() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'HasFulfillment', [String]testinstance.HasFulfillment() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'IsLotLeadTimeLogicOn', [String]testinstance.IsLotLeadTimeLogicOn() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'UTF_TL_SubTasks_ID_Upstream', testinstance.UTF_TL_SubTasks_ID_Upstream() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'UTF_TL_SubTasks_ID_Downstream', testinstance.UTF_TL_SubTasks_ID_Downstream() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'MaterialAvailableTime', [String]testinstance.MaterialAvailableTime() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'FulfillmentQty', [String]testinstance.FulfillmentQty() ) );
    settings.Add( UTFUtility::GetSetting( 'General', 'LastInputLotLatestStart', [String]testinstance.LastInputLotLatestStart() ) );
    
    settings.Add( UTFUtility::GetSetting( 'InputOperation', 'HasInputOperation', [String]testinstance.HasInputOperation() ) );
    settings.Add( UTFUtility::GetSetting( 'InputOperation', 'InputOperationFinished', [String]testinstance.InputOperationFinished() ) );
    settings.Add( UTFUtility::GetSetting( 'InputOperation', 'InputOperationHasReportedEnd', [String]testinstance.InputOperationHasReportedEnd() ) );
    settings.Add( UTFUtility::GetSetting( 'InputOperation', 'InputOperationEarliestEnd', [String]testinstance.InputOperationEarliestEnd() ) );
    settings.Add( UTFUtility::GetSetting( 'InputOperation', 'InputOperationReportedEnd', [String]testinstance.InputOperationReportedEnd() ) );
    
    settings.Add( UTFUtility::GetSetting( 'OutputOperation', 'HasOutputOperation', [String]testinstance.HasOutputOperation() ) );
    settings.Add( UTFUtility::GetSetting( 'OutputOperation', 'OutputOperationFinished', [String]testinstance.OutputOperationFinished() ) );
    settings.Add( UTFUtility::GetSetting( 'OutputOperation', 'OutputOperationHasReportedStart', [String]testinstance.OutputOperationHasReportedStart() ) );
    settings.Add( UTFUtility::GetSetting( 'OutputOperation', 'OutputOperationLatestStart', [String]testinstance.OutputOperationLatestStart() ) );
    settings.Add( UTFUtility::GetSetting( 'OutputOperation', 'OutputOperationReportedStart', [String]testinstance.OutputOperationReportedStart() ) );
    
    
    return &settings;
  *]
  InterfaceProperties { Accessibility: 'Module' }
}
