Quintiq file version 2.0
#parent: #root
Method GetAllTestVariantsForPreconditionAssignProgramDefinitionToResource (output Booleans isBatchResources, output Booleans isJITleadtimestrategys, output Booleans hasprogramchangeforassignprogramdefinitions, 
  output Booleans isValidForAssignProgramDefinitionToResources) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // --------------------- precondition checking when assign program definitions to resource via drag & drop
    // Scenario 1: Precondition checking when assign program definitions to resource which not allowed batch resource
    variants.Add( 'Precondition checking when assign program definitions to resource which not allowed batch resource' );
    isBatchResources.Add( true );
    isJITleadtimestrategys.Add( false );
    hasprogramchangeforassignprogramdefinitions.Add( false );
    isValidForAssignProgramDefinitionToResources.Add( false );
    
    // Scenario 2: Precondition checking when assign program definitions to resource which not allowed JIT lead time strategy
    variants.Add( 'Precondition checking when assign program definitions to resource which not allowed JIT lead time strategy' );
    isBatchResources.Add( false );
    isJITleadtimestrategys.Add( true );
    hasprogramchangeforassignprogramdefinitions.Add( false );
    isValidForAssignProgramDefinitionToResources.Add( false );
    
    // Scenario 3: Precondition checking when assign program definitions to resource which already has program change
    variants.Add( 'Precondition checking when assign program definitions to resource which already has program change' );
    isBatchResources.Add( false );
    isJITleadtimestrategys.Add( false );
    hasprogramchangeforassignprogramdefinitions.Add( true );
    isValidForAssignProgramDefinitionToResources.Add( false );
    
    // Scenario 4: Precondition checking when assign program definitions to resource with valid data
    variants.Add( 'Precondition checking when assign program definitions to resource with valid data' );
    isBatchResources.Add( false );
    isJITleadtimestrategys.Add( false );
    hasprogramchangeforassignprogramdefinitions.Add( false );
    isValidForAssignProgramDefinitionToResources.Add( true );
    
    return &variants;
  *]
}
