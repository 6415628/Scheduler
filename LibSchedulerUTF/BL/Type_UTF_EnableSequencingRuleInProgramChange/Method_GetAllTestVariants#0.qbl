Quintiq file version 2.0
#parent: #root
Method GetAllTestVariants (output Booleans isSequenceRulesEnableds, output Booleans hasViolatedRules, output Booleans hasfeedbacks) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic.'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Scenario 1: Test with "IsSequenceRulesEnabled" enabled in program set configuration
    variants.Add( 'Test with "IsSequenceRulesEnabled" enabled in program set configuration ( VIOLATED )' );
    isSequenceRulesEnableds.Add( true );
    hasViolatedRules.Add( true );
    hasfeedbacks.Add( false );
    
    // Scenario 2: Test with "IsSequenceRulesEnabled" disabled in program set configuration
    variants.Add( 'Test with "IsSequenceRulesEnabled" disabled in program set configuration ( NOT VIOLATED )' );
    isSequenceRulesEnableds.Add( false );
    hasViolatedRules.Add( false );
    hasfeedbacks.Add( false );
    
    // Scenario 3: Test with "IsSequenceRulesEnabled" enabled in program set configuration with feedback
    variants.Add( 'Test with "IsSequenceRulesEnabled" enabled in program set configuration with feedback ( VIOLATED )' );
    isSequenceRulesEnableds.Add( true );
    hasViolatedRules.Add( true );
    hasfeedbacks.Add( true );
    
    // Scenario 4: Test with "IsSequenceRulesEnabled" disabled in program set configuration
    variants.Add( 'Test with "IsSequenceRulesEnabled" disabled in program set configuration with feedback ( NOT VIOLATED )' );
    isSequenceRulesEnableds.Add( false );
    hasViolatedRules.Add( false );
    hasfeedbacks.Add( true );
    
    return &variants;
  *]
}
