Quintiq file version 2.0
#parent: #root
Method GetAllTestVariantsForFeedbackProgramChange (output Booleans isimportrelationbetweenfeedbacktaskandprograms, output Booleans hasprogramphases) as owning Strings
{
  Description: 'Return all test variants, variant output arguments (columns) will be used in data creation logic for feedback program change'
  TextBody:
  [*
    variants := construct( Strings );
    
    // Scenario 1.1: Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = TRUE and HasProgramPhase = TRUE'
    variants.Add( 'Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = TRUE and HasProgramPhase = TRUE' );
    isimportrelationbetweenfeedbacktaskandprograms.Add( true );
    hasprogramphases.Add( true );
    
    // Scenario 1.2: Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = FALSE and HasProgramPhase = TRUE'
    variants.Add( 'Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = FALSE and HasProgramPhase = TRUE' );
    isimportrelationbetweenfeedbacktaskandprograms.Add( false );
    hasprogramphases.Add( true );
    
    // Scenario 1.3: Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = TRUE and HasProgramPhase = FALSE'
    variants.Add( 'Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = TRUE and HasProgramPhase = FALSE' );
    isimportrelationbetweenfeedbacktaskandprograms.Add( true );
    hasprogramphases.Add( false );
    
    // Scenario 1.4: Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = FALSE and HasProgramPhase = FALSE'
    variants.Add( 'Test feedback program change with IsImportRelationBetweenFeedbackTaskAndProgram = FALSE and HasProgramPhase = FALSE' );
    isimportrelationbetweenfeedbacktaskandprograms.Add( false );
    hasprogramphases.Add( false );
    
    return &variants;
  *]
}
