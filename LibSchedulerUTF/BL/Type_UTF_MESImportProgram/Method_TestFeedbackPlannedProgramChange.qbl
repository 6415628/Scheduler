Quintiq file version 2.0
#parent: #root
Method TestFeedbackPlannedProgramChange (Schedule schedule)
{
  Description: 'Test feedback planned program change'
  TextBody:
  [*
    // Default phase transition rule is 5 tasks for each phase
    // Gantt chart
    // |                           | Feedback HEAD        |   BODY      |    TAIL      |
    // | FeedbackProgramChangeTask | Feedback Task1-Task5 | Task 6 - 10 | Task 11 - 15 |
    
    programchange := select( schedule, ProgramChange, pc, true );
    hasfeedbackprogramchangetask := not isnull( programchange.FeedbackProgramChangeTask() )
                                    and isnull( programchange.ProgramChangeTask() );
    hasfeedbackprogramtype := forall( programchange, ProgramType, program, not isnull( program.FeedbackProgramType() ) );
    hasfeedbackprogramphase := forall( programchange, ProgramType.ProgramPhase, phase, not isnull( phase.FeedbackProgramPhase() ) );
    hasfeedbacktaskinprogram := forall( programchange, FeedbackProgramType, feedbackprogram,
                                        feedbackprogram.FeedbackTaskInFeedbackProgramType( relsize ) = 5 );
                                        
    isvalid := hasfeedbackprogramchangetask
               and hasfeedbackprogramtype
               and hasfeedbackprogramphase
               and hasfeedbacktaskinprogram;
                             
    this.Run().AssertTrue( isvalid,
                           UTFUtility::GenerateFailedMessage( 'Test feedback planned program change failed.', 
                                                              this.Variant() ) );
  *]
}
