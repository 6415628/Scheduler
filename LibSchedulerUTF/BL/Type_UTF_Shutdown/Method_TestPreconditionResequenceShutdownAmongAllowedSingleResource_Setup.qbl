Quintiq file version 2.0
#parent: #root
Method TestPreconditionResequenceShutdownAmongAllowedSingleResource_Setup (Schedule schedule)
{
  TextBody:
  [*
    // Create resource
    resource1 := UTFMockObjectFactory::CreateSingleResource( schedule, 'resource1' );
    resource2 := UTFMockObjectFactory::CreateSingleResource( schedule, 'resource2' );
    
    // Assign ASAP lead time strategy
    LeadTimeStrategy_SC::Create( resource1, Duration::Zero(), Constants::StrategyASAP() );
    LeadTimeStrategy_SC::Create( resource2, Duration::Zero(), Constants::StrategyASAP() );
    Transaction::Transaction().Propagate( attribute( Resource_SC, StrategyName ) );
    
    // Create task1
    order1 := UTFMockObjectFactory::CreateOrder( schedule, 'Order 1' );
    planUnit1 := UTFMockObjectFactory::CreatePlanUnit( order1, 'Plan Unit 1', 1.0 );
    operation1 := UTFMockObjectFactory::CreateOperation( planUnit1 );
    Transaction::Transaction().Propagate( relation( Operation_SC, AllowedOperationOnResource ) );
    task1 := resource1.PlanLast( operation1 );
    
    // Create shutdown type and  apply resource1 and resource2 to its scope
    shutdownType := UTFMockObjectFactory::CreateShutdownType( schedule, 'Shutdown Type' );
    UTFMockObjectFactory::CreateShutdownTypeInResource( shutdownType, resource1 );
    UTFMockObjectFactory::CreateShutdownTypeInResource( shutdownType, resource2 );
    
    // Insert shutdown between task1 and task2
    this.InsertShutdown( resource1, task1, shutdownType );
  *]
}
