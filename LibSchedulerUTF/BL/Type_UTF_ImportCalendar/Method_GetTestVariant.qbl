Quintiq file version 2.0
#parent: #root
Method GetTestVariant (output String subject, output Boolean isDefault, output Boolean isRecurring, 
  output String patternType, output Number recurrenceInterval, output String patternWeekly_Weekdays, 
  output Boolean patternMonthly_IsDay, output Number patternMonthly_Day, output String patternMonthly_WeekOfMonth, 
  output String patternMonthly_DayOfWeek, output Boolean patternYearly_IsDay, output Number patternYearly_Month, 
  output Number patternYearly_Day, output String patternYearly_WeekOfMonth, output String patternYearly_DayOfWeek, 
  output Boolean eventIsRecurring, output String periodType, output Date periodStartDate)
{
  Description: "Retrieves the test variant's values."
  TextBody:
  [*
    // Event
    subjects := construct( Strings );
    isDefaults := construct( Booleans );
    isRecurrings := construct( Booleans );
    patternTypes := construct( Strings );
    recurrenceIntervals := construct( Numbers );
    patternWeekly_Weekdayss := construct( Strings );
    patternMonthly_IsDays := construct( Booleans );
    patternMonthly_Days := construct( Numbers );
    patternMonthly_WeekOfMonths := construct( Strings );
    patternMonthly_DayOfWeeks := construct( Strings );
    patternYearly_IsDays  := construct( Booleans );
    patternYearly_Months  := construct( Numbers );
    patternYearly_Days := construct( Numbers );
    patternYearly_WeekOfMonths := construct( Strings );
    patternYearly_DayOfWeeks := construct( Strings )
    
    // Participation
    eventIsRecurrings := construct( Booleans );
    periodTypes := construct( Strings );
    periodStartDates := construct( Dates );
    
    variants := this.GetAllTestVariants( subjects, // Event
                                         isDefaults,
                                         isRecurrings,
                                         patternTypes,
                                         recurrenceIntervals,
                                         patternWeekly_Weekdayss,
                                         patternMonthly_IsDays,
                                         patternMonthly_Days,
                                         patternMonthly_WeekOfMonths,
                                         patternMonthly_DayOfWeeks,
                                         patternYearly_IsDays,
                                         patternYearly_Months,
                                         patternYearly_Days,
                                         patternYearly_WeekOfMonths,
                                         patternYearly_DayOfWeeks,
                                         eventIsRecurrings, // Participation
                                         periodTypes,
                                         periodStartDates );
     
    // Look for data for specified variant
    variantNr := variants.Find( this.Variant() );
    
    // Event
    subject := subjects.Element( variantNr );
    isDefault := isDefaults.Element( variantNr );
    isRecurring := isRecurrings.Element( variantNr );
    patternType := patternTypes.Element( variantNr );
    recurrenceInterval := recurrenceIntervals.Element( variantNr );
    patternWeekly_Weekdays := patternWeekly_Weekdayss.Element( variantNr );
    patternMonthly_IsDay := patternMonthly_IsDays.Element( variantNr );
    patternMonthly_Day := patternMonthly_Days.Element( variantNr );
    patternMonthly_WeekOfMonth := patternMonthly_WeekOfMonths.Element( variantNr );
    patternMonthly_DayOfWeek := patternMonthly_DayOfWeeks.Element( variantNr );
    patternYearly_IsDay := patternYearly_IsDays.Element( variantNr );
    patternYearly_Month := patternYearly_Months.Element( variantNr );
    patternYearly_Day := patternYearly_Days.Element( variantNr );
    patternYearly_WeekOfMonth := patternYearly_WeekOfMonths.Element( variantNr );
    patternYearly_DayOfWeek := patternYearly_DayOfWeeks.Element( variantNr );
    // Participant
    eventIsRecurring := eventIsRecurrings.Element( variantNr );
    periodType := periodTypes.Element( variantNr );
    periodStartDate := periodStartDates.Element( variantNr );
  *]
  InterfaceProperties { Accessibility: 'Module' }
}
