Quintiq file version 2.0
#parent: #root
Method TestConstraintIsAllowedWithinOnHoldHorizon_Setup (Schedule schedule)
{
  Description: 'Test task constraint IsAllowedWithinOnHoldHorizon - setup'
  TextBody:
  [*
    // Get variant data
    hasonholdstatus := false;
    resourceonholdperiodend := DateTime::MinDateTime();
    plannedstart := DateTime::MinDateTime();
    isValid := false;
    
    this.GetTestVariant( hasonholdstatus,
                         resourceonholdperiodend,
                         plannedstart,
                         isValid );
    
    // Set schedule time based on onholdperiodend and default onhold period to 1 day
    onholdperiod := Duration::Days( 1 );
    schedule.Time( resourceonholdperiodend - onholdperiod );
    
    // Create resource
    resource := UTFMockObjectFactory::CreateSingleResource( schedule, 'resource' );
    resource.UseOnHoldPeriodUser( true );
    resource.OnHoldPeriodUser( onholdperiod );
    
    // Create task1
    order1 := UTFMockObjectFactory::CreateOrder( schedule, 'Order 1' );
    planUnit1 := UTFMockObjectFactory::CreatePlanUnit( order1, 'Plan Unit 1', 1.0 );
    operation1 := UTFMockObjectFactory::CreateOperation( planUnit1 );
    operation1.IsOnHold( hasonholdstatus );
    task1 := resource.PlanLast( operation1 );
    utfsingletask := task1.astype( UTFSingleTask );
    utfsingletask.HasStartUTF( true );
    utfsingletask.Start_UTF( plannedstart );
    utfsingletask.HasEndUTF( true );
    utfsingletask.End_UTF( plannedstart + Duration::Hours( 1 ) );
  *]
}
