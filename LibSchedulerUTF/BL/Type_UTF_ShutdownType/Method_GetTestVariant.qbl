Quintiq file version 2.0
#parent: #root
Method GetTestVariant (output Boolean hasDuplicateID, output String shutdownTypeID, output String shutdownTypeName, 
  output Duration defaultduration, output Boolean isValidForPreconCreateEdit, output Boolean hasResourceScopeInShutdownType, 
  output Boolean isViolatedResourceScopeConstraint, output Boolean hasPlannedShutdownTask, output Boolean isValidForPreconDelete)
{
  Description: "Retrieves the test variant's values."
  TextBody:
  [*
    hasDuplicateIDs := construct( Booleans );
    shutdownTypeIDs := construct( Strings );
    shutdownTypeNames := construct( Strings );
    defaultdurations := construct( Durations );
    isValidForPreconCreateEdits := construct( Booleans );
    hasResourceScopeInShutdownTypes := construct( Booleans );
    isViolatedResourceScopeConstraints := construct( Booleans );
    hasPlannedShutdownTasks := construct( Booleans );
    isValidForPreconDeletes := construct( Booleans );
    
    variants := this.GetAllTestVariants( hasDuplicateIDs,
                                         shutdownTypeIDs,
                                         shutdownTypeNames,
                                         defaultdurations,
                                         isValidForPreconCreateEdits,
                                         hasResourceScopeInShutdownTypes,
                                         isViolatedResourceScopeConstraints,
                                         hasPlannedShutdownTasks,
                                         isValidForPreconDeletes );
    
    // Look for data for specified variant
    variantNr := variants.Find( this.Variant() );
    
    hasDuplicateID := hasDuplicateIDs.Element( variantNr );
    shutdownTypeID := shutdownTypeIDs.Element( variantNr );
    shutdownTypeName := shutdownTypeNames.Element( variantNr );
    defaultduration:= defaultdurations.Element( variantNr );
    isValidForPreconCreateEdit := isValidForPreconCreateEdits.Element( variantNr );
    hasResourceScopeInShutdownType := hasResourceScopeInShutdownTypes.Element( variantNr );
    isViolatedResourceScopeConstraint:= isViolatedResourceScopeConstraints.Element( variantNr );
    hasPlannedShutdownTask := hasPlannedShutdownTasks.Element( variantNr );
    isValidForPreconDelete:= isValidForPreconDeletes.Element( variantNr );
  *]
}
