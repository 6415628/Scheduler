Quintiq file version 2.0
#parent: #root
TypeDataInterface Rule
{
  TypeKey: '[145930.4.1574037493]'
  ImageDataMember ImgHasCondition
  {
    #keys: '1[133140.3.263504167]'
    Description: 'Indicates if the rule has a condition'
    ImageSpecifications:
    [
      ImageDataMemberImageSpecification
      {
        Description: 'Rule has condition'
        Image: 'ARROW_FORK'
        Quill: 'object.IsConditionEnabled()'
        Value: 'Has condition'
      }
    ]
  }
  ImageDataMember ImgIsEnabled
  {
    #keys: '1[133140.3.263503042]'
    Description: 'Indicates if the rule is enabled or disabled'
    ImageSpecifications:
    [
      ImageDataMemberImageSpecification
      {
        Description: 'Rule is enabled'
        Image: 'CHECKEDCHECKBOX'
        Quill: 'object.IsEnabled()'
        Value: 'Enabled'
      }
      ImageDataMemberImageSpecification
      {
        Description: 'Rule is disabled'
        Image: 'EMPTYCHECKBOX'
        Value: 'Disabled'
      }
    ]
  }
  ImageDataMember ImgRuleCheckManualPlanning
  {
    #keys: '1[133140.3.263503198]'
    Description: 'The rule check configuration for manual planning'
    ImageSpecifications:
    [
      ImageDataMemberImageSpecification
      {
        Description:
        [*
          Warning with allowed user override
          The planner will get a warning if a manual planning action will result in the violation of this rule by showing a feedback text.
        *]
        Image: 'CHECK2_WARNING'
        Quill: 'object.NeedManualPreconditionCheck()'
        Value: 'SoftPrecondition'
      }
      ImageDataMemberImageSpecification
      {
        Description:
        [*
          No warning
          The planner will not get a warning if a manual planning action will result in the violation of this rule
        *]
        Image: 'CHECK2_GRAY'
        Value: 'No warning'
      }
    ]
  }
  ImageDataMember ImgRuleCheckOptimizer
  {
    #keys: '1[133140.3.263503353]'
    Description: 'The rule check configuration for the optimizer'
    ImageSpecifications:
    [
      ImageDataMemberImageSpecification
      {
        Description:
        [*
          Hard constraint
          The optimizer will treat this rule as hard constraint.
          The optimizer is not allowed to produce a result that violates this rule.
        *]
        Image: 'APPLICATION_STOP'
        Quill: 'object.IsHardConstraintForOptimizer()'
        Value: 'Hard constraint'
      }
      ImageDataMemberImageSpecification
      {
        Description:
        [*
          Preference
          The optimizer will treat this rule as a penalty.
          The optimizer is allowed to violate this rule, but this will be at a cost.
        *]
        Image: 'APPLICATION_WARNING'
        Value: 'Preference'
      }
    ]
  }
  ImageDataMember ImgRuleScope
  {
    #keys: '1[133140.3.263503494]'
    Description: 'Indicates the scope of the rule'
    ImageSpecifications:
    [
      ImageDataMemberImageSpecification
      {
        Description: 'All tasks on resource'
        Image: 'INDUSTRIAL_MACHINE'
        Quill: 'object.RuleScopeSelected() = RuleConstant::RuleScope_AllTasksOnResource()'
        Value: 'All tasks on resource'
      }
      ImageDataMemberImageSpecification
      {
        Description: 'Shutdown'
        Image: 'GEAR_PAUSE'
        Quill: 'object.RuleScopeSelected() = RuleConstant::RuleScope_Shutdown()'
        Value: 'Shutdown'
      }
      ImageDataMemberImageSpecification
      {
        Description: 'Program type'
        Image: 'ELEMENT_SELECTION'
        Quill: 'object.RuleScopeSelected() = RuleConstant::RuleScope_Program()'
        Value: 'Program type'
      }
      ImageDataMemberImageSpecification
      {
        Description: 'Program phase'
        Image: 'ELEMENT_GREEN'
        Quill: 'object.RuleScopeSelected() = RuleConstant::RuleScope_ProgramPhase()'
        Value: 'Program phase'
      }
    ]
  }
  ImageDataMember ImgRuleType
  {
    #keys: '1[133140.3.263503769]'
    Description: 'Indicates the rule type'
    ImageSpecifications:
    [
      ImageDataMemberImageSpecification
      {
        Description: 'Allowed difference jump rule'
        Image: 'BOOKMARK_UP'
        Quill: 'object.RuleSubType().istype( RuleSubTypeDifferenceJump )'
        Value: 'Allowed difference jump rule'
      }
      ImageDataMemberImageSpecification
      {
        Description: '(Not) allowed value jump rule'
        Image: 'SHAPE_TRIANGLE_GREEN'
        Quill: 'object.RuleSubType().istype( RuleSubTypeValueJump )'
        Value: '(Not) allowed value jump rule'
      }
      ImageDataMemberImageSpecification
      {
        Description: 'Overlapping range rule'
        Image: 'ELEMENTS1'
        Quill: 'object.RuleSubType().istype( RuleSubTypeOverlapping )'
        Value: 'Overlapping range rule'
      }
      ImageDataMemberImageSpecification
      {
        Description: 'Min/max value rule'
        Image: 'LM_HORIZONTAL_GAP'
        Quill: 'object.RuleSubType().istype( RuleSubTypeValueMinMaxCheck )'
        Value: 'Min/max value rule'
      }
      ImageDataMemberImageSpecification
      {
        Description: '(Not) allowed values rule'
        Image: 'CLIENTS'
        Quill: 'object.RuleSubType().istype( RuleSubTypeValueStringsCheck )'
        Value: '(Not) allowed values rule'
      }
      ImageDataMemberImageSpecification
      {
        Description: 'Min/max combined length rule'
        Image: 'WORM'
        Quill: 'object.RuleSubType().istype( RuleSubTypeMinMaxCombinedLength )'
        Value: 'Min/max combined length rule'
      }
    ]
  }
}
