Quintiq file version 2.0
#root
#parent: SchedulerProductTC
OrphanComponent DialogResourceGroup_SC
{
  #keys: '[129856.0.22023063]'
  BaseType: 'Dialog'
  Databinding: 'shadow[ResourceGroup_SC]'
  GBLayout
  {
    Type: 'internal[GBLayoutDefinition]'
    Columns:
    [
      GBFlow.Column { grow: 0 id: 311 parent: 0 }
      GBFlow.Column { grow: 0 id: 585 parent: 0 }
      GBFlow.Column { grow: 128 id: 783 parent: 0 }
      GBFlow.Column { grow: 0 id: 521 parent: 0 }
    ]
    Elements:
    [
      GBElement
      {
        Component => LabelName
        Position { startcolumn: 311 startrow: 438 endcolumn: 311 endrow: 438 }
      }
      GBElement
      {
        Component => EditorName
        Position { startcolumn: 585 startrow: 438 endcolumn: 521 endrow: 438 }
      }
      GBElement
      {
        Component => CheckBoxHasPractice
        Position { startcolumn: 311 startrow: 967 endcolumn: 311 endrow: 967 }
      }
      GBElement
      {
        Component => CheckBoxHasFixedSequencePlanLogic
        Position { startcolumn: 311 startrow: 789 endcolumn: 311 endrow: 789 }
      }
      GBElement
      {
        Component => CheckBoxIsBottleneck
        Position { startcolumn: 311 startrow: 267 endcolumn: 311 endrow: 267 }
      }
      GBElement
      {
        Component => LabelOperationType
        Position { startcolumn: 311 startrow: 163 endcolumn: 311 endrow: 163 }
      }
      GBElement
      {
        Component => LabelResourceType
        Position { startcolumn: 311 startrow: 748 endcolumn: 311 endrow: 748 }
      }
      GBElement
      {
        Component => EditorOperationType
        Position { startcolumn: 585 startrow: 163 endcolumn: 521 endrow: 163 }
      }
      GBElement
      {
        Component => StringSelectionResourceType
        Position { startcolumn: 585 startrow: 748 endcolumn: 783 endrow: 748 }
      }
      GBElement
      {
        Component => TabComponent
        Position { startcolumn: 311 startrow: 755 endcolumn: 783 endrow: 755 }
      }
      GBElement
      {
        Component => CheckBoxPlanRelatedOperations
        Position { startcolumn: 585 startrow: 789 endcolumn: 585 endrow: 789 }
      }
      GBElement
      {
        Component => ImageResouruceTypeDescription
        Position { startcolumn: 521 startrow: 748 endcolumn: 521 endrow: 748 }
      }
    ]
    Gaps: [ left: 10 right: 10 top: 10 bottom: 10 inner: 5 ]
    Rows:
    [
      GBFlow.Row { grow: 0 id: 438 parent: 0 }
      GBFlow.Row { grow: 0 id: 163 parent: 0 }
      GBFlow.Row { grow: 0 id: 748 parent: 0 }
      GBFlow.Row { grow: 0 id: 967 parent: 0 }
      GBFlow.Row { grow: 0 id: 789 parent: 0 }
      GBFlow.Row { grow: 0 id: 267 parent: 0 }
      GBFlow.Row { grow: 128 id: 755 parent: 0 }
    ]
  }
  Children:
  [
    #child: EditorName
    Component LabelName
    {
      #keys: '[129856.0.22023069]'
      BaseType: 'Label'
      Properties:
      [
        Alignment: 'right'
        Text: 'Name'
        Tooltip: 'Name of the resource group'
        Transparent: true
      ]
    }
    Component CheckBoxHasPractice
    {
      #keys: '[129856.0.22023072]'
      BaseType: 'CheckBox'
      Properties:
      [
        DataBinding: 'Dialog.Data.HasPractice'
        Text: 'Has practice'
        Tooltip: 'Indicates if practices are applicable to resources in the resource group'
      ]
    }
    Component CheckBoxHasFixedSequencePlanLogic
    {
      #keys: '[129856.0.22023074]'
      BaseType: 'CheckBox'
      Properties:
      [
        DataBinding: 'Dialog.Data.HasFixedSequencePlanLogic'
        Text: 'Has fixed sequence plan logic'
        Tooltip: 'Indicates if fixed sequence planning logic is used for resources in the <br> resource group. <br> <br> Fixed sequence planning logic should be used when the production sequence on <br> two resources must be the same: if orders are processed in sequence A-B on the <br> first resource, then A must be processed before B also on the next resource.'
      ]
    }
    Component CheckBoxIsBottleneck
    {
      #keys: '[129856.0.22023076]'
      BaseType: 'CheckBox'
      Properties:
      [
        DataBinding: 'Dialog.Data.IsBottleneck'
        Text: 'Is bottleneck'
        Tooltip: 'Indicates if the resource group is the main production bottleneck'
      ]
    }
    #child: Toolbar
    Component LabelOperationType
    {
      #keys: '[129856.0.22024874]'
      BaseType: 'Label'
      Properties:
      [
        Alignment: 'right'
        Text: 'Operation type'
        Tooltip: 'The operation type of operations to be scheduled on resources in the resource group'
        Transparent: true
      ]
    }
    Component LabelResourceType
    {
      #keys: '[129856.0.22025064]'
      BaseType: 'Label'
      Properties:
      [
        Alignment: 'right'
        Text: 'Resource type'
        Tooltip: 'The resource type for resources in the resource group'
        Transparent: true
      ]
    }
    #child: EditorOperationType
    #child: StringSelectionResourceType
    Component CheckBoxPlanRelatedOperations
    {
      #keys: '[122574.0.679508095]'
      BaseType: 'CheckBox'
      Properties:
      [
        DataBinding: 'Dialog.Data.IsPlanRelatedOperations'
        Text: 'Plan related operations'
        Tooltip: "Automatically (un)plan previous and next fixed sequence operations having 'plan related operations' enabled"
      ]
    }
    Component TabComponent
    {
      #keys: '[122180.0.73337966]'
      BaseType: 'TabComponent'
      Children:
      [
        #child: TabPageSubtaskSequence
        #child: TabPageCampaignType
        #child: TabPageResourceView
        #child: TabPageTimeHorizons
      ]
      Properties:
      [
        DoubleBuffering: false
        ModeledStringList ChildOrdering
        {
          c: TabPageSubtaskSequence
          c: TabPageResourceView
          c: TabPageCampaignType
          c: TabPageTimeHorizons
        }
      ]
    }
    Component ImageResouruceTypeDescription
    {
      #keys: '[132916.0.375703731]'
      BaseType: 'Image'
      Properties:
      [
        Image: 'ABOUT'
        Tooltip: '<html><b>Single Resource : </b>Processes one operation of one plan unit at a time<br><b>Batch Resource : </b>Can process operations of multiple plan units at the same time in one batch<br><b>Continuous Resource : </b>Can process operations of multiple plan units at the same time, where materials travel through the resource</html>'
        Transparent: true
      ]
    }
  ]
  Properties:
  [
    EnterButton: 'btnOk'
    EscapeButton: 'btnCancel'
    Height: 522
    Title: 'New/Edit ResourceGroup'
    Width: 593
    ModeledStringList ChildOrdering
    {
      c: Toolbar
      c: CheckBoxHasPractice
      c: LabelName
      c: CheckBoxHasFixedSequencePlanLogic
      c: CheckBoxIsBottleneck
      c: TabComponent
      c: EditorName
      c: EditorOperationType
      c: StringSelectionResourceType
      c: LabelOperationType
      c: CheckBoxPlanRelatedOperations
      c: LabelResourceType
      c: ImageResouruceTypeDescription
    }
  ]
}
