Quintiq file version 2.0
Component TabPagePhaseTransitionRules
{
  #keys: '[144564.0.857053506]'
  BaseType: 'TabPage'
  GBLayout
  {
    Type: 'internal[GBLayoutDefinition]'
    Columns:
    [
      GBFlow.Column { grow: 0 id: 121 parent: 0 }
      GBFlow.Column { grow: 0 id: 496 parent: 0 }
      GBFlow.Column { grow: 128 id: 844 parent: 0 }
    ]
    Elements:
    [
      GBElement
      {
        Component => /GroupPanelExample
        Position { startcolumn: 121 startrow: 962 endcolumn: 844 endrow: 962 }
      }
      GBElement
      {
        Component => LabelGeneral
        Position { startcolumn: 121 startrow: 302 endcolumn: 496 endrow: 302 }
      }
      GBElement
      {
        Component => LabelConstraintRule
        Position { startcolumn: 121 startrow: 379 endcolumn: 121 endrow: 379 }
      }
      GBElement
      {
        Component => LabelTransitionRule
        Position { startcolumn: 121 startrow: 245 endcolumn: 121 endrow: 245 }
      }
      GBElement
      {
        Component => LabelConstraintRuleDetail
        Position { startcolumn: 496 startrow: 379 endcolumn: 496 endrow: 379 }
      }
      GBElement
      {
        Component => LabelTransitionRuleDetail
        Position { startcolumn: 496 startrow: 245 endcolumn: 496 endrow: 245 }
      }
      GBElement
      {
        Component => LabelNotForLastPhase
        Position { startcolumn: 121 startrow: 899 endcolumn: 496 endrow: 899 }
      }
    ]
    Gaps: [ left: 5 right: 5 top: 5 bottom: 5 inner: 5 ]
    Rows:
    [
      GBFlow.Row { grow: 0 id: 302 parent: 0 }
      GBFlow.Row { grow: 0 id: 379 parent: 0 }
      GBFlow.Row { grow: 0 id: 245 parent: 0 }
      GBFlow.Row { grow: 0 id: 899 parent: 0 }
      GBFlow.Row { grow: 128 id: 370 parent: 0 }
      GBFlow.Row { grow: 0 id: 962 parent: 0 }
    ]
  }
  Children:
  [
    #child: GroupPanelExample
    Component LabelGeneral
    {
      #keys: '[143388.0.2133736967]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 28
        Text: 'Phase rules can be used to in two ways:'
        Transparent: true
      ]
    }
    Component LabelConstraintRule
    {
      #keys: '[143388.0.2133736990]'
      BaseType: 'Label'
      Properties:
      [
        Font: 'FontBold'
        Text: '• Constraint rule:'
        Transparent: true
      ]
    }
    Component LabelTransitionRule
    {
      #keys: '[143388.0.2133736991]'
      BaseType: 'Label'
      Properties:
      [
        Font: 'FontBold'
        Text: '• Transition rule:'
        Transparent: true
      ]
    }
    Component LabelConstraintRuleDetail
    {
      #keys: '[143388.0.2133736992]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 28
        Text: 'Validate if a task is allowed to be scheduled in a phase. A constraint violation will be displayed if the rule is violated.'
        Transparent: true
      ]
    }
    Component LabelTransitionRuleDetail
    {
      #keys: '[143388.0.2133736993]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 60
        Text: 'Determines the transition to a next phase. A new phase is started if the rule will be violated if the task stays in this phase.'
        Transparent: true
      ]
    }
    Component LabelNotForLastPhase
    {
      #keys: '[143388.0.2133737036]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 60
        Text: 'The transition rule is not available for the last phase of a phase type and only one single phase transition rule per program phase is supported.'
        Transparent: true
      ]
    }
  ]
  Properties:
  [
    Title: 'Phase transition rules'
    ModeledStringList ChildOrdering
    {
      c: GroupPanelExample
      c: LabelGeneral
      c: LabelConstraintRule
      c: LabelTransitionRule
      c: LabelConstraintRuleDetail
      c: LabelTransitionRuleDetail
      c: LabelNotForLastPhase
    }
  ]
}
