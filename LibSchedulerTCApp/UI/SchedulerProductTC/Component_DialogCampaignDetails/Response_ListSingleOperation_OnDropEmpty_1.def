Quintiq file version 2.0
#parent: ListSingleOperation
Response OnDropEmpty (structured[Task_SC] information) id:Response_ListSingleOperation_OnDropEmpty_1
{
  #keys: '[105706.1.2060330607]'
  Body:
  [*
    // OnDropEmpty structured[Task]
    
    resource    := DataHolderSingleResource.Data();
    beforetask  := DialogCampaignDetails.Data().LastOperationCampaign().Task_SC();
    
    resource.PlanAfter( information, beforetask )
  *]
  CanBindMultiple: false
  DefinitionID: 'Responsedef_List_OnDropEmpty'
  Precondition:
  [*
    retvalue      := true;
    resource      := DataHolderSingleResource.Data();
    isallowedhard := true;
    ctrlkey       := dropaction.IsControl();
    ctrlshiftkey  := dropaction.IsControlShift();
    identifier    := Task_SC::GetSelectedObjects( information )
    beforetask    := DialogCampaignDetails.Data().LastOperationCampaign().Task_SC();
    
    if( resource.istype( SingleResourceBase ) )
    {
      retvalue := ApplicationScheduler.AllowedScheduling( resource.astype( SingleResourceBase ), //single resource
                                                          information,    //structured tasks
                                                          ctrlkey,        //skip soft check
                                                          ctrlshiftkey,   //ctrl shift key
                                                          beforetask,     //before task
                                                          null( Task_SC ),//after task
                                                          identifier,
                                                          feedback,
                                                          isallowedhard );
    }
    else
    {
      retvalue := ApplicationScheduler.AllowedScheduling( resource.astype( BatchResource ), //batchresource
                                                          information,     //structured tasks
                                                          ctrlkey,         //skip soft check
                                                          ctrlshiftkey,    //ctrl shift key
                                                          beforetask,      //beforetask
                                                          null( Task_SC ), //aftertask
                                                          identifier,
                                                          feedback,
                                                          isallowedhard );
    }
    
    return retvalue;
  *]
  UserRequiresReadWrite: true
}
