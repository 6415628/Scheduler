Quintiq file version 2.0
#parent: SCListTask
Response OnClick (Task_SC selection) id:Response_SCListTask_MenuOptimizeAllResources_OnClick
{
  #keys: '[137186.0.730255419]'
  Body:
  [*
    // Optimize all tasks on all resources from selected task's start time
    
    // Clear scoped operations - which also clears DataHolderOptimizerAllScopedOperations because it has data extractors grabbing from Mandatory and Optional dataholders
    DataHolderOptimizerMandatoryOperations.Data().Flush();
    DataHolderOptimizerOptionalOperations.Data().Flush();
    
    // Scope selection
    plannedoperations := Schedule.GetPlannedOperations( selection.Start() ); // this includes selection
    DataHolderOptimizerMandatoryOperations.Data( &plannedoperations );
    
    // Get all allowed resources
    resources := Operation_SC::GetAllowedResources( DataHolderOptimizerMandatoryOperations.Data() );
    
    // Optimize - we call Mandatory here because the data extractors for AllScopedOperations dataholder does not update before calling this method
    Schedule.Optimization().OptimizerSequencing().OptimizeWithDefaultSettings( DataHolderOptimizerMandatoryOperations.Data(), resources );
  *]
  CanBindMultiple: false
  DefinitionID => //FilteredList/Responsedef_FilteredList_Menu_OnClick
  Initiator: 'MenuOptimizeAllResources'
  Precondition:
  [*
    // Check if system contains batch and is optimizer enabled.
    return Schedule.AllowedOptimize( feedback )
           and Schedule.AllowedOptimizeAllResources( feedback );
  *]
}
