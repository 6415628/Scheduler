Quintiq file version 2.0
#parent: ListFeedbackBatch
Response OnClick (ImportedFeedbackBatch selection) id:Response_ListFeedbackBatch_MenuAbortFeedbackBatch_OnClick
{
  #keys: '[109706.2.780899024]'
  Body:
  [*
    // report abort of selected feedback batch
    dlg := construct( DialogFeedbackBatch );
    resource := ResourceSelection.Data() ;
    dlg.ReportedResourceSelection().BoundValue( resource.Name() );
    dlg.Title( Constants::StatusAborted() );
    dlg.Data( selection );
    dlg.ReportedResourceSelection().Enabled( false );
    dlg.EnterBatchFeedback( this, Constants::StatusAborted() );
  *]
  CanBindMultiple: false
  DefinitionID => /ListFeedbackBatch/Responsedef_ListFeedbackBatch_Menu_OnClick
  Initiator: 'MenuAbortFeedbackBatch'
  Precondition:
  [*
    feedback := '';
    result := false;
    
    if( not isnull( ResourceSelection.Data() ) )
    {
      result := FormShopFloorEntryClient.IsBatchResource( ResourceSelection.Data() );
    
      //if( result and not( ListFeedbackBatch.HasFocus() or ButtonStart.HasFocus() or ButtonStop.HasFocus() or ButtonWork.HasFocus() ) )
      //{
      //  feedback := 'Feedback is only available for Feedback Batch.';
      //}
      //else
      if( selection.ImportedFeedbackBatchContent( relsize ) = 0 )
      {
        feedback := Translations::SC_DesignerListFeedbackBatch_SelectedBatchIsEmpty();
      }
    }
    return result and feedback = '';
  *]
}
