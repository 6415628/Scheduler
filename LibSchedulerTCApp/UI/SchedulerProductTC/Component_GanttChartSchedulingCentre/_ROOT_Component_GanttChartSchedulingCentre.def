Quintiq file version 2.0
#root
#parent: SchedulerProductTC
OrphanComponent GanttChartSchedulingCentre
{
  #keys: '[104006.1.78737971]'
  BaseType: 'GanttChart'
  Children:
  [
    Component menuGanttChartRows1
    {
      #keys: '[11532.0.71563604]'
      BaseType: 'popupGanttchartRows'
      Children:
      [
        Component PopupParent
        {
          #keys: '[530.0.59473]'
          BaseType: 'PopupParent'
          IsDerived: true
          Children:
          [
            Component Menu14 { #keys: '[11532.0.76669281]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuShowLegend { #keys: '[11532.0.76669264]' BaseType: 'Menu' Properties: [ Image: 'form_green' Shortcut: 'Ctrl+L' Text: '&Show legend...' ] }
            Component MenuRemoveAllTasksWithFeedbackFromAllResources { #keys: '[12910.0.774877110]' BaseType: 'Menu' Properties: [ Image: 'DELETE2' Shortcut: 'Ctrl+Shift+Del' Text: 'Remove all tasks with feedback from all resources' Tooltip: 'Remove all future tasks from all resources when they have already received feedback from the shop floor' ] }
            Component Menu13 { #keys: '[12910.0.774878647]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component Menu2 id:Menu2_1 { #keys: '[12910.0.774878760]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuRemoveAllTasksWithFeedbackFromSelectedResource { #keys: '[12910.0.774597039]' BaseType: 'Menu' Properties: [ Image: 'DELETE2' Shortcut: 'Shift+Del' Text: 'Remove all tasks with feedback from selected resource' Tooltip: 'Remove all future tasks from the selected resource when they have already received feedback from the shop floor' ] }
            Component MenuContinuousResourceGanttChartRows
            {
              #keys: '[118288.0.267569469]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuShowLoadSequenceWithStartTimes { #keys: '[118288.0.267569472]' BaseType: 'Menu' Properties: [ Checked: true Checkmark: true HasMemory: true Text: 'Show load sequence with start times' ] }
                Component MenuShowLoadSequenceWithEndTimes { #keys: '[118288.0.267569474]' BaseType: 'Menu' Properties: [ Checked: true Checkmark: true HasMemory: true Text: 'Show load sequence with end times' ] }
                Component MenuShowLeadTimes { #keys: '[118288.0.267569470]' BaseType: 'Menu' Properties: [ Checked: true Checkmark: true HasMemory: true Text: 'Show lead times' ] }
              ]
              Properties:
              [
                Checked: true
                HasMemory: true
                Text: 'Continuous Resource GanttChart Rows'
                ModeledStringList ChildOrdering
                {
                  c: MenuShowLeadTimes
                  c: MenuShowLoadSequenceWithStartTimes
                  c: MenuShowLoadSequenceWithEndTimes
                }
              ]
            }
            Component menuSeparatorContinuousResourceGanttChartRows { #keys: '[118288.0.267569799]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuFilter
            {
              #keys: '[104128.0.41519836]'
              BaseType: 'MenuFilter'
              IsDerived: true
              Children:
              [
                Component menuShowAllGanttChartRows { #keys: '[104128.0.41561702]' BaseType: 'menuShowAllGanttChartRows' IsDerived: true }
                Component MenuUnhideAllRows { #keys: '[107036.0.1328697654]' BaseType: 'MenuUnhideAllRows' IsDerived: true }
              ]
            }
            Component MenuEditFrozenHorizon { #keys: '[139424.0.1824415374]' BaseType: 'Menu' Properties: [ Image: 'IGLOO' Text: 'Edit frozen horizon...' ] }
            Component MenuRowCalendar
            {
              #keys: '[144548.0.141486145]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuRowCalendarNewEvent { #keys: '[144548.0.141541998]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR' Text: 'New event...' ] }
                Component MenuRowCalendarSubscribeToEvent { #keys: '[144548.0.141545017]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR_PREFERENCES' Text: 'Subscribe to event...' ] }
                Component menuSeparator1 { #keys: '[144548.0.141549241]' BaseType: 'Menu' Properties: [ Separator: true ] }
                Component MenuRowCalendarEditCalendar { #keys: '[144548.0.141550401]' BaseType: 'Menu' Properties: [ Image: 'DATE-TIME' Text: 'Edit calendar...' ] }
                Component menuSeparator287 { #keys: '[144548.0.196019278]' BaseType: 'Menu' Properties: [ Separator: true ] }
                Component ComponentMenuRowManageCalendars { #keys: '[144548.0.196019312]' BaseType: 'ComponentMenu' Properties: [ ComponentType: 'LibCal_frmResourceCalendars' Text: 'Manage calendars' ] }
              ]
              Properties:
              [
                Image: 'CALENDAR'
                Text: 'Calendar'
                ModeledStringList ChildOrdering
                {
                  c: MenuRowCalendarNewEvent
                  c: MenuRowCalendarSubscribeToEvent
                  c: menuSeparator1
                  c: MenuRowCalendarEditCalendar
                  c: menuSeparator287
                  c: ComponentMenuRowManageCalendars
                }
              ]
            }
            Component menuSeparator590 { #keys: '[144548.0.141723343]' BaseType: 'Menu' Properties: [ Separator: true ] }
          ]
          Properties:
          [
            ModeledStringList ChildOrdering
            {
              c: MenuFilter
              c: MenuSortGanttChartRows
              c: Menu13
              c: MenuRemoveAllTasksWithFeedbackFromAllResources
              c: MenuRemoveAllTasksWithFeedbackFromSelectedResource
              c: Menu2_1
              c: MenuEditFrozenHorizon
              c: Menu14
              c: MenuShowLegend
              c: menuSeparatorContinuousResourceGanttChartRows
              c: MenuContinuousResourceGanttChartRows
              c: menuSeparator590
              c: MenuRowCalendar
            }
          ]
        }
      ]
      Properties:
      [
        PosX: 5
        PosY: 100
        SizePosition: 'lt5 31 100 126'
      ]
    }
    Component ChartMarkingNow
    {
      #keys: '[11532.0.71563603]'
      BaseType: 'ChartMarking'
      Properties:
      [
        MarkPosition: 'guard( Schedule.Time(), DateTime::Now() )'
        PosX: 103
        PosY: 33
        SizePosition: 'lt103 129 33 59'
      ]
    }
    Component menuGanttChart1
    {
      #keys: '[11532.0.71563021]'
      BaseType: 'popupGanttchart'
      Children:
      [
        Component PopupParent id:PopupParent_1
        {
          #keys: '[514.0.555535]'
          BaseType: 'PopupParent'
          IsDerived: true
          Children:
          [
            Component MenuActions
            {
              #keys: '[104128.0.40869768]'
              BaseType: 'MenuActions'
              IsDerived: true
              Properties:
              [
                ModeledStringList ChildOrdering
                {
                  c: menuConfigureGanttchart
                  c: menuSynchronizeGanttChart
                  c: Menu_1
                  c: menuPrintGanttChart
                  c: menuExportGanttchart
                }
              ]
            }
            Component Menu15 { #keys: '[11532.0.76669362]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuShowLegend1 { #keys: '[11532.0.76669678]' BaseType: 'Menu' Properties: [ Image: 'form_green' Shortcut: 'Ctrl+L' Text: '&Show legend...' ] }
            Component Menu17 { #keys: '[11532.0.76669543]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuManualFeedback1 { #keys: '[11532.0.76669952]' BaseType: 'Menu' Properties: [ Image: 'clock' Shortcut: 'Ctrl+M' Text: '&Manual Feedback...' Visible: false ] }
            Component MenuUnplan1 { #keys: '[11532.0.76669629]' BaseType: 'Menu' Properties: [ Image: 'planout' Shortcut: 'Del' Text: '&Unplan' Tooltip: 'Unplan selected task from schedule' ] }
            Component MenuFindOperationForSequence { #keys: '[12910.0.463117172]' BaseType: 'Menu' Properties: [ Image: 'IMPORT2' Shortcut: 'Ctrl+O' Text: 'Find &Operation for Sequence' Visible: false ] }
            Component MenuFindBetterPosition { #keys: '[12910.0.497716883]' BaseType: 'Menu' Properties: [ Image: 'IMPORT1' Shortcut: 'Ctrl+F' Text: '&Find Better Position' Visible: false ] }
            Component Menu1 id:Menu1_1 { #keys: '[12910.0.505408791]' BaseType: 'Menu' Properties: [ Separator: true Visible: false ] }
            Component MenuCampaignDetails { #keys: '[12910.0.599065747]' BaseType: 'Menu' Properties: [ Image: 'cubes' Shortcut: 'Ctrl+G' Text: 'Campai&gn details...' Tooltip: 'Shows operations in selected campaign and potential ones to add to the campaign' ] }
            Component Menu3 { #keys: '[12910.0.776697236]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component Menu6 { #keys: '[105706.1.51147417]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuSetSchedulingHorizonAfter { #keys: '[105706.1.51154880]' BaseType: 'Menu' Properties: [ Image: 'ELEMENT_SELECTION' Text: 'Set scheduling horizon after' Tooltip: 'Set scheduling horizon to the end of the selected task' ] }
            Component MenuMoveTask
            {
              #keys: '[109706.1.1747781254]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuMoveTaskToFront { #keys: '[109706.1.1747788405]' BaseType: 'Menu' Properties: [ Image: 'NAVIGATE_LEFT2' Shortcut: 'Ctrl+Home' Text: 'Move to &front' Tooltip: 'Move selected task to the start of the resource schedule' ] }
                Component MenuMoveTaskLeft { #keys: '[109706.1.1747790822]' BaseType: 'Menu' Properties: [ Image: 'NAVIGATE_LEFT' Shortcut: 'Alt+Left' Text: 'Move &left' Tooltip: 'Move selected task one task to the left on the resource schedule' ] }
                Component MenuMoveTaskRight { #keys: '[109706.1.1747800081]' BaseType: 'Menu' Properties: [ Image: 'NAVIGATE_RIGHT' Shortcut: 'Alt+Right' Text: 'Move &right' Tooltip: 'Move selected task one task to the right on the resource schedule' ] }
                Component MenuMoveTaskToEnd { #keys: '[109706.1.1747802176]' BaseType: 'Menu' Properties: [ Image: 'NAVIGATE_RIGHT2' Shortcut: 'Ctrl+End' Text: 'Move to &end' Tooltip: 'Move selected task to the end of the resource schedule' ] }
              ]
              Properties:
              [
                Image: 'NAVIGATE_RIGHT'
                Text: '&Move task'
                ModeledStringList ChildOrdering
                {
                  c: MenuMoveTaskToFront
                  c: MenuMoveTaskLeft
                  c: MenuMoveTaskRight
                  c: MenuMoveTaskToEnd
                }
              ]
            }
            Component MenuNavigation
            {
              #keys: '[104128.0.40881109]'
              BaseType: 'MenuNavigation'
              IsDerived: true
              Properties:
              [
                ModeledStringList ChildOrdering
                {
                  c: MenuPreviousPage
                  c: MenuMoveLeft
                  c: MenuNow
                  c: MenuMoveRight
                  c: MenuNextpage
                  c: Menu1_2
                  c: menuZoomInGanttchart
                  c: menuZoomOutGanttchart
                }
              ]
            }
            Component MenuReserveMaterialsAutomaticallyForTasks { #keys: '[122574.0.563683443]' BaseType: 'Menu' Properties: [ Image: 'PlanIn' Shortcut: 'Ctrl+M' Text: 'Reserve materials automatically' Tooltip: 'Automatically reserve material supply for selected task' ] }
            Component menuSeparator820 { #keys: '[119192.0.1646789017]' BaseType: 'Menu' Properties: [ Separator: true Visible: false ] }
            Component MenuBatchResource
            {
              #keys: '[118950.5.395455231]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuBatchDetails { #keys: '[118950.5.395457209]' BaseType: 'Menu' Properties: [ Image: 'cubes' Shortcut: 'Ctrl+B' Text: '&Batch details...' Tooltip: 'Shows operations in selected batch and potential ones to add to the batch' ] }
                Component MenuEditBatchPractice { #keys: '[118950.5.395470495]' BaseType: 'Menu' Properties: [ Image: 'DATA_EDIT' Shortcut: 'Ctrl+E' Text: '&Edit batch practice...' Tooltip: 'Change the practice of the selected batch' ] }
                Component MenuResetDefaultBatchPractice { #keys: '[118950.5.395471342]' BaseType: 'Menu' Properties: [ Image: 'DELETE2' Shortcut: 'Ctrl+X' Text: 'Reset default batch practice' Tooltip: 'Reset the practice of the selected batch to the default value' ] }
              ]
              Properties:
              [
                Image: 'cubes'
                Text: 'Batch resource'
                ModeledStringList ChildOrdering
                {
                  c: MenuBatchDetails
                  c: MenuEditBatchPractice
                  c: MenuResetDefaultBatchPractice
                }
              ]
            }
            Component MenuContinuousResource
            {
              #keys: '[118950.5.395471724]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuSetAsFirstAfterDowntime { #keys: '[118950.5.395472111]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR_DOWN' Text: 'Set as first after downtime' Tooltip: 'Set selected task as first in a new sequence after downtime' ] }
                Component MenuResetAsFirstAfterDowntime { #keys: '[118950.5.395488518]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR_PREFERENCES' Text: 'Reset as first after downtime' Tooltip: 'Merge the selected task and its sequence back in the previous sequence of tasks' ] }
              ]
              Properties:
              [
                Image: 'ELEMENT_INTO'
                Text: 'Continuous resource'
                ModeledStringList ChildOrdering
                {
                  c: MenuSetAsFirstAfterDowntime
                  c: MenuResetAsFirstAfterDowntime
                }
              ]
            }
            Component MenuExecutionFeedback
            {
              #keys: '[118950.5.395474534]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuEditFeedback { #keys: '[118950.5.395475040]' BaseType: 'Menu' Properties: [ Image: 'EDIT' Shortcut: 'Ctrl+Shift+D' Text: 'Edit feedback...' Tooltip: 'Edit feedback of the selected task' ] }
                Component MenuRemoveTaskWithFeedback { #keys: '[118950.5.395475760]' BaseType: 'Menu' Properties: [ Image: 'DELETE2' Shortcut: 'Del' Text: 'Remove task with feedback' Tooltip: 'Remove selected task from the future schedule, since it has already received feedback from the shop floor' ] }
              ]
              Properties:
              [
                Image: 'FACTORY'
                Text: 'Execution feedback'
                ModeledStringList ChildOrdering
                {
                  c: MenuEditFeedback
                  c: MenuRemoveTaskWithFeedback
                }
              ]
            }
            Component MenuPlanUnitSplitting
            {
              #keys: '[118950.5.395476449]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuJoinPlanUnits { #keys: '[118950.5.395477551]' BaseType: 'Menu' Properties: [ Image: 'COMPONENT_REPLACE' Shortcut: 'Ctrl+J' Text: 'Join plan units' Tooltip: 'Join selected plan units into one plan unit' ] }
                Component MenuSplitPlanUnit { #keys: '[118950.5.395478379]' BaseType: 'Menu' Properties: [ Image: 'COMPONENTS' Shortcut: 'Ctrl+S' Text: 'Split plan unit...' Tooltip: 'Split selected plan unit into multiple plan units' ] }
              ]
              Properties:
              [
                Image: 'COMPONENT'
                Text: 'Plan unit splitting'
                ModeledStringList ChildOrdering
                {
                  c: MenuJoinPlanUnits
                  c: MenuSplitPlanUnit
                }
              ]
            }
            Component MenuSeparatorCampaignDetails { #keys: '[118950.5.395478788]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuTaskColors
            {
              #keys: '[132688.0.420015658]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuShowOrderColor { #keys: '[132688.0.420015659]' BaseType: 'Menu' Properties: [ Checkmark: true HasMemory: true Shortcut: 'Ctrl+R' Text: 'Show o&rder color' Tooltip: 'Show tasks of the same work order in the same color' ] }
                Component MenuHighlightSelectedProduct { #keys: '[132688.0.420015660]' BaseType: 'Menu' Properties: [ Checkmark: true HasMemory: true Shortcut: 'Ctrl+P' Text: 'Highlight selected &product' Tooltip: 'Highlight tasks related to the selected product or selected operation producing a product' ] }
              ]
              Properties:
              [
                Image: 'PALETTE'
                Text: 'Task colors'
                ModeledStringList ChildOrdering
                {
                  c: MenuShowOrderColor
                  c: MenuHighlightSelectedProduct
                }
              ]
            }
            Component MenuReOptimizeFromSelectionOnwards
            {
              #keys: '[137186.0.756357365]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuOptimizeThisResourceGroup { #keys: '[137186.0.756357366]' BaseType: 'Menu' Properties: [ Image: 'PlanIn' Text: 'This resource group' Tooltip: "All tasks on all resources in selected task's resource group that start from selected task's start time are included in optimizer scope and optimized" ] }
                Component MenuOptimizeAllResources { #keys: '[137186.0.756357367]' BaseType: 'Menu' Properties: [ Image: 'PlanIn' Text: 'All resources' Tooltip: "All tasks on all resources that start from selected task's start time are included in optimizer scope and optimized" ] }
                Component MenuOptimizeThisResource { #keys: '[155630.0.926165900]' BaseType: 'Menu' Properties: [ Image: 'PlanIn' Text: 'This resource' Tooltip: "All tasks on this resource that start from selected task's start time are included in optimizer scope and optimized" ] }
              ]
              Properties:
              [
                Image: 'ELEMENT_REPLACE'
                Text: 'Re-optimize from selection onwards'
                ModeledStringList ChildOrdering
                {
                  c: MenuOptimizeThisResourceGroup
                  c: MenuOptimizeAllResources
                  c: MenuOptimizeThisResource
                }
              ]
            }
            Component MenuFrozenHorizon
            {
              #keys: '[139424.0.1840123062]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuFreezeScheduleUpToThisElement { #keys: '[139424.0.1840124301]' BaseType: 'Menu' Properties: [ Image: 'ICECUBE' Text: 'Freeze schedule up to this element' ] }
                Component menuSeparatorFreezeScheduleUpToThisElement { #keys: '[139424.0.1840125792]' BaseType: 'Menu' Properties: [ Separator: true ] }
                Component MenuClearTemporaryFrozenHorizonOnThisResource { #keys: '[139424.0.1840131249]' BaseType: 'Menu' Properties: [ Image: 'GARBAGE_HALF_FULL' Text: 'Clear temporary frozen horizon on this resource' ] }
                Component MenuClearTemporaryFrozenHorizonOnAllResources { #keys: '[139424.0.1840132017]' BaseType: 'Menu' Properties: [ Image: 'GARBAGE_EMPTY' Text: 'Clear temporary frozen horizon on all resources' ] }
              ]
              Properties:
              [
                Image: 'IGLOO'
                Text: 'Frozen horizon'
                ModeledStringList ChildOrdering
                {
                  c: MenuFreezeScheduleUpToThisElement
                  c: menuSeparatorFreezeScheduleUpToThisElement
                  c: MenuClearTemporaryFrozenHorizonOnThisResource
                  c: MenuClearTemporaryFrozenHorizonOnAllResources
                }
              ]
            }
            Component menuSeparator { #keys: '[144548.0.141751982]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuNodeCalendar
            {
              #keys: '[144548.0.141752150]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuNodeNewEvent { #keys: '[144548.0.141754174]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR' Text: 'New event...' ] }
                Component MenuNodeEditEvent { #keys: '[144548.0.141754484]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR_EDIT' Text: 'Edit event...' Visible: false ] }
                Component MenuNodeDeleteEvent { #keys: '[144548.0.141755295]' BaseType: 'Menu' Properties: [ Image: 'Garbage' Text: 'Delete event' Visible: false ] }
                Component menuSeparator949 { #keys: '[144548.0.141755804]' BaseType: 'Menu' Properties: [ Separator: true Visible: false ] }
                Component MenuNodeEditOccurence { #keys: '[144548.0.141756041]' BaseType: 'Menu' Properties: [ Image: 'CLOCK' Text: 'Edit occurence...' Visible: false ] }
                Component MenuNodeDeleteOccurence { #keys: '[144548.0.141756251]' BaseType: 'Menu' Properties: [ Image: 'GARBAGE_FULL2' Text: 'Delete occurence' Visible: false ] }
                Component menuSeparator693 { #keys: '[144548.0.196021962]' BaseType: 'Menu' Properties: [ Separator: true ] }
                Component ComponentMenuNodeManageCalendars { #keys: '[144548.0.196022140]' BaseType: 'ComponentMenu' Properties: [ ComponentType: 'LibCal_frmResourceCalendars' Text: 'Manage calendars' ] }
              ]
              Properties:
              [
                Image: 'CALENDAR'
                Text: 'Calendar'
                ModeledStringList ChildOrdering
                {
                  c: MenuNodeNewEvent
                  c: MenuNodeEditEvent
                  c: MenuNodeDeleteEvent
                  c: menuSeparator949
                  c: MenuNodeEditOccurence
                  c: MenuNodeDeleteOccurence
                  c: menuSeparator693
                  c: ComponentMenuNodeManageCalendars
                }
              ]
            }
            Component menuSeparatorComment { #keys: '[136602.0.2060636592]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuEditComment { #keys: '[136602.0.2060636619]' BaseType: 'Menu' Properties: [ Image: 'MESSAGE_EDIT' Shortcut: 'Ctrl+T' Text: 'Edit commen&t...' ] }
            Component menuSeparatorShutdown { #keys: '[143388.0.1767236066]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuInsertShutdown { #keys: '[143388.0.1767236113]' BaseType: 'Menu' Properties: [ Image: 'STOPWATCH' Shortcut: 'Ctrl+I' Text: '&Insert shutdown...' ] }
            Component MenuEditShutdown { #keys: '[143388.0.1767236161]' BaseType: 'Menu' Properties: [ Image: 'STOPWATCH_PAUSE' Shortcut: 'Ctrl+E' Text: '&Edit shutdown...' ] }
            Component MenuDeleteShutdown { #keys: '[143388.0.1774444269]' BaseType: 'Menu' Properties: [ Image: 'STOPWATCH_RESET' Shortcut: 'Ctrl+W' Text: 'Delete shutdo&wn' ] }
            Component MenuInsertProgram { #keys: '[143388.0.1951195760]' BaseType: 'Menu' Properties: [ Image: 'SCROLL_ADD' Shortcut: 'Ctrl+S' Text: 'In&sert program...' ] }
            Component MenuEditProgram { #keys: '[143388.0.1951199686]' BaseType: 'Menu' Properties: [ Image: 'SCROLL_REFRESH' Shortcut: 'Ctrl+T' Text: 'Edi&t program...' ] }
            Component MenuDeleteProgram { #keys: '[143388.0.1953520728]' BaseType: 'Menu' Properties: [ Image: 'SCROLL_DELETE' Shortcut: 'Ctrl+D' Text: '&Delete program' ] }
            Component menuSeparatorProgram { #keys: '[143388.0.1953521031]' BaseType: 'Menu' Properties: [ Separator: true ] }
          ]
          Properties:
          [
            ModeledStringList ChildOrdering
            {
              c: MenuActions
              c: MenuFilter_1
              c: MenuNavigation
              c: Menu15
              c: MenuShowLegend1
              c: MenuTaskColors
              c: Menu3
              c: MenuManualFeedback1
              c: Menu1_1
              c: MenuFindOperationForSequence
              c: MenuFindBetterPosition
              c: menuSeparator820
              c: MenuBatchResource
              c: MenuContinuousResource
              c: MenuExecutionFeedback
              c: MenuPlanUnitSplitting
              c: MenuFrozenHorizon
              c: MenuSeparatorCampaignDetails
              c: MenuCampaignDetails
              c: Menu17
              c: MenuSetSchedulingHorizonAfter
              c: MenuReOptimizeFromSelectionOnwards
              c: MenuReserveMaterialsAutomaticallyForTasks
              c: Menu6
              c: MenuMoveTask
              c: MenuUnplan1
              c: menuSeparatorShutdown
              c: MenuInsertShutdown
              c: MenuEditShutdown
              c: MenuDeleteShutdown
              c: menuSeparatorProgram
              c: MenuInsertProgram
              c: MenuEditProgram
              c: MenuDeleteProgram
              c: menuSeparator
              c: MenuNodeCalendar
              c: menuSeparatorComment
              c: MenuEditComment
            }
          ]
        }
      ]
      Properties:
      [
        PosX: 39
        PosY: 100
        SizePosition: 'lt39 65 100 126'
      ]
    }
    Component GUIDataExtractorGanttRG
    {
      #keys: '[11532.0.71564378]'
      BaseType: 'GUIDataExtractor'
      Properties:
      [
        DataSet: 'Schedule'
        DataType: 'Schedule'
        PosX: 74
        PosY: 33
        SizePosition: 'lt74 100 33 59'
      ]
    }
    #child: GanttChartRowDefinitionResourceGroup
    Component UserConfigurableInformationResource
    {
      #keys: '[11532.0.76676234]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectType: 'Resource_SC'
        PosX: 140
        PosY: 64
        SizePosition: 'lt140 166 64 90'
      ]
    }
    Component UserConfigurableInformationSingleTask
    {
      #keys: '[11532.0.76676333]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectType: 'SingleTaskBase'
        PosX: 111
        PosY: 91
        SizePosition: 'lt111 137 91 117'
        TooltipText: 'Process Duration: VALUE(object.ActualProcessDuration())'
      ]
    }
    Component UserConfigurableInformationCampaignTask
    {
      #keys: '[11532.0.76676672]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectBackgroundColor: 'Dark green'
        ObjectText: 'VALUE(object.Campaign())'
        ObjectType: 'CampaignTask'
        PosX: 166
        PosY: 92
        SizePosition: 'lt166 192 92 118'
      ]
    }
    Component UserConfigurableInformationBatchTask
    {
      #keys: '[11532.0.76676957]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectText: 'VALUE(object.ActualProcessDuration())'
        ObjectType: 'BatchTask'
        PosX: 138
        PosY: 92
        SizePosition: 'lt138 164 92 118'
      ]
    }
    Component UserConfigurableInformationResourceGroup
    {
      #keys: '[12910.0.487664348]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'Schedule'
        ObjectType: 'ResourceGroup_SC'
        PosX: 112
        PosY: 64
        SizePosition: 'lt112 138 64 90'
      ]
    }
    Component UserConfigurableInformationBatchUtil
    {
      #keys: '[12910.0.603566957]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'Batch Utilization'
        ObjectType: 'Batch'
        PosX: 194
        PosY: 91
        SizePosition: 'lt197 223 91 117'
      ]
    }
    Component UserConfigurableInformationFeedbackTask
    {
      #keys: '[12910.0.605639691]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectType: 'FeedbackTaskInSchedule'
        PosX: 110
        PosY: 119
        SizePosition: 'lt110 136 119 145'
      ]
    }
    Component ChartMarkingFeedbackHorizon
    {
      #keys: '[12910.0.605748516]'
      BaseType: 'ChartMarking'
      Properties:
      [
        Color: 'Dark green'
        MarkPosition: 'DateTime::MinDateTime()'
        PosX: 132
        PosY: 33
        SizePosition: 'lt132 158 33 59'
      ]
    }
    Component UserConfigurableInformationFeedbackBatch
    {
      #keys: '[12910.0.736675565]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectType: 'FeedbackBatchInSchedule'
        PosX: 137
        PosY: 120
        SizePosition: 'lt137 163 120 146'
      ]
    }
    Component ChartMarkingOperationMPSEndOrDueDate
    {
      #keys: '[105706.0.1619173650]'
      BaseType: 'ChartMarking'
      Properties:
      [
        Color: 'Puce'
        MarkPosition: 'DateTime::MinDateTime()'
        PosX: 187
        PosY: 33
        SizePosition: 'lt187 213 33 59'
      ]
    }
    Component UserConfigurableInformationToolTask
    {
      #keys: '[107652.0.342280474]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'ToolTask'
        ObjectType: 'ToolTask'
        PosX: 167
        PosY: 119
        SizePosition: 'lt145 171 103 129'
      ]
    }
    Component ChartMarkingDueDateOperation
    {
      #keys: '[100924.0.417278581]'
      BaseType: 'ChartMarking'
      Properties:
      [
        Color: 'Red'
        MarkPosition: 'DateTime::MinDateTime()'
        PosX: 286
        PosY: 62
      ]
    }
    Component ChartMarkingDueDateOrder
    {
      #keys: '[100924.0.417281318]'
      BaseType: 'ChartMarking'
      Properties:
      [
        Color: 'Orange'
        MarkPosition: 'DateTime::MinDateTime()'
        PosX: 314
        PosY: 64
      ]
    }
    #child: GanttChartRowDefinitionToolGroup
    Component NavigationToolbar
    {
      #keys: '[129524.0.163891355]'
      BaseType: 'NavigationToolbar'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 1 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => dpNavigationPanel
            Position { startcolumn: 1 startrow: 2 endcolumn: 1 endrow: 2 }
          }
        ]
        Gaps: [ left: 5 right: 5 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 0 id: 2 parent: 0 }
        ]
      }
      Children:
      [
        #child: dpNavigationPanel
      ]
      Properties:
      [
        Location: 'bottom'
        Priority: 3
        Size: 27
      ]
    }
    Component UserConfigurableInformationCalendarResourceTimeInterval
    {
      #keys: '[144548.0.208181473]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectBackgroundColor: 'Gray'
        ObjectType: 'ResourceExplicitTimeInterval'
        PosX: 223
        PosY: 63
        TooltipText:
        [*
          <b>MES Time Interval: VALUE( object.Comment() )</b>
          Resource_SC: VALUE(object.Calendar().astype(PhysicalResource).Resource_SC().Name())
          Duration: VALUE(object.End() - object.Start())
          Capacity: VALUE(object.Capacity())
        *]
      ]
    }
    Component UserConfigurableInformationCalendarElement
    {
      #keys: '[144548.0.322394007]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectBackgroundColor: 'Light gray'
        ObjectType: 'CalendarElement'
        PosX: 168
        PosY: 62
        TooltipText: '<table><tr><td><b>Start:</b></td><td>VALUE(object.Start())</td></tr><tr><td><b>End:</b></td><td>VALUE(object.End())</td></tr><tr><td><b>Capacity:</b></td><td>VALUE(object.Capacity())</td></tr></table>'
      ]
    }
    Component UserConfigurableInformationShutdownTask
    {
      #keys: '[143388.0.1804717328]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'ShutdownTask'
        ObjectType: 'ShutdownTask'
        PosX: 112
        PosY: 154
        SizePosition: 'lt145 171 103 129'
      ]
    }
    Component UserConfigurableInformationProgramType
    {
      #keys: '[143388.0.1951199826]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'ProgramType'
        ObjectType: 'ProgramType'
        PosX: 84
        PosY: 206
        SizePosition: 'lt145 171 103 129'
      ]
    }
    Component UserConfigurableInformationProgramPhase
    {
      #keys: '[143388.0.1951199858]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'ProgramPhase'
        ObjectType: 'ProgramPhase'
        PosX: 118
        PosY: 206
        SizePosition: 'lt145 171 103 129'
      ]
    }
    Component UserConfigurableInformationProgramChangeTask
    {
      #keys: '[143388.0.2057165576]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'ProgramChangeTask'
        ObjectType: 'ProgramChangeTask'
        PosX: 148
        PosY: 206
        SizePosition: 'lt145 171 103 129'
      ]
    }
    Component UserConfigurableInformationFeedbackProgramType
    {
      #keys: '[136602.1.334718748]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'FeedbackProgramType'
        ObjectType: 'FeedbackProgramType'
        PosX: 108
        PosY: 255
        SizePosition: 'lt145 171 103 129'
      ]
    }
    Component UserConfigurableInformationFeedbackProgramPhase
    {
      #keys: '[136602.1.334718775]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'FeedbackProgramPhase'
        ObjectType: 'FeedbackProgramPhase'
        PosX: 146
        PosY: 254
        SizePosition: 'lt145 171 103 129'
      ]
    }
    Component UserConfigurableInformationFeedbackStoppageTask
    {
      #keys: '[136602.1.361169795]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        ObjectType: 'FeedbackStoppageTask'
        PosX: 186
        PosY: 202
        SizePosition: 'lt110 136 119 145'
      ]
    }
  ]
  Properties:
  [
    AllowDragCreate: true
    BackgroundColor: 'White'
    ContextMenu: 'menuGanttChart1'
    NavigationRangeManager:
    [*
      {
        Name := '1 Day'
        Interval := 2
        Count := 1
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 2
        Item := 0
      }
      {
        Name := '2 Days'
        Interval := 2
        Count := 2
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 2
        Item := 0
      }
      {
        Name := '4 Days'
        Interval := 2
        Count := 4
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 2
        Item := 0
      }
      {
        Name := '1 Week'
        Interval := 3
        Count := 1
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 3
        Item := 0
      }
      {
        Name := '2 Weeks'
        Interval := 3
        Count := 2
        Offset := 0
        Interval := 2
        Count := 1
        Offset := 0
        IntervalStartType := 3
        Item := 0
      }
      {
        Name := '4 Weeks'
        Interval := 3
        Count := 4
        Offset := 0
        Interval := 2
        Count := 1
        Offset := 0
        IntervalStartType := 3
        Item := 0
      }
      {
        Name := '1 Month'
        Interval := 4
        Count := 1
        Offset := 0
        Interval := 2
        Count := 2
        Offset := 0
        IntervalStartType := 4
        Item := 1
      }
      {
        Name := '3 Months'
        Interval := 4
        Count := 3
        Offset := 0
        Interval := 3
        Count := 1
        Offset := 0
        IntervalStartType := 4
        Item := 1
      }
      {
        Name := '6 Months'
        Interval := 4
        Count := 6
        Offset := 0
        Interval := 3
        Count := 1
        Offset := 0
        IntervalStartType := 4
        Item := 1
      }
      {
        Name := '1 Year'
        Interval := 5
        Count := 1
        Offset := 0
        Interval := 3
        Count := 1
        Offset := 0
        IntervalStartType := 6
        Item := 1
      }
      {
        Name := '5 Years'
        Interval := 5
        Count := 5
        Offset := 0
        Interval := 4
        Count := 1
        Offset := 0
        IntervalStartType := 6
        Item := 1
      }
    *]
    RowContextMenu: 'menuGanttChartRows1'
    SizePosition: 'ss0 0 0 0'
    ModeledStringList ChildOrdering
    {
      c: menuGanttChartRows1
      c: ChartMarkingOperationMPSEndOrDueDate
      c: GanttChartRowDefinitionResourceGroup
      c: GUIDataExtractorGanttRG
      c: menuGanttChart1
      c: ChartMarkingNow
      c: UserConfigurableInformationResource
      c: UserConfigurableInformationSingleTask
      c: UserConfigurableInformationCampaignTask
      c: UserConfigurableInformationBatchTask
      c: UserConfigurableInformationFeedbackBatch
      c: UserConfigurableInformationResourceGroup
      c: UserConfigurableInformationBatchUtil
      c: UserConfigurableInformationFeedbackTask
      c: UserConfigurableInformationToolTask
      c: ChartMarkingFeedbackHorizon
      c: GanttChartRowDefinitionToolGroup
      c: ChartMarkingDueDateOrder
      c: ChartMarkingDueDateOperation
      c: NavigationToolbar
      c: UserConfigurableInformationCalendarResourceTimeInterval
      c: UserConfigurableInformationCalendarElement
      c: UserConfigurableInformationShutdownTask
      c: UserConfigurableInformationProgramType
      c: UserConfigurableInformationProgramPhase
      c: UserConfigurableInformationProgramChangeTask
      c: UserConfigurableInformationFeedbackProgramType
      c: UserConfigurableInformationFeedbackProgramPhase
      c: UserConfigurableInformationFeedbackStoppageTask
    }
  ]
  ResponseDefinitions:
  [
    DelegatedResponseDefinition OnClick id:Responsedef_GanttChartSchedulingCentre_Menu_OnClick
    {
      #keys: '[11532.0.71564245]'
      Initiator: 'Menu'
      IsInherited: false
      ResponseType: 'OnClick'
      Arguments:
      [
        ResponseDefinitionArgument selection
        {
          #keys: '[11532.0.71564246]'
          Binding: 'this.Selection()'
        }
        ResponseDefinitionArgument row
        {
          #keys: '[11532.0.71564253]'
          Binding: 'this.ContextMenuRowObject()'
        }
      ]
    }
    DelegatedResponseDefinition OnClick id:Responsedef_GanttChartSchedulingCentre_GUIButtonBase_OnClick
    {
      #keys: '[11532.0.71564260]'
      Initiator: 'GUIButtonBase'
      IsInherited: false
      ResponseType: 'OnClick'
      Arguments:
      [
        ResponseDefinitionArgument selection
        {
          #keys: '[11532.0.71564261]'
          Binding: 'this.Selection()'
        }
        ResponseDefinitionArgument row
        {
          #keys: '[11532.0.71564268]'
          Binding: 'this.ContextMenuRowObject()'
        }
      ]
    }
  ]
}
