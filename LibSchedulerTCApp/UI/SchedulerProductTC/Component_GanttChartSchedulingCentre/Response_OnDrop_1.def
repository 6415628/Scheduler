Quintiq file version 2.0
#parent: #root
Response OnDrop (structured[Operation_SC] source, SingleResourceBase droprow, Task_SC droptarget, 
  Task_SC beforedroptarget, Task_SC afterdroptarget) id:Response_GanttChartSchedulingCentre_OnDrop_1
{
  #keys: '[11532.0.79001371]'
  Body:
  [*
    // OnDrop structured[Operation] --> SingleResourceBase
    
    targetTask := droptarget;
    
    if( isnull( droptarget ) )
    {
      targetTask := afterdroptarget;
    }
    
    droprow.PlanBefore( source, targetTask );
  *]
  DefinitionID: 'Responsedef_GanttChart_OnDrop'
  Precondition:
  [*
    isallowedhard := true;
    aftertask    := afterdroptarget;
    ctrlkey      := dropaction.IsControl();
    ctrlshiftkey := dropaction.IsControlShift();
    beforeTask   := beforedroptarget;
    
    // We check droprow.droprow.LastFeedback() because in the case where last feedback task is only started or has FSPL bound then it's task is preserved but hidden   
    // hence only need this special handling and user can only plan after the last feedback task.
    if( isnull( beforeTask ) 
        and guard( not isnull( droprow.LastFeedbackTaskInSchedule().Task_SC() ), false ) )
    {
      beforeTask := droprow.LastFeedbackTaskInSchedule().Task_SC();
    }
    
    if( not isnull( droptarget ) )
    {
      aftertask := droptarget;
    }
    else if( not isnull( beforedroptarget ))
    {
      aftertask := beforedroptarget.Next();
    }
    
    return ApplicationScheduler.AllowedScheduling( droprow,
                                                   source,
                                                   ctrlkey,
                                                   ctrlshiftkey,
                                                   beforeTask,
                                                   aftertask,
                                                   Operation_SC::GetSelectedObjects( source ),
                                                   feedback,
                                                   isallowedhard );
  *]
  UserRequiresReadWrite: true
}
