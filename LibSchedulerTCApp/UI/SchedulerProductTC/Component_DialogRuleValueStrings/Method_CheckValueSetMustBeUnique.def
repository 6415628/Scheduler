Quintiq file version 2.0
#parent: #root
Method CheckValueSetMustBeUnique () as Boolean id:Method_DialogRuleValueStrings_CheckValueSetMustBeUnique
{
  #keys: '[136602.1.125951318]'
  Body:
  [*
    // Check value set must be unique.
    feedbackobject := FeedbackObject::LocalFeedback();
    
    // Value to be checked based on characteristic value type.
    isboolean := guard( SelectionCharacteristicMain.Data().ValueType() = RuleConstant::ValueType_Boolean(), false );
    valuetobechecked := ifexpr( isboolean, [String]RadioButtonGroupBooleanValue.BoundValue(), EditorValue.Text() );
    
    // Check the value must be unique.
    value := not exists( DataHolderRule.Data(), RuleValueStrings, v,
                         v <> Dialog.Data() and v.Value() = valuetobechecked );
    
    if( not feedbackobject.CheckHard( value ) )
    {
      feedbackobject.AddHard( Translations::Rule_ValueSetAlreadyExists( valuetobechecked ) );
    }
    
    return feedbackobject.IsAllowed();
  *]
}
