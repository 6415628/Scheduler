Quintiq file version 2.0
Component GroupPanelDetails
{
  #keys: '[144564.0.857053508]'
  BaseType: 'GroupPanel'
  GBLayout
  {
    Type: 'internal[GBLayoutDefinition]'
    Columns:
    [
      GBFlow.Column { grow: 0 id: 514 parent: 0 }
      GBFlow.Column { grow: 0 id: 325 parent: 0 }
      GBFlow.Column { grow: 128 id: 845 parent: 0 }
    ]
    Elements:
    [
      GBElement
      {
        Component => LabelNormalExplanation
        Position { startcolumn: 325 startrow: 834 endcolumn: 845 endrow: 834 }
      }
      GBElement
      {
        Component => LabeNormalExample
        Position { startcolumn: 514 startrow: 941 endcolumn: 845 endrow: 941 }
      }
      GBElement
      {
        Component => LabelAggregateExplanation
        Position { startcolumn: 845 startrow: 998 endcolumn: 845 endrow: 998 }
      }
      GBElement
      {
        Component => LabelAggregateExample
        Position { startcolumn: 514 startrow: 549 endcolumn: 845 endrow: 549 }
      }
      GBElement
      {
        Component => LabelNormal
        Position { startcolumn: 514 startrow: 834 endcolumn: 514 endrow: 834 }
      }
      GBElement
      {
        Component => LabelAggregate
        Position { startcolumn: 514 startrow: 998 endcolumn: 325 endrow: 998 }
      }
      GBElement
      {
        Component => LabelRange
        Position { startcolumn: 514 startrow: 677 endcolumn: 514 endrow: 677 }
      }
      GBElement
      {
        Component => LabelRangeExample
        Position { startcolumn: 514 startrow: 364 endcolumn: 845 endrow: 364 }
      }
      GBElement
      {
        Component => LabelRangeExplanation
        Position { startcolumn: 325 startrow: 677 endcolumn: 845 endrow: 677 }
      }
    ]
    Gaps: [ left: 5 right: 5 top: 5 bottom: 5 inner: 5 ]
    Rows:
    [
      GBFlow.Row { grow: 0 id: 834 parent: 0 }
      GBFlow.Row { grow: 0 id: 941 parent: 0 }
      GBFlow.Row { grow: 0 id: 998 parent: 0 }
      GBFlow.Row { grow: 0 id: 549 parent: 0 }
      GBFlow.Row { grow: 0 id: 677 parent: 0 }
      GBFlow.Row { grow: 0 id: 364 parent: 0 }
    ]
  }
  Children:
  [
    Component LabelNormalExplanation
    {
      #keys: '[144564.0.857053509]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 28
        Text: 'The characteristic is available for rule definition based on value of the attribute.'
        Transparent: true
      ]
    }
    Component FontBold
    {
      #keys: '[144564.0.857053514]'
      BaseType: 'Font'
      Properties:
      [
        Bold: true
        PosX: 387
        PosY: 173
      ]
    }
    Component LabeNormalExample
    {
      #keys: '[144564.0.857053515]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 30
        Text: '  Example: the thickness or material type of an operation.'
        Transparent: true
      ]
    }
    Component LabelAggregateExplanation
    {
      #keys: '[144564.0.857053513]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 28
        Text: 'The characteristic is available based on the cumulative value of the attribute.'
        Transparent: true
      ]
    }
    Component LabelAggregateExample
    {
      #keys: '[144564.0.857053512]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 60
        Text: '  Example: the total coil length, total duration, or number of tasks, which can be used to determine the scope of the rule.'
        Transparent: true
      ]
    }
    Component LabelNormal
    {
      #keys: '[144564.0.857053511]'
      BaseType: 'Label'
      Properties:
      [
        Font: 'FontBold'
        Text: '• Normal:'
        Transparent: true
      ]
    }
    Component LabelAggregate
    {
      #keys: '[144564.0.857053516]'
      BaseType: 'Label'
      Properties:
      [
        Font: 'FontBold'
        Text: '• Aggregate:'
        Transparent: true
      ]
    }
    Component LabelRange
    {
      #keys: '[136602.1.146447927]'
      BaseType: 'Label'
      Properties:
      [
        Font: 'FontBold'
        Text: '• Range:'
        Transparent: true
      ]
    }
    Component LabelRangeExample
    {
      #keys: '[136602.1.146447993]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 30
        Text: '  Example: the minimum and maximum temperature.'
        Transparent: true
      ]
    }
    Component LabelRangeExplanation
    {
      #keys: '[136602.1.146448135]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 28
        Text: 'A combination of a minimum and maximum value used as a range in the overlapping range rule.'
        Transparent: true
      ]
    }
  ]
  Properties:
  [
    Text: 'Details:'
    ModeledStringList ChildOrdering
    {
      c: LabelNormalExplanation
      c: LabeNormalExample
      c: FontBold
      c: LabelAggregateExplanation
      c: LabelAggregateExample
      c: LabelNormal
      c: LabelAggregate
      c: LabelRange
      c: LabelRangeExample
      c: LabelRangeExplanation
    }
  ]
}
