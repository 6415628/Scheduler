Quintiq file version 2.0
Component SplitterWndSanityCheckGroup_SanityCheckMessage
{
  #keys: '[129484.0.11073413]'
  BaseType: 'SplitterWnd'
  Children:
  [
    Component SplitterPaneSanityCheckGroups
    {
      #keys: '[129484.0.11073414]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 295 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListSanityCheckGroup
            Position { startcolumn: 295 startrow: 232 endcolumn: 295 endrow: 232 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 232 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListSanityCheckGroup
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Title: 'Sanity check groups'
      ]
    }
    Component SplitterPaneSanityCheckMessages
    {
      #keys: '[129484.0.11073415]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 729 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListSanityCheckMessage
            Position { startcolumn: 729 startrow: 638 endcolumn: 729 endrow: 638 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 638 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListSanityCheckMessage
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Title: 'Sanity check messages'
      ]
    }
  ]
  Properties:
  [
    DoubleBuffering: false
    ModeledStringList ChildOrdering
    {
      c: SplitterPaneSanityCheckGroups
      c: SplitterPaneSanityCheckMessages
    }
  ]
}
