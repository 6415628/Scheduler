Quintiq file version 2.0
#root
#parent: SchedulerProductTC
OrphanComponent SCListDemandBatch
{
  #keys: '[141590.0.70947538]'
  BaseType: 'List'
  Children:
  [
    #child: ColumnTitles586
    Component popupList380
    {
      #keys: '[134450.0.78975950]'
      BaseType: 'popupList'
      Children:
      [
        Component PopupParent
        {
          #keys: '[514.0.129466]'
          BaseType: 'PopupParent'
          IsDerived: true
          Children:
          [
            Component menuSeparator { #keys: '[134372.0.66604377]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuBatchDetails { #keys: '[134372.0.66604484]' BaseType: 'Menu' Properties: [ BindDoubleClick: true Image: 'CUBES' Shortcut: 'Ctrl+B' Text: 'Batch details...' ] }
            Component MenuDeleteBatch { #keys: '[134372.0.66604700]' BaseType: 'Menu' Properties: [ Image: 'GARBAGE' Shortcut: 'Del' Text: 'Delete batch' ] }
            Component menuSeparator655 { #keys: '[134372.0.66605529]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuPlanBatchesToEarliestAvailableResource { #keys: '[134372.0.66606578]' BaseType: 'Menu' Properties: [ Image: 'planin' Shortcut: 'Ctrl+Enter' Text: 'Plan batches to earliest available resource' ] }
            Component MenuEditBatchType { #keys: '[134372.0.142631521]' BaseType: 'Menu' Properties: [ Image: 'DATA_EDIT' Shortcut: 'Ctrl+E' Text: 'Edit batch type...' ] }
            Component MenuOptimize
            {
              #keys: '[133896.0.974854861]'
              BaseType: 'Menu'
              Children:
              [
                Component MenuOptimizeSelected { #keys: '[133896.0.974857069]' BaseType: 'Menu' Properties: [ Image: 'ELEMENT_ADD' Shortcut: 'Ctrl+Shift+Enter' Text: 'Schedule' ] }
                Component MenuOptimizerAfterSchedule { #keys: '[133896.0.974858568]' BaseType: 'Menu' Properties: [ Image: 'ELEMENT_NEXT' Text: 'Schedule after current schedule' ] }
                Component MenuSelectDemandBatchAsMandatory { #keys: '[137186.0.1670487404]' BaseType: 'Menu' Properties: [ Image: 'ELEMENT_ADD' Shortcut: 'Ctrl+Shift+M' Text: 'Select in mandatory scope' ] }
                Component menuSeparatorOptimizerAfterSchedule { #keys: '[137186.0.1670487646]' BaseType: 'Menu' Properties: [ Separator: true ] }
                Component MenuSelectDemandBatchAsOptional { #keys: '[137186.0.1670488446]' BaseType: 'Menu' Properties: [ Image: 'ELEMENT_ADD' Shortcut: 'Ctrl+Shift+O' Text: 'Select in optional scope' ] }
                Component MenuRemoveDemandBatchFromOptimizerScope { #keys: '[137186.0.1670489256]' BaseType: 'Menu' Properties: [ Image: 'ELEMENT_DELETE' Shortcut: 'Ctrl+Shift+D' Text: 'Remove from scope' ] }
                Component MenuRemoveAllDemandBatchFromOptimizerScope { #keys: '[137186.0.1670489724]' BaseType: 'Menu' Properties: [ Image: 'ELEMENT_DELETE' Shortcut: 'Ctrl+Shift+Del' Text: 'Remove all from scope' ] }
              ]
              Properties:
              [
                Image: 'ELEMENT_REPLACE'
                Text: 'Optimize'
                Visible: false
                ModeledStringList ChildOrdering
                {
                  c: MenuOptimizeSelected
                  c: MenuOptimizerAfterSchedule
                  c: menuSeparatorOptimizerAfterSchedule
                  c: MenuSelectDemandBatchAsMandatory
                  c: MenuSelectDemandBatchAsOptional
                  c: MenuRemoveDemandBatchFromOptimizerScope
                  c: MenuRemoveAllDemandBatchFromOptimizerScope
                }
              ]
            }
            Component menuSeparator665 { #keys: '[133896.0.974860625]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component MenuUnplan { #keys: '[133896.0.974861473]' BaseType: 'Menu' Properties: [ Image: 'planout' Shortcut: 'Ctrl+Del' Text: '&Unplan' ] }
          ]
          Properties:
          [
            ModeledStringList ChildOrdering
            {
              c: MenuActions
              c: MenuFilter
              c: menuListQuintiqSetQuantor
              c: menuSeparator
              c: MenuBatchDetails
              c: MenuEditBatchType
              c: MenuDeleteBatch
              c: menuSeparator655
              c: MenuPlanBatchesToEarliestAvailableResource
              c: MenuOptimize
              c: menuSeparator665
              c: MenuUnplan
            }
          ]
        }
      ]
      Properties:
      [
        PosX: 35
        PosY: 60
      ]
    }
    Component GUIDataExtractor902
    {
      #keys: '[134450.0.78975951]'
      BaseType: 'GUIDataExtractor'
      Properties:
      [
        DataSet: 'Schedule'
        DataType: 'Schedule'
        PosX: 5
        PosY: 30
        Transformation: 'DemandBatch'
      ]
    }
    Component GUIDataSetLevel674
    {
      #keys: '[134450.0.78975952]'
      BaseType: 'GUIDataSetLevel'
      Properties:
      [
        Columns: 'DemandBatchColumns'
        DataExtractor: 'GUIDataExtractor902'
        PosX: 35
        PosY: 30
      ]
    }
  ]
  Properties:
  [
    AutoDrag: true
    BackgroundColor: 'Window'
    ContextMenu: 'popupList380'
    FullRowSelect: true
    ModeledStringList ChildOrdering
    {
      c: ColumnTitles586
      c: popupList380
      c: GUIDataExtractor902
      c: GUIDataSetLevel674
    }
  ]
  ResponseDefinitions:
  [
    DelegatedResponseDefinition OnClick id:Responsedef_SCListDemandBatch_Menu_OnClick
    {
      #keys: '[134450.0.78975953]'
      Initiator: 'Menu'
      IsInherited: false
      ResponseType: 'OnClick'
      Arguments:
      [
        ResponseDefinitionArgument selection
        {
          #keys: '[134451.1.653537512]'
          Binding: 'this.Selection()'
        }
      ]
    }
    DelegatedResponseDefinition OnClick id:Responsedef_SCListDemandBatch_GUIButtonBase_OnClick
    {
      #keys: '[134450.0.78975954]'
      Initiator: 'GUIButtonBase'
      IsInherited: false
      ResponseType: 'OnClick'
      Arguments:
      [
        ResponseDefinitionArgument selection
        {
          #keys: '[134451.1.653537558]'
          Binding: 'this.Selection()'
        }
      ]
    }
  ]
}
