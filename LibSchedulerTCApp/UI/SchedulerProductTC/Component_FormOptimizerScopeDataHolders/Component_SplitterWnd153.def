Quintiq file version 2.0
Component SplitterWnd153
{
  #keys: '[137548.0.1245906823]'
  BaseType: 'SplitterWnd'
  Children:
  [
    Component SplitterPane112
    {
      #keys: '[137548.0.1245906824]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 753 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListAllDemandBatchOptimizerDataHolder
            Position { startcolumn: 753 startrow: 867 endcolumn: 753 endrow: 867 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 867 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListAllDemandBatchOptimizerDataHolder
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Size: 21.4285714285714
        Title: 'All scoped demand batches'
      ]
    }
    Component SplitterPane108
    {
      #keys: '[137548.0.1245906825]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 141 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListMandatoryDemandBatchOptimizerDataHolder
            Position { startcolumn: 141 startrow: 952 endcolumn: 141 endrow: 952 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 952 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListMandatoryDemandBatchOptimizerDataHolder
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Size: 21.4285714285714
        Title: 'Mandatory demand batches'
      ]
    }
    Component SplitterPane375
    {
      #keys: '[137548.0.1245907043]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 287 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListOptionalDemandBatchOptimizerDataHolder
            Position { startcolumn: 287 startrow: 389 endcolumn: 287 endrow: 389 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 389 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListOptionalDemandBatchOptimizerDataHolder
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Size: 14.2857142857143
        Title: 'Optional demand batches'
      ]
    }
    Component SplitterPane117
    {
      #keys: '[137548.0.1245908310]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 935 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListAllDemandOptimizerDataHolder
            Position { startcolumn: 935 startrow: 836 endcolumn: 935 endrow: 836 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 836 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListAllDemandOptimizerDataHolder
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Size: 14.2857142857143
        Title: 'All scoped demands'
      ]
    }
    Component SplitterPane353
    {
      #keys: '[137548.0.1245908609]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 269 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListMandatoryDemandOptimizerDataHolder
            Position { startcolumn: 269 startrow: 761 endcolumn: 269 endrow: 761 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 761 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListMandatoryDemandOptimizerDataHolder
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Size: 14.2857142857143
        Title: 'Mandatory demands'
      ]
    }
    Component SplitterPane728
    {
      #keys: '[137548.0.1245910909]'
      BaseType: 'SplitterPane'
      GBLayout
      {
        Type: 'internal[GBLayoutDefinition]'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 726 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => /ListOptionalDemandOptimizerDataHolder
            Position { startcolumn: 726 startrow: 889 endcolumn: 726 endrow: 889 }
          }
        ]
        Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 128 id: 889 parent: 0 }
        ]
      }
      Children:
      [
        #child: ListOptionalDemandOptimizerDataHolder
      ]
      Properties:
      [
        Border: true
        DoubleBuffering: false
        Size: 14.2857142857143
        Title: 'Optional demands'
      ]
    }
  ]
  Properties:
  [
    DoubleBuffering: false
    ModeledStringList ChildOrdering
    {
      c: SplitterPane112
      c: SplitterPane108
      c: SplitterPane375
      c: SplitterPane117
      c: SplitterPane353
      c: SplitterPane728
    }
  ]
}
