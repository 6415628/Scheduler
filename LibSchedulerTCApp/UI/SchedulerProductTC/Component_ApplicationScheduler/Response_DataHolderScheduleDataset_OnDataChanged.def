Quintiq file version 2.0
#parent: DataHolderScheduleDataset
Response OnDataChanged () id:Response_ApplicationScheduler_DataHolderScheduleDataset_OnDataChanged
{
  #keys: '[127864.0.534641349]'
  Body:
  [*
    // Triggered when dataset changes - new scenario, duplicate scenario, selecting a different scenario, then we will update the UI
    ApplicationScheduler.ApplySettingsSchedulerFeatures();
    
    // Flush optimizer scope when Schedule dataset is changed
    DataHolderOptimizerMandatoryOperations.Data().Flush();
    DataHolderOptimizerOptionalOperations.Data().Flush();
    DataHolderOptimizerMandatoryDemands.Data().Flush();
    DataHolderOptimizerOptionalDemands.Data().Flush();
    DataHolderOptimizerAllScopedDemandBatches.Data().Flush();
    DataHolderOptimizerAllScopedDemands.Data().Flush();
    DataHolderOptimizerAllScopedOperations.Data().Flush();
    DataHolderOptimizerMandatoryDemandBatches.Data().Flush();
    DataHolderOptimizerOptionalDemandBatches.Data().Flush();
  *]
  CanBindMultiple: false
  DefinitionID: 'Responsedef_GUIComponent_OnDataChanged'
}
