Quintiq file version 2.0
Component Toolbar1
{
  #keys: '[514.0.118234]'
  BaseType: 'Toolbar'
  GBLayout
  {
    Type: 'internal[GBLayoutDefinition]'
    Columns:
    [
      GBFlow.Column { grow: 0 id: 1 parent: 0 }
      GBFlow.Column { grow: 0 id: 2 parent: 0 }
      GBFlow.Column { grow: 0 id: 3 parent: 0 }
      GBFlow.Column { grow: 0 id: 12 parent: 0 }
      GBFlow.Column { grow: 0 id: 870 parent: 0 }
      GBFlow.Column { grow: 0 id: 769 parent: 0 }
      GBFlow.Column { grow: 0 id: 648 parent: 0 }
      GBFlow.Column { grow: 0 id: 33 parent: 0 }
      GBFlow.Column { grow: 0 id: 478 parent: 0 }
      GBFlow.Column { grow: 0 id: 27 parent: 0 }
      GBFlow.Column { grow: 0 id: 143 parent: 0 }
      GBFlow.Column { grow: 128 id: 25 parent: 0 }
      GBFlow.Column { grow: 128 id: 416 parent: 0 }
      GBFlow.Column { grow: 0 id: 448 parent: 0 }
      GBFlow.Column { grow: 0 id: 191 parent: 0 }
      GBFlow.Column { grow: 0 id: 148 parent: 0 }
      GBFlow.Column { grow: 0 id: 984 parent: 0 }
    ]
    Elements:
    [
      GBElement
      {
        Component => /LibPTF_pnlTestRunner
        Position { startcolumn: 143 startrow: 1 endcolumn: 143 endrow: 1 }
      }
      GBElement
      {
        Component => /LibGUIFiltering_PanelFilterBox
        Position { startcolumn: 1 startrow: 455 endcolumn: 984 endrow: 455 }
      }
      GBElement
      {
        Component => /LibOpt_PanelInstall529
        Position { startcolumn: 25 startrow: 1 endcolumn: 25 endrow: 2 }
      }
      GBElement
      {
        Component => /SC_SelectionScenario
        Position { startcolumn: 984 startrow: 1 endcolumn: 984 endrow: 1 }
      }
      GBElement
      {
        Component => btnUndo
        Position { startcolumn: 1 startrow: 1 endcolumn: 1 endrow: 1 }
      }
      GBElement
      {
        Component => Button2
        Position { startcolumn: 2 startrow: 1 endcolumn: 2 endrow: 1 }
      }
      GBElement
      {
        Component => ButtonImportERP
        Position { startcolumn: 3 startrow: 1 endcolumn: 3 endrow: 1 }
      }
      GBElement
      {
        Component => ButtonExportAll
        Position { startcolumn: 769 startrow: 1 endcolumn: 769 endrow: 1 }
      }
      GBElement
      {
        Component => ButtonImportMES
        Position { startcolumn: 870 startrow: 1 endcolumn: 870 endrow: 1 }
      }
      GBElement
      {
        Component => ButtonImportFromCP
        Position { startcolumn: 12 startrow: 1 endcolumn: 12 endrow: 1 }
      }
      GBElement
      {
        Component => LabelOptimizerStatusMsg
        Position { startcolumn: 27 startrow: 1 endcolumn: 27 endrow: 1 }
      }
      GBElement
      {
        Component => ButtonSynchronizeKT
        Position { startcolumn: 33 startrow: 1 endcolumn: 33 endrow: 1 }
      }
      GBElement
      {
        Component => ButtonDoSanityCheck
        Position { startcolumn: 648 startrow: 1 endcolumn: 648 endrow: 1 }
      }
      GBElement
      {
        Component => LabelSelectedOptimizer
        Position { startcolumn: 191 startrow: 1 endcolumn: 191 endrow: 1 }
      }
      GBElement
      {
        Component => ImageOptimizerRunning
        Position { startcolumn: 478 startrow: 1 endcolumn: 478 endrow: 1 }
      }
      GBElement
      {
        Component => LabelSelectedOptimizerName
        Position { startcolumn: 148 startrow: 1 endcolumn: 148 endrow: 1 }
      }
      GBElement
      {
        Component => /PanelToBeDeletedWhenSelectionScenarioCanBeAlignedRight
        Position { startcolumn: 1 startrow: 710 endcolumn: 25 endrow: 710 }
      }
      GBElement
      {
        Component => LabelRunningInTimeConstraintMode
        Position { startcolumn: 448 startrow: 1 endcolumn: 448 endrow: 1 }
      }
    ]
    Gaps: [ left: 5 right: 5 top: 5 bottom: 5 inner: 5 ]
    Rows:
    [
      GBFlow.Row { grow: 0 id: 1 parent: 0 }
      GBFlow.Row { grow: 128 id: 2 parent: 0 }
      GBFlow.Row { grow: 128 id: 455 parent: 0 }
      GBFlow.Row { grow: 128 id: 710 parent: 0 }
    ]
  }
  Children:
  [
    Component btnUndo
    {
      #keys: '[514.0.118235]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'UNDO'
        LayoutGroup: 'UndoRedo'
        Shortcut: 'Ctrl+Z'
        SizePosition: 'lt2 24 3 25'
        Tooltip: 'Undo'
      ]
    }
    Component Button2
    {
      #keys: '[514.0.118236]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'REDO'
        LayoutGroup: 'UndoRedo'
        Shortcut: 'Ctrl+Y'
        SizePosition: 'lt24 46 3 25'
        Tooltip: 'Redo'
      ]
    }
    Component ButtonImportERP
    {
      #keys: '[104006.1.80064148]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'IMPORT_ERP'
        SizePosition: 'lt46 68 3 25'
        Tooltip: 'Import data'
      ]
    }
    Component ButtonExportAll
    {
      #keys: '[104006.1.86468482]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'ENVIRONMENT_OK'
        LayoutGroup: 'ShopFloor'
        SizePosition: 'lt69 91 3 25'
        Tooltip: 'Publish the schedule'
      ]
    }
    Component ButtonImportMES
    {
      #keys: '[11932.0.287086868]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'IMPORT_MES'
        LayoutGroup: 'ShopFloor'
        SizePosition: 'lt91 113 3 25'
        Tooltip: 'Import feedback from Shop Floor'
      ]
    }
    Component ButtonImportFromCP
    {
      #keys: '[105706.0.1986132961]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'IMPORT_CP'
        SizePosition: 'lt113 135 3 25'
        Tooltip: 'Import data from Company Planner'
      ]
    }
    Component LabelOptimizerStatusMsg
    {
      #keys: '[109706.2.318932768]'
      BaseType: 'Label'
      Properties:
      [
        DataBinding: 'Schedule.OptimizerStatusMessage'
        Text: ''
        Transparent: true
      ]
    }
    Component ButtonSynchronizeKT
    {
      #keys: '[122448.0.396967822]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'DATA_REFRESH'
        Tooltip: 'Synchronize knowledge settings'
      ]
    }
    #child: LibPTF_pnlTestRunner
    Component ButtonDoSanityCheck
    {
      #keys: '[129484.0.11142942]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'SMILEY-GREEN'
        Shortcut: 'F5'
        Tooltip: 'Shows sanity check messages'
      ]
    }
    #child: LibGUIFiltering_PanelFilterBox
    Component LabelSelectedOptimizer
    {
      #keys: '[137186.0.151818202]'
      BaseType: 'Label'
      Properties:
      [
        Text: 'Selected optimizer:'
        Transparent: true
      ]
    }
    Component ImageOptimizerRunning
    {
      #keys: '[137186.0.151819527]'
      BaseType: 'Image'
      Properties:
      [
        Image: 'MEDIA_PLAY_GREEN'
        Tooltip: 'Optimizer is currently running'
        Transparent: true
      ]
    }
    Component LabelSelectedOptimizerName
    {
      #keys: '[137186.0.191036262]'
      BaseType: 'Label'
      Properties:
      [
        DataBinding: 'DataHolderScheduleDataset.Data.Optimizer.SelectedOptimizer'
        Text: ''
        Transparent: true
      ]
    }
    #child: PanelToBeDeletedWhenSelectionScenarioCanBeAlignedRight
    #child: LibOpt_PanelInstall529
    Component LabelRunningInTimeConstraintMode
    {
      #keys: '[143768.2.858288444]'
      BaseType: 'Label'
      Properties:
      [
        Text: 'Warning! Data-driven time contraints mode not fully supported in ThinClient.'
        TextColor: 'Red'
        Transparent: true
      ]
    }
    #child: SC_SelectionScenario
  ]
  Properties:
  [
    Border: false
    Size: 106
    ModeledStringList ChildOrdering
    {
      c: LibPTF_pnlTestRunner
      c: btnUndo
      c: LabelOptimizerStatusMsg
      c: Button2
      c: ButtonImportERP
      c: ButtonImportFromCP
      c: ButtonImportMES
      c: ButtonExportAll
      c: ButtonDoSanityCheck
      c: ButtonSynchronizeKT
      c: LibGUIFiltering_PanelFilterBox
      c: LabelSelectedOptimizer
      c: ImageOptimizerRunning
      c: LabelSelectedOptimizerName
      c: PanelToBeDeletedWhenSelectionScenarioCanBeAlignedRight
      c: LibOpt_PanelInstall529
      c: LabelRunningInTimeConstraintMode
      c: SC_SelectionScenario
    }
  ]
}
