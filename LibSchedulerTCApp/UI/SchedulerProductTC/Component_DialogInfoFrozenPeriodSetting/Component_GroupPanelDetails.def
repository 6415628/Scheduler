Quintiq file version 2.0
Component GroupPanelDetails
{
  #keys: '[144564.0.857053508]'
  BaseType: 'GroupPanel'
  GBLayout
  {
    Type: 'internal[GBLayoutDefinition]'
    Columns:
    [
      GBFlow.Column { grow: 128 id: 845 parent: 0 }
    ]
    Elements:
    [
      GBElement
      {
        Component => LabelFreezeByProgramDescription1
        Position { startcolumn: 845 startrow: 549 endcolumn: 845 endrow: 549 }
      }
      GBElement
      {
        Component => LabelFreezeByProgram
        Position { startcolumn: 845 startrow: 998 endcolumn: 845 endrow: 998 }
      }
      GBElement
      {
        Component => LabelFreezeByTask
        Position { startcolumn: 845 startrow: 677 endcolumn: 845 endrow: 677 }
      }
      GBElement
      {
        Component => LabelFreezeByTaskDescription1
        Position { startcolumn: 845 startrow: 364 endcolumn: 845 endrow: 364 }
      }
      GBElement
      {
        Component => LabelFreezeByProgramDescription2
        Position { startcolumn: 845 startrow: 105 endcolumn: 845 endrow: 105 }
      }
      GBElement
      {
        Component => LabelFreezeByTaskDescription2
        Position { startcolumn: 845 startrow: 506 endcolumn: 845 endrow: 506 }
      }
    ]
    Gaps: [ left: 5 right: 5 top: 5 bottom: 5 inner: 5 ]
    Rows:
    [
      GBFlow.Row { grow: 0 id: 998 parent: 0 }
      GBFlow.Row { grow: 0 id: 549 parent: 0 }
      GBFlow.Row { grow: 0 id: 105 parent: 0 }
      GBFlow.Row { grow: 0 id: 677 parent: 0 }
      GBFlow.Row { grow: 0 id: 364 parent: 0 }
      GBFlow.Row { grow: 0 id: 506 parent: 0 }
    ]
  }
  Children:
  [
    Component FontBold
    {
      #keys: '[144564.0.857053514]'
      BaseType: 'Font'
      Properties:
      [
        Bold: true
        PosX: 387
        PosY: 173
      ]
    }
    Component LabelFreezeByProgramDescription1
    {
      #keys: '[144564.0.857053512]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 28
        Text: '  Frozen period will be based on program. If the program starts within the frozen period and ends outside the frozen period,'
        Transparent: true
      ]
    }
    Component LabelFreezeByProgram
    {
      #keys: '[144564.0.857053516]'
      BaseType: 'Label'
      Properties:
      [
        Font: 'FontBold'
        Text: '• Freeze rolling schedule by program:'
        Transparent: true
      ]
    }
    Component LabelFreezeByTask
    {
      #keys: '[136602.1.146447927]'
      BaseType: 'Label'
      Properties:
      [
        Font: 'FontBold'
        Text: '• Freeze rolling schedule by task:'
        Transparent: true
      ]
    }
    Component LabelFreezeByTaskDescription1
    {
      #keys: '[136602.1.146447993]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 70
        Text: '   Frozen period will be based on tasks. Therefore if a program starts within the frozen period and ends outside the frozen period,'
        Transparent: true
      ]
    }
    Component LabelFreezeByProgramDescription2
    {
      #keys: '[143388.0.1723164435]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 28
        Text: '  then all task within that program will be frozen irrespective of whether they (tasks) start or end outside the frozen period.'
        Transparent: true
      ]
    }
    Component LabelFreezeByTaskDescription2
    {
      #keys: '[143388.0.1723164469]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 30
        Text: '   then it is possible that few tasks in program will not be frozen.'
        Transparent: true
      ]
    }
  ]
  Properties:
  [
    Text: 'Details:'
    ModeledStringList ChildOrdering
    {
      c: FontBold
      c: LabelFreezeByProgramDescription1
      c: LabelFreezeByProgram
      c: LabelFreezeByTask
      c: LabelFreezeByTaskDescription1
      c: LabelFreezeByProgramDescription2
      c: LabelFreezeByTaskDescription2
    }
  ]
}
