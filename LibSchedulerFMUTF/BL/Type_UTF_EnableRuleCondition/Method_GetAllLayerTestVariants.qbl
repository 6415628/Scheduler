Quintiq file version 2.0
#parent: #root
Method GetAllLayerTestVariants () #extension
{
  TextBody:
  [*
    variants := construct( Strings );
    
    // Get program scope rule related variants
    programscopes := construct( Strings );
    istransitionrules := construct( Booleans );
    isconditionenables := construct( Booleans );
    conditionScopes := construct( Strings );
    conditionValues := construct( Booleans );
    previousOperationAttributeValues := construct( Booleans );
    operationAttributeValues := construct( Booleans );
    hasNoViolateConstraints := construct( Booleans );
    
    programVariants := this.GetAllProgramTestVariants( programscopes,
                                                       istransitionrules,
                                                       isconditionenables,
                                                       conditionScopes,
                                                       conditionValues,
                                                       previousOperationAttributeValues,
                                                       operationAttributeValues,
                                                       hasNoViolateConstraints );
    
    // Get shutdown scope rule related variants
    isconditionenables := construct( Booleans );
    conditionScopes := construct( Strings );
    conditionValues := construct( Booleans );
    operationAttributeValues := construct( Booleans );
    hasNoViolateConstraints := construct( Booleans );
    
    shutdownVariants := this.GetAllShutdownTestVariants( isconditionenables,
                                                         conditionScopes,
                                                         conditionValues,
                                                         operationAttributeValues,
                                                         hasNoViolateConstraints );
    
    // Get resource scope rule related variants
    ruleSubtypes := construct( Strings );
    conditionTypes := construct( Strings );
    conditionValues := construct( Booleans );
    conditionScopes := construct( Strings );
    operation1AttributeValues := construct( Booleans );
    operation2AttributeValues := construct( Booleans );
    hasNoViolateConstraintsOnTask1s := construct( Booleans );
    hasNoViolateConstraintsOnTask2s := construct( Booleans );
    
    resourceVariants := this.GetAllConditionScopeTestVariants( ruleSubtypes,
                                            conditionTypes,
                                            conditionValues,
                                            conditionScopes,
                                            operation1AttributeValues,
                                            operation2AttributeValues,
                                            hasNoViolateConstraintsOnTask1s,
                                            hasNoViolateConstraintsOnTask2s );
    
    // Get genenal rule related variants
    conditionTypes := construct( Strings );
    conditionValues := construct( Booleans );
    operationAttributeValues := construct( Booleans );
    hasNoViolateConstraintsOnTasks := construct( Booleans );
    
    generalVariants := this.GetAllResourceTestVariants( conditionTypes,
                                                        conditionValues,
                                                        operationAttributeValues,
                                                        hasNoViolateConstraintsOnTasks );
    
    // Combined resource and program variants
    variants := resourceVariants.Union( programVariants ).Union( shutdownVariants ).Union( generalVariants );
    
    return &variants;
  *]
}
