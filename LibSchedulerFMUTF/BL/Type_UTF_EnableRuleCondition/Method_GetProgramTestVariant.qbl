Quintiq file version 2.0
#parent: #root
Method GetProgramTestVariant (output Boolean isvariantfound, output String programscope, output Boolean istransitionrule, 
  output Boolean isconditionenable, output String conditionScope, output Boolean conditionValue, 
  output Boolean previousOperationAttributeValue, output Boolean operationAttributeValue, output Boolean hasNoViolateConstraint)
{
  Description: "Retrieves the program test variant's values."
  TextBody:
  [*
    programscopes := construct( Strings );
    istransitionrules := construct( Booleans );
    isconditionenables := construct( Booleans );
    conditionScopes := construct( Strings );
    conditionValues := construct( Booleans );
    previousOperationAttributeValues := construct( Booleans );
    operationAttributeValues := construct( Booleans );
    hasNoViolateConstraints := construct( Booleans );
    
    variants := this.GetAllProgramTestVariants( programscopes,
                                                istransitionrules,
                                                isconditionenables,
                                                conditionScopes,
                                                conditionValues,
                                                previousOperationAttributeValues,
                                                operationAttributeValues,
                                                hasNoViolateConstraints );
    
    
    // Look for data for specified variant
    variantNr := variants.Find( this.Variant() );
    isvariantfound := variantNr >= 0;
    if( isvariantfound )
    { 
      programscope := programscopes.Element( variantNr );
      istransitionrule := istransitionrules.Element( variantNr );
      isconditionenable := isconditionenables.Element( variantNr );
      conditionScope := conditionScopes.Element( variantNr );
      conditionValue := conditionValues.Element( variantNr );
      previousOperationAttributeValue := previousOperationAttributeValues.Element( variantNr );
      operationAttributeValue := operationAttributeValues.Element( variantNr );
      hasNoViolateConstraint := hasNoViolateConstraints.Element( variantNr );
    }
  *]
}
