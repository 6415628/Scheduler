Quintiq file version 2.0
#parent: #root
Method PTF_PopulateParametersInfo () id:Method_LibPTF_dlgCreateEditTestScript_PTF_PopulateParametersInfo
{
  #keys: '[103546.0.102532833]'
  Body:
  [*
    // Set the tooltip with some brief description for the selected standard action
    keyword  := selKeyWord.BoundValue();
    infotext := "";
    
    if( keyword = LibPTF_StandardAction::AutoClose() )
    {
      infotext := "Close the Runner automatically when the script is completely executed.";
    }
    else if( keyword = LibPTF_StandardAction::CloseAllForms() )
    {
      infotext := "Close all the opened forms.";
    }
    else if( keyword = LibPTF_StandardAction::Loop() )
    {
      infotext := "Loop the actions within the block for a specified number of times.";
    }
    else if( keyword = LibPTF_StandardAction::OpenView() )
    {
      infotext := "Open the specified view.";
    }
    else if( keyword = LibPTF_StandardAction::ScrollGCLeftRight() )
    {
      infotext := "Scroll the gantt chart by the specified number of units." + String::NewLine()
                  + "Positive numbers (e.g. 1) : scroll to right." + String::NewLine()
                  + "Negative numbers (e.g. -1): scroll to left.";
    }
    else if( keyword = LibPTF_StandardAction::ScrollGCPageLeftRight() )
    {
      infotext := "Scroll the gantt chart by the specified number of pages." + String::NewLine()
                  + "Positive numbers (e.g. 1) : scroll to right." + String::NewLine()
                  + "Negative numbers (e.g. -1): scroll to left.";
    }
    else if( keyword = LibPTF_StandardAction::ScrollGCUpDown() )
    {
      infotext := "Scroll the gantt chart by the specified number of units." + String::NewLine()
                  + "Positive numbers (e.g. 1) : scroll up." + String::NewLine()
                  + "Negative numbers (e.g. -1): scroll down.";
    }
    else if( keyword = LibPTF_StandardAction::ScrollGCPageUpDown() )
    {
      infotext := "Scroll the gantt chart by the specified number of pages." + String::NewLine()
                  + "Positive numbers (e.g. 1) : scroll up." + String::NewLine()
                  + "Negative numbers (e.g. -1): scroll down.";
    }
    else if( keyword = LibPTF_StandardAction::ScrollGCToTop() )
    {
      infotext := "Scroll the gantt chart to the top (first row).";
    }
    else if( keyword = LibPTF_StandardAction::ScrollGCToBottom() )
    {
      infotext := "Scroll the gantt chart to the bottom (last row).";
    }
    else if( keyword = LibPTF_StandardAction::ScrollGCToNow() )
    {
      infotext := "Scroll the gantt chart to the current time.";
    }
    else if( keyword = LibPTF_StandardAction::ScrollListToLast() )
    {
      infotext := "Scroll the list to the bottom (last item).";
    }
    else if( keyword = LibPTF_StandardAction::SelectListFrom() )
    {
      infotext := "Select an entry in the list specified by an index.";
    }
    else if( keyword = LibPTF_StandardAction::Wait() )
    {
      infotext := "Wait for the specified time in order to simulate user thinking time." + String::NewLine()
                  + "If two arguments are specified a random value between <MinTimeInSeconds> and <MaxTimeInSeconds> will be generated.";
    }
    else if( keyword = LibPTF_StandardAction::ZoomGC() )
    {
      infotext := "Zoom the gantt chart by the specified zoom level." + String::NewLine()
                  + "Positive numbers (e.g. 1) : zoom in." + String::NewLine()
                  + "Negative numbers (e.g. -1): zoom out.";
    }
    else if( keyword = LibPTF_StandardAction::ProfilerStart() )
    {
      infotext := "Start a server Profiler session.";
    }
    else if( keyword = LibPTF_StandardAction::ProfilerReset() )
    {
      infotext := "Reset server Profiler session and export the report at the specified file name in the result log folder.";
    }
    else if( keyword = LibPTF_StandardAction::ProfilerStop() )
    {
      infotext := "Stop server Profiler session and export the report at the specified file name in the result log folder.";
    }
    else
    {
      infotext := "";
    }
    
    imgKeyWordParameter.SetProperty( 'Tooltip', infotext );
  *]
}
