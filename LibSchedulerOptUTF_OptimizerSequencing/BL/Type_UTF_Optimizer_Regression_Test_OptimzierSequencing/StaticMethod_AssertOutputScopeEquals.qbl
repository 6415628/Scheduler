Quintiq file version 2.0
#parent: #root
StaticMethod AssertOutputScopeEquals (LibOpt_ScopeElements scope, LibUTF_IterationRun utf_run, LibOpt_Component component)
{
  Description:
  [*
    asserts that the given component has successfully executed exactly once and that its output scope equals the given subscope.
    
    the optimizer run has to have finished and run with scope debugging enabled.
  *]
  TextBody:
  [*
    // mbr23 Jan-10-2020 (created)
    Transaction::Transaction().Propagate();
    utf_run.AssertEqual( 1, component.NrTimesCalled(), 'The component ' + component.Name() + ' should have executed exactly once.' );
    utf_run.AssertEqual( 1, counter( component, SnapshotComponent, snap, true ), 'The component ' + component.Name() + ' should have exactly one snapshot.' );
    snapshot := select( component, SnapshotComponent, snap, true );
    out_scope := snapshot.OutputScope();
    
    diff1 := out_scope.ScopeElements().Difference( scope );
    utf_run.AssertTrue( diff1.Size() = 0, 'The output scope of component ' + component.Name() + ' contains more elements than expected.' );
    
    diff2 := scope.Difference( out_scope.ScopeElements() );
    utf_run.AssertTrue( diff2.Size() = 0, 'The output scope of component ' + component.Name() + ' does not contain all expected elements.' );
  *]
}
