Quintiq file version 2.0
#parent: #root
Method Test073_NeighborhoodCreator_Product (Schedule schedule)
{
  Description: "Tests the NeighborhoodCreatorDistanceMetric's 'Product' dimension"
  TextBody:
  [*
    // mbr23 Feb-14-2020 (created)
    
    anchor := minselect( schedule, Operation_SC, op, true, Real::Random() ); // select any anchor
    neighborhood_size_operations := 15;
    distancemetric := construct( SettingsSequencingDistanceMetricForSequencing ); 
    // Set all values to 0
    distancemetric.UTF_SetAllToZero();
    distancemetric.ClosenessByProduct(1.0 ); // only enable the "product" dimension
    
    selector := this.Run_Test07x_NeighborhoodCreator( schedule, anchor, neighborhood_size_operations, distancemetric );
    
    minimum_output := construct( LibOpt_ScopeElements );
    minimum_output.Add( anchor.GetOrCreateScopeElement() );
    
    maximum_output := minimum_output.Copy();
    traverse( anchor.PlanUnit_SC().Order_SC().Product_SC(), Order_SC.PlanUnit_SC.Operation_SC, op )
    {
      maximum_output.Add( op.GetOrCreateScopeElement() );
    }
    // Add all resources to the potential output scope
    this.AddAllResourcesToScopeElements( schedule, &maximum_output );
    
    // assert that output is between `minimum_output` and `maximum_output`:
    selector.Run().Start() ->| this->( o ) {
      UTF_Optimizer_Regression_Test_OptimizerSequencing::AssertOutputScopeContains( minimum_output, this.Run(), selector );
      UTF_Optimizer_Regression_Test_OptimizerSequencing::AssertOutputScopeIsSubsetOf( maximum_output, this.Run(), selector );
    }->Exception()->(exception) {
      this.Run().RegisterFailure( "post-optimization assert failed:\n" + exception.Message() );
    };
  *]
}
