Quintiq file version 2.0
#parent: #root
Method Test023_RollbackCorrectlyHandledInOneTransactionAndLinkInOneTransaction (LibOpt_TestDataset dataset)
{
  TextBody:
  [*
    opt := this.Optimizer( dataset );
    run := opt.CreateRun();
    runcontextforutf := LibOpt_MyRunContextForUTF::Create( run );
    
    // Script of the rollback KPI
    kpi_script := opt.RollbackKPIScripted( 1 );
    kpi_script.Enqueue( 10.0 );
    kpi_script.Enqueue( 20.0 );
    
    count := opt.ComponentCounter( run, 'Counter' );
    
    subopt := opt.MPSuboptimizer( run, 'Subopt', runcontextforutf, & kpi_script );
    subopt.InOneTransaction( true );
    
    count.To( subopt ).AsOneTransaction( false );
    
    test := run->Start();
    
    test->|this->( v )
    {
      this.Run().AssertEqual( 7, run.Snapshot( relsize ), 'Expected # snapshots' );
      this.Run().AssertEqual( 1, subopt.SnapshotComponent( relsize ), 'Optimizer did not do 1 run' );
      this.Run().AssertEqual( 0, counter( run, Snapshot.astype( LibOpt_SnapshotError ), err, true ), 'No error snapshots expected' );
      this.Run().AssertEqual( 0, counter( run, Snapshot.astype( LibOpt_SnapshotWarning ), err, true ), 'No warning snapshots expected' );
      this.Run().AssertEqual( 1, counter( run, Snapshot.astype( LibOpt_SnapshotRollbackKPIScripted ), sn, true ), '# LibOpt_SnapshotRollbackKPIScripted' );
      
      snapshot := select( subopt, SnapshotComponent, sn, true );
      if( not isnull( snapshot ) )
      {
        this.Run().AssertEqual( 2, counter( snapshot, Children.astype( LibOpt_SnapshotKPI ), sn, true ),
                                'Expected 2 child snapshots of type `LibOpt_SnapshotKPI`' );
        this.Run().AssertTrue( exists( snapshot, Children.astype( LibOpt_SnapshotSuboptimizer ), sn, sn.IsRollback() ),
                               'Expected 1 child snapshots of type `LibOpt_SnapshotSuboptimizer` which represents a rollback.' );
      }
    };
  *]
  InterfaceProperties { Accessibility: 'Module' }
}
