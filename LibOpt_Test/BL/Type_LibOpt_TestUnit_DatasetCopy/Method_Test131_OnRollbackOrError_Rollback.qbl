Quintiq file version 2.0
#parent: #root
Method Test131_OnRollbackOrError_Rollback (LibOpt_TestDataset dataset)
{
  Description:
  [*
    Check if the `LibOpt_DatasetCopyOnRollbackOrError` type does not delete a dataset copy when a rollback occurs on a component.
    We place a `LibOpt_DatasetCopyOnRollbackOrError` dataset copy on the 'Initialize', 'Continue' and 'Finalize' component positions of the Flow component.
    This Flow component links to a Suboptimizer component. This Suboptimizer component will force a rollback. 
    We also create a `LibOpt_DatasetCopyOnRollbackOrError` dataset copy on the 'Initialize' and 'Handle rollback' component positions of the Suboptimizer component.
  *]
  TextBody:
  [*
    // evr3 Jul-6-2020 (created)
    opt := this.Optimizer( dataset );
    opt.IsCreatingDatasetCopiesEnabled( true );
    run := opt.CreateRun();
    
    // Create a Flow component and and attach a 'LibOpt_DatasetCopyOnRollbackOrError' object to the 'Initialize', 'Continue' and 'Finalize' component positions of this Flow component.
    flowcomponent := opt.ComponentFlow( run, 'Flow', true );
    LibOpt_TestUnit_DatasetCopy::CreateDatasetCopiesForNormalComponentPositions( flowcomponent, 
                                                                                 // The LibOpt_DatasetCopyOnRollbackOrError type will always create a dataset copy.
                                                                                 // This dataset copy will only be deleted if no rollbacks and no errors occur.
                                                                                 // We will schedule a rollback in this unit test, so we expect that all dataset copies will be not be deleted.
                                                                                 typeof( LibOpt_DatasetCopyOnRollbackOrError ).Name() );
    
    // Script of the rollback KPI
    kpi_script := opt.RollbackKPIScripted( 1 );
    kpi_script.Enqueue( 10.0 );
    kpi_script.Enqueue( 20.0 ); // We are minimizing the KPI, so this higher KPI will result in a rollback.
    
    // Create a Suboptimizer component that forces a rollback. 
    runcontextforutf := LibOpt_MyRunContextForUTF::Create( run );
    suboptimizer := opt.MPSuboptimizer( run, 'Suboptimizer', runcontextforutf, & kpi_script );
    flowcomponent.To( suboptimizer )
    // Set a 'LibOpt_DatasetCopyOnRollbackOrError' object on the 'Initialize' and the 'Handle rollback' component positions. 
    initializeposition := select( suboptimizer, ComponentPosition, position, position.Name() = LibOpt_Component::ComponentPosition_Initialize() );
    initializeposition.SetDatasetCopy( typeof( LibOpt_DatasetCopyOnRollbackOrError ).Name() );
    rollbackposition := select( suboptimizer, ComponentPosition, position, position.Name() = LibOpt_Suboptimizer::ComponentPosition_Rollback() );
    rollbackposition.SetDatasetCopy( typeof( LibOpt_DatasetCopyOnRollbackOrError ).Name() );
    
    streamrun := run.Start(); 
    
    // Wait until the run is finished.
    str := streamrun
    ->|stream[Void]::Wait( this.MDSEditorUpdateTime() ) // Wait some time to ensure that the dataset copies are succesfully created.
    ->|void->()
    {
      traverse( run,
                Component.ComponentPosition,
                componentposition,
                not isnull( componentposition.DatasetCopyConditional() ) 
                )
      {
        LibOpt_TestUnit_DatasetCopy::AssertsForComponentPositionCreatedDataset( this, componentposition );
      }
    }
    this.NoException( str );
    this.DeleteDatasetCopies( dataset, str );
  *]
  InterfaceProperties { Accessibility: 'Module' }
}
