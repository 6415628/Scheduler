Quintiq file version 2.0
#parent: #root
Method Update (NamedValueTree nvt)
{
  Description:
  [*
    Updates this object's data with the given NVT.
    Recursively also updates owned objects.
    Precondition: the given NVT must be of the same format as generated by `this.ExportNVT()`.
  *]
  TextBody:
  [*
    // mbr23 Apr-24-2020 (created)
    // code inspired from LibOpt_Settings::Import()
    
    root := nvt.Root().AddChild( nvt.GetHandle( this.DefinitionName() ) );
    root.SetValue( this.Key() );
    
    traverse( nvt.Root().Children(), Elements, child, child <> root )
    {
      child.Move( root, true );
    }
    
    NVTPortable::RemoveMetadata( nvt, root );
    NVTPortable::RenameAfterType( typeofexpression( this ), nvt, root );
    
    new_owned := NamedValueTreeIO::ImportObject( nvt, root, typeofexpression( this ) ).astype( NVTPortable );
    
    this.Update( new_owned ); // edit the current object
    new_owned.Delete(); // delete the new object. we don't want to create one, but just edit the current one.
  *]
}
