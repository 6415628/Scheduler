Quintiq file version 2.0
#parent: #root
StaticMethod ConvertDateTimeTo3DSpaceString (DateTime dateTime_i) as String
{
  Description: 'Convert a DateTime to a String in the format that is expected by the 3DSpace.'
  TextBody:
  [*
    // Create a DateTimeConverter that uses the expected format.
    converter := DateTimeToString::StandardConverter();
    converter.SetCustomConversion();
    converter.CustomFormatString( LibDIF_Util::DATETIME_FORMAT_3DSPACE() );
    
    // Append the timezone-offset using 'normal' formatting, because the converter doesn't return "+0000"
    // when there is no offset, and the platform is expecting that.
    return converter.Convert( dateTime_i ) + ":" + dateTime_i.Format( "TZZ" );
  *]
}
