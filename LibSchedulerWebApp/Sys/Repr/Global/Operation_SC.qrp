Quintiq file version 2.0
#parent: #root
TypeRepresentation Operation_SC
{
  Synonym: 'Operation'
  AttributeRepresentation DefinitionName
  {
    AttributeKey: '[1.2.1944]'
    Visibility: 'User'
  }
  AttributeRepresentation DueDate
  {
    AttributeKey: '[100134.0.39860353]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'MEDIUMDATEOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation EarliestEnd
  {
    AttributeKey: '[100134.0.39855509]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:mOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation EarliestStart
  {
    AttributeKey: '[100134.0.39858507]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:mOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation End
  {
    AttributeKey: '[100134.0.39859345]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:m OnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation ExpectedDuration
  {
    AttributeKey: '[100134.0.39856832]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'H:m'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation LatestEnd
  {
    AttributeKey: '[107652.0.1023503329]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:mOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation LatestStart
  {
    AttributeKey: '[107652.0.1023593479]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:mOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation MPS_WindowEnd
  {
    AttributeKey: '[105706.0.1605563351]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MMOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation MaterialAvailableTime
  {
    AttributeKey: '[100134.0.41197451]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:mOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation PlannedDate
  {
    AttributeKey: '[100134.0.42498702]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:mOnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation Practice
  {
    AttributeKey: '[109706.2.241255493]'
    Conditional:
    [
      DataRepresentation.Conditional
      {
        BackgroundColor: '$CCFFFF'
        ConditionBody: "object.Practice()='VZPL FK'"
        ConversionBody: ''
        DefaultBackgroundColor: false
        InheritConversion: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: '$CCCCFF'
        ConditionBody: "object.Practice()='OZG FK'"
        ConversionBody: ''
        DefaultBackgroundColor: false
        InheritConversion: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: '$FFCCFF'
        ConditionBody: "object.Practice()='OZG FKSH'"
        ConversionBody: ''
        DefaultBackgroundColor: false
        InheritConversion: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: '$FFCCCC'
        ConditionBody: "object.Practice()='OZPL FK'"
        ConversionBody: ''
        DefaultBackgroundColor: false
        InheritConversion: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: '$FFFFCC'
        ConditionBody: "object.Practice()='OZPL FKSH'"
        ConversionBody: ''
        DefaultBackgroundColor: false
        InheritConversion: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: '$CCFFCC'
        ConditionBody: "object.Practice()='VZPL FKSH'"
        ConversionBody: ''
        DefaultBackgroundColor: false
        InheritConversion: false
      }
    ]
  }
  AttributeRepresentation SequenceNr
  {
    Alignment: 'Center'
    AttributeKey: '[122454.0.45109212]'
  }
  AttributeRepresentation Start
  {
    AttributeKey: '[100134.0.39859681]'
    Conditional:
    [
    ]
    DataRepresentation.Default
    {
      ConversionBody: ''
      FormatString: 'D-MM H:m OnMax(-)OnMin(-)'
      InheritConversion: false
      InheritFormatting: false
    }
  }
  AttributeRepresentation Width
  {
    Alignment: 'Left'
    AttributeKey: '[109706.1.1671636769]'
    Conditional:
    [
      DataRepresentation.Conditional
      {
        BackgroundColor: '$666666'
        ConditionBody: 'object.Width()=2000'
        ConversionBody: ''
        DefaultBackgroundColor: false
        FormatString: 'N(Dec(0))'
        InheritConversion: false
        InheritFormatting: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: 'White'
        ConditionBody: 'object.Width()=1250'
        ConversionBody: ''
        DefaultBackgroundColor: false
        FormatString: 'N(Dec(0))'
        InheritConversion: false
        InheritFormatting: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: '$CCCCCC'
        ConditionBody: 'object.Width()=1500'
        ConversionBody: ''
        DefaultBackgroundColor: false
        FormatString: 'N(Dec(0))'
        InheritConversion: false
        InheritFormatting: false
      }
      DataRepresentation.Conditional
      {
        BackgroundColor: '$999999'
        ConditionBody: 'object.Width()=1750'
        ConversionBody: ''
        DefaultBackgroundColor: false
        FormatString: 'N(Dec(0))'
        InheritConversion: false
        InheritFormatting: false
      }
    ]
  }
  ConstraintRepresentation IsScheduledOnTime
  {
    ConstraintKey: '[107652.0.1051155665]'
    DefaultText: false
    HappyImage: ''
    InheritColorSource: false
    SadImage: 'ALARMCLOCK'
    Text: 'The due date of the operation is @this.DueDate()@ but it is scheduled on @this.End()@, later by @this.End() - this.DueDate()@.'
    UseColorScheme: false
  }
}
