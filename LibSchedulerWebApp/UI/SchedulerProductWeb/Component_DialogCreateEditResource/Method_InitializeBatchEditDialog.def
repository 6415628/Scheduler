Quintiq file version 2.0
#parent: #root
Method InitializeBatchEditDialog (ResourceGroup_SC resourceGroup) id:Method_DialogCreateEditResource_InitializeBatchEditDialog
{
  #keys: '[145574.0.1352323623]'
  Body:
  [*
    // Initlialize components (visiblity/enabled) in dialog for batch edit 
    
    PanelCalendarStrategy.Focus()
    
    // Hide Characteristics tab because it is only valid when editing a single selected resource
    PanelCharacteristics.Visible( false );
    
    // MaxBatchSize settings
    hasBatches := resourceGroup.HasBatches();
    PanelTopNumberPickerContainer.Visible( hasBatches );
    
    if( hasBatches )
    {
      TopNumberPickerMaxBatchSize.Number( DataHolderContentResource.Data().BatchResourceMaximumBatchSize() );
      TopNumberPickerMaxBatchSize.Enabled( false, "" );
    }
    
    // Calendar strategy tab settings
    RadioButtonGroupCalendarStrategy.Enabled( false, "");
    
    // Lead time strategy tab settings
    DropDownStringListLeadTimeStrategy.Enabled( false, "" );
    
    // Capacity overview tab settings
    EditFieldCapacityResource.Text( DataHolderContentResource.Data().CapacityResourceName() );
    RadioButtonGroupCapacityResource.Enabled( false, "");
    EditFieldCapacityResource.Enabled( false, "" );
    DropDownListNameofCapacityResource.Enabled( false, "" );
    NumberPickerResourceCapacity.Enabled( false, "" );
    
    // Frozen horizon
    CheckboxFrozenHorizonOnResource.Enabled( false, "" );
    DurationSelectorFrozenHorizonOnResource.Enabled( false, "" );
    
    // On hold period
    CheckboxOnHoldPeriodOnResource.Enabled( false, "" );
    DurationSelectorOnHoldPeriodOnResource.Enabled( false, "" );
    
    // Continuous tab settings
    isContinuous := resourceGroup.IsContinuous();
    PanelContinuous.Visible( isContinuous );
    
    if( isContinuous )
    {
      NumberPickerContinuousResourceLength.Enabled( false, "" );
      NumberPickerContinuousResourceSpeed.Enabled( false, "" );
      NumberPickerContinuousMinGapLength.Enabled( false, "" );
      NumberPickerContinuousMaxParallelLoadWidth.Enabled( false, "" );
      NumberPickerContinuousMinParallelLoadGap.Enabled( false, "" );
      CheckboxAlwaysLoadMaterialinTraverseDirection.Enabled( false, "" );
    }
  *]
}
