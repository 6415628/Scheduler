Quintiq file version 2.0
#parent: #root
Method Update (const OptimizerStrategy fromstrategy) #extension
{
  TextBody:
  [*
    // mbr23, 2020-02-19 (extended): added sequencing KPIs
    
    this.Description( fromstrategy.Description() );
    
    // Add relevant KPI weightage and scores here
    // MRSA KPI weight
    this.MRS_KPIWeightDeliveryPerformance( fromstrategy.MRS_KPIWeightDeliveryPerformance() );
    this.MRS_KPIWeightProductivity( fromstrategy.MRS_KPIWeightProductivity() );
    this.MRS_KPIWeightUnplanned( fromstrategy.MRS_KPIWeightUnplanned() );
    
    // MRSA KPI Constraints
    // Balance load
    this.MRS_KPIWeightConstraintBalanceLoad( fromstrategy.MRS_KPIWeightConstraintBalanceLoad() );
    this.MRS_KPIPowerConstraintBalanceLoad( fromstrategy.MRS_KPIPowerConstraintBalanceLoad() );
    this.MRS_KPIOffsetConstraintBalanceLoad( fromstrategy.MRS_KPIOffsetConstraintBalanceLoad() );
    // Latest end
    this.MRS_KPIUseConstraintLatestEnd( fromstrategy.MRS_KPIUseConstraintLatestEnd() );
    this.MRS_KPIWeightConstraintLatestEnd( fromstrategy.MRS_KPIWeightConstraintLatestEnd() );
    this.MRS_KPIPowerConstraintLatestEnd( fromstrategy.MRS_KPIPowerConstraintLatestEnd() );
    this.MRS_KPIOffsetConstraintLatestEnd( fromstrategy.MRS_KPIOffsetConstraintLatestEnd() );
    // Not allowed resource
    this.MRS_KPIUseConstraintNotAllowedResource( fromstrategy.MRS_KPIUseConstraintNotAllowedResource() );
    this.MRS_KPIWeightConstraintNotAllowedResourceConstrained( fromstrategy.MRS_KPIWeightConstraintNotAllowedResourceConstrained() );
    this.MRS_KPIWeightConstraintNotAllowedResource( fromstrategy.MRS_KPIWeightConstraintNotAllowedResource());
    this.MRS_KPIPowerConstraintNotAllowedResource( fromstrategy.MRS_KPIPowerConstraintNotAllowedResource() );
    this.MRS_KPIOffsetConstraintNotAllowedResource( fromstrategy.MRS_KPIOffsetConstraintNotAllowedResource() );
    // Order due date
    this.MRS_KPIWeightConstraintOptimizerDeliveryPerformance( fromstrategy.MRS_KPIWeightConstraintOptimizerDeliveryPerformance() );
    this.MRS_KPIPowerConstraintOptimizerDeliveryPerformance( fromstrategy.MRS_KPIPowerConstraintOptimizerDeliveryPerformance() );
    this.MRS_KPIOffsetConstraintOptimizerDeliveryPerformance( fromstrategy.MRS_KPIOffsetConstraintOptimizerDeliveryPerformance() );
    // Sum completion time
    this.MRS_KPIUseConstraintSumCompletionTime( fromstrategy.MRS_KPIUseConstraintSumCompletionTime() );
    this.MRS_KPIWeightConstraintSumCompletionTime( fromstrategy.MRS_KPIWeightConstraintSumCompletionTime() );
    this.MRS_KPIPowerConstraintSumCompletionTime( fromstrategy.MRS_KPIPowerConstraintSumCompletionTime() );
    this.MRS_KPIOffsetConstraintSumCompletionTime( fromstrategy.MRS_KPIOffsetConstraintSumCompletionTime() );
    
    // sequencing KPIs:
    this.Sequencing_KPIPowerConstraintMakespan( fromstrategy.Sequencing_KPIPowerConstraintMakespan() );
    this.Sequencing_KPIWeightConstraintMakespan( fromstrategy.Sequencing_KPIWeightConstraintMakespan() );
    this.Sequencing_KPIWeightConstraintMakespanResource( fromstrategy.Sequencing_KPIWeightConstraintMakespanResource() );
    
    // Programs KPIs
    this.KPIWeightMPSAdherenceEarly( fromstrategy.KPIWeightMPSAdherenceEarly() );
    this.KPIWeightMPSAdherenceLate( fromstrategy.KPIWeightMPSAdherenceLate() );
    this.KPIWeightOperationLateness( fromstrategy.KPIWeightOperationLateness() );
    this.KPIWeightPreferenceRuleViolation( fromstrategy.KPIWeightPreferenceRuleViolation() );
    this.KPIWeightQuantityDueNotScheduled( fromstrategy.KPIWeightQuantityDueNotScheduled() );
    this.KPIWeightTotalDummyWorkOrderTime( fromstrategy.KPIWeightTotalDummyWorkOrderTime() );
    this.KPIWeightShutdownTargetStart( fromstrategy.KPIWeightShutdownTargetStart() );
    
    // MPS Adherence penalty parameters
    this.PenaltyParameterMPSAdherenceEarlySlope_a( fromstrategy.PenaltyParameterMPSAdherenceEarlySlope_a() );
    this.PenaltyParameterMPSAdherenceEarlyPower_b( fromstrategy.PenaltyParameterMPSAdherenceEarlyPower_b() );
    this.PenaltyParameterMPSAdherenceEarlyOffset_c( fromstrategy.PenaltyParameterMPSAdherenceEarlyOffset_c() );
    this.PenaltyParameterMPSAdherenceLateSlope_a( fromstrategy.PenaltyParameterMPSAdherenceLateSlope_a() );
    this.PenaltyParameterMPSAdherenceLatePower_b( fromstrategy.PenaltyParameterMPSAdherenceLatePower_b() );
    this.PenaltyParameterMPSAdherenceLateOffset_c( fromstrategy.PenaltyParameterMPSAdherenceLateOffset_c() );
    
    // Shutdown target start penalty parameters
    this.PenaltyParameterShutdownTargetStart_a( fromstrategy.PenaltyParameterShutdownTargetStart_a() );
    this.PenaltyParameterShutdownTargetStartPower_b( fromstrategy.PenaltyParameterShutdownTargetStartPower_b() );
    this.PenaltyParameterShutdownTargetStartOffset_c( fromstrategy.PenaltyParameterShutdownTargetStartOffset_c() );
  *]
}
