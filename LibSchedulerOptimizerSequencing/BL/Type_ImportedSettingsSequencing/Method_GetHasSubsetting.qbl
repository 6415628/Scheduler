Quintiq file version 2.0
#parent: #root
Method GetHasSubsetting (output Strings feedback_o, MdlRelSideElement subsettingrelation) declarative remote as Boolean
{
  Description: 'Checks that the given relation exists for this object.'
  TextBody:
  [*
    // mbr23 Mar-27-2020 (created)
    isvalid := false;
    if( subsettingrelation = relation( ImportedSettingsSequencing, ImportedSettingsSequencingDistanceMetric ) )
    {
      isvalid := not isnull( this.ImportedSettingsSequencingDistanceMetric() );
    }
    else if( subsettingrelation = relation( ImportedSettingsSequencing, ImportedSettingsSequencingMeta ) )
    {
      isvalid := not isnull( this.ImportedSettingsSequencingMeta() );
    }
    else if( subsettingrelation = relation( ImportedSettingsSequencing, ImportedSettingsSequencingMRSIteration ) )
    {
      isvalid := not isnull( this.ImportedSettingsSequencingMRSIteration() );
    }
    else if( subsettingrelation = relation( ImportedSettingsSequencing, ImportedSettingsSequencingMRSMeta ) )
    {
      isvalid := not isnull( this.ImportedSettingsSequencingMRSMeta() );
    }
    else if( subsettingrelation = relation( ImportedSettingsSequencing, ImportedSettingsSequencingMRSPOA ) )
    {
      isvalid := not isnull( this.ImportedSettingsSequencingMRSPOA() );
    }
    else if( subsettingrelation = relation( ImportedSettingsSequencing, ImportedSettingsSequencingNeighborhoodCreator ) )
    {
      isvalid := not isnull( this.ImportedSettingsSequencingNeighborhoodCreator() );
    }
    else if( subsettingrelation = relation( ImportedSettingsSequencing, ImportedSettingsSequencingPOA ) )
    {
      isvalid := not isnull( this.ImportedSettingsSequencingPOA() );
    }
    else
    {
      assert( false, "unreachable code reached." );
    }
    
    if( not isnull( feedback_o ) and not isvalid )
    {
      feedback_o.Add( SanityCheckMessage::GetFormattedMessage( this.Id(), Translations::SC_ImportedSettingsOptimizer_NoSubsetting( subsettingrelation ) ) );
    }
    
    return isvalid;
  *]
}
