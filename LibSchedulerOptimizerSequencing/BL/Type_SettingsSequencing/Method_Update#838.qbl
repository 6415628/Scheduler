Quintiq file version 2.0
#parent: #root
Method Update (const ImportedSettingsSequencing imported_settings)
{
  Description:
  [*
    Update this setting object's data with the given imported data.
    Recursively also updates owned subsettings.
    Precondition: the 'hard' sanity check has passed for the imported object.
  *]
  TextBody:
  [*
    // mbr23 Mar-25-2020 (created)
    
    this.Update(); // ensures that all owned subsettings are created
    
    if( SettingsSequencing::IsModeAllowed( imported_settings.Mode() ) )
    {
      this.Mode( imported_settings.Mode() );
    }
    if( imported_settings.IsActive() )
    {
      this.Optimizer().ActiveSettings( relset, this );
    }
    
    if( not isnull( imported_settings.ImportedSettingsSequencingMRSIteration() ) )
    {
      this.MRSIteration().CopyFrom( imported_settings.ImportedSettingsSequencingMRSIteration() );
    }
    if( not isnull( imported_settings.ImportedSettingsSequencingMRSMeta() ) )
    {
      this.MRSMeta().CopyFrom( imported_settings.ImportedSettingsSequencingMRSMeta() );
    }
    if( not isnull( imported_settings.ImportedSettingsSequencingMRSPOA() ) )
    {
      this.MRSPOA().CopyFrom( imported_settings.ImportedSettingsSequencingMRSPOA() );
    }
    if( not isnull( imported_settings.ImportedSettingsSequencingDistanceMetric() ) )
    {
      this.DistanceMetric().CopyFrom( imported_settings.ImportedSettingsSequencingDistanceMetric() );
    }
    if( not isnull( imported_settings.ImportedSettingsSequencingMeta() ) )
    {
      this.Meta().CopyFrom( imported_settings.ImportedSettingsSequencingMeta() );
    }
    if( not isnull( imported_settings.ImportedSettingsSequencingNeighborhoodCreator() ) )
    {
      this.NeighborhoodCreator().CopyFrom( imported_settings.ImportedSettingsSequencingNeighborhoodCreator() );
    }
    if( not isnull( imported_settings.ImportedSettingsSequencingPOA() ) )
    {
      this.POA().CopyFrom( imported_settings.ImportedSettingsSequencingPOA() );
    }
    if( not isnull( imported_settings.ImportedSettingsSequencingConstruction() ) )
    {
      this.Construction().CopyFrom( imported_settings.ImportedSettingsSequencingConstruction() );
    }
  *]
}
