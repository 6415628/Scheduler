Quintiq file version 2.0
#parent: #root
InfoMessages id:#InfoMessages #extension
{
  InfoMessage Calendar_DivergentSettings (const String calendarIDs_i)
  {
    DefaultText: 'Calendars with divergent settings: @calendarIDs_i@'
  }
  InfoMessage Calendar_DoesNotExist
  {
    DefaultText: 'No calendar found.'
  }
  InfoMessage Calendar_HistoryTooBig
  {
    DefaultText: 'History cannot be greater than window.'
  }
  InfoMessage Calendar_MoreThanOneSelected
  {
    DefaultText: 'More than one calendar selected.'
  }
  InfoMessage Calendar_NoEventsToSubscribeTo
  {
    DefaultText: 'There are no events to which this calendar can subscribe.'
  }
  InfoMessage Calendar_NotSelected
  {
    DefaultText: 'No calendar selected.'
  }
  InfoMessage DateFormat
  {
    DefaultText: 'D2-MM-Y'
  }
  InfoMessage DateTimeFormat
  {
    DefaultText: 'D2-MM-Y H2:m'
  }
  InfoMessage DurationFormat
  {
    DefaultText: 'H:m'
  }
  InfoMessage Event_AlwaysAvailableDescription
  {
    DefaultText: 'Make all capacity of a calendar available.'
  }
  InfoMessage Event_AlwaysAvailableName
  {
    DefaultText: 'Always available'
  }
  InfoMessage Event_CanOnlyBeChangedByInitiator (const String initiator_i)
  {
    DefaultText: 'Can only be changed by the initiator of the event: @initiator_i@.'
  }
  InfoMessage Event_CannotBeChanged
  {
    DefaultText: 'An existing event cannot be changed when adding a participation to it.'
  }
  InfoMessage Event_CapacityMustBeBetween0and1 (const String zero_i, const String one_i)
  {
    DefaultText: 'Capacity must be between @zero_i@ and @one_i@.'
  }
  InfoMessage Event_EndMustBeGreaterThanStart
  {
    DefaultText: 'End must be greater than start.'
  }
  InfoMessage Event_EndMustBeGreaterThanStartOfCalendar (String end_i, constcontent String startOfCalendar_i)
  {
    DefaultText: 'End (@end_i@) must be greater than the start of the calendar (@startOfCalendar_i@).'
  }
  InfoMessage Event_InvalidEndDate
  {
    DefaultText: 'End date is invalid.'
  }
  InfoMessage Event_InvalidStartDate
  {
    DefaultText: 'Start date is invalid.'
  }
  InfoMessage Event_IsNotRecurring
  {
    DefaultText: 'Event is not recurring.'
  }
  InfoMessage Event_IsRecurring
  {
    DefaultText: 'Event is recurring, edit the recurrence period in order to change the date.'
  }
  InfoMessage Event_NoneAreRecurring
  {
    DefaultText: 'None of the events is recurring.'
  }
  InfoMessage Event_SelectAtLeastOne
  {
    DefaultText: 'Select at least one event.'
  }
  InfoMessage Participation_DoesNotContain (const String subject_i)
  {
    DefaultText: 'The selection does not contain @subject_i@.'
  }
  InfoMessage Participation_IsNot (const String subject_i)
  {
    DefaultText: 'The selection is not @subject_i@.'
  }
  InfoMessage Event_MoreThanOneCalendar
  {
    DefaultText: 'Events from more than one calendar selected.'
  }
  InfoMessage Event_InvalidCapacity
  {
    DefaultText: 'Enter a valid capacity.'
  }
  InfoMessage Event_NoSubject
  {
    DefaultText: 'Enter a name.'
  }
  InfoMessage Participation_NotAllTheSame (const String subject_i)
  {
    DefaultText: 'The selection contains at least one element that is not @subject_i@.'
  }
  InfoMessage ImportExport_DatasetAlreadySelected
  {
    DefaultText: 'ImportExport-dataset is already selected.'
  }
  InfoMessage ImportExport_DatasetNotSelected
  {
    DefaultText: 'ImportExport-dataset is not selected.'
  }
  InfoMessage ImportExport_NoData
  {
    DefaultText: 'There is no imported data.'
  }
  InfoMessage ImportExport_NotImplemented
  {
    DefaultText: 'The import/export functionality is not (correctly?) implemented.'
  }
  InfoMessage ImportExport_TargetNotSet
  {
    DefaultText: 'Target-dataset is not set.'
  }
  InfoMessage MessageBox_ConfirmDeletion (const String subject_i)
  {
    DefaultText: 'Are you sure you want to delete @subject_i@?'
  }
  InfoMessage MessageBox_NoCalendarsFound (const String context_i)
  {
    DefaultText: "No calendars found for context '@context_i@'."
  }
  InfoMessage MessageBox_OK
  {
    DefaultText: 'OK'
  }
  InfoMessage MessageBox_SubscribeToOptions
  {
    DefaultText: 'This occurrence|Multiple occurrences|Cancel'
  }
  InfoMessage MessageBox_SubscribeToQuestion
  {
    DefaultText: 'To what do you want to subscribe?'
  }
  InfoMessage MessageBox_YesNo
  {
    DefaultText: '   Yes   |No'
  }
  InfoMessage Pattern_CanOnlyBeChangedByInitiator (constcontent String initiator_i)
  {
    DefaultText: 'The recurrence pattern can only be changed by the initiator of the event: @initiator_i@.'
  }
  InfoMessage Pattern_DaysShort
  {
    DefaultText: 'Mon;Tue;Wed;Thu;Fri;Sat;Sun'
  }
  InfoMessage Pattern_Monthly_DayTooBig
  {
    DefaultText: 'Maximum value for day is 31.'
  }
  InfoMessage Pattern_Monthly_DayTooSmall
  {
    DefaultText: 'Minimum value for day is 1.'
  }
  InfoMessage Pattern_Monthly_LessDays (const Number nrOfDay_i)
  {
    DefaultText: 'Some months have less than @nrOfDay_i@ days. For these months, the occurrence will fall on the last day of the month.'
  }
  InfoMessage Pattern_Days
  {
    DefaultText: 'Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday'
  }
  InfoMessage Pattern_InvalidRecurrenceInterval (const String unit_i)
  {
    DefaultText: 'Number of @unit_i@ must be greater than 0.'
  }
  InfoMessage Pattern_Months
  {
    DefaultText: 'January;February;March;April;May;June;July;August;September;October;November;December'
  }
  InfoMessage Pattern_WeekOfMonth
  {
    DefaultText: 'first;second;third;fourth;last'
  }
  InfoMessage Pattern_Weekly_NoDaySelected
  {
    DefaultText: 'At least one day must be selected.'
  }
  InfoMessage Period_EndMustBeGreaterThanStartOfEvent (const String kind_i, String startOfEvent_i, constcontent String endOfPeriod_i)
  {
    DefaultText: 'End of the @kind_i@ period (@endOfPeriod_i@) must be greater than the start of the event (@startOfEvent_i@).'
  }
  InfoMessage Period_EndMustBeGreaterThanStartOfPeriod (const String kind_i, const String startOfPeriod_i, const String endOfPeriod_i)
  {
    DefaultText: 'End of the @kind_i@ period (@endOfPeriod_i@) must be greater than its start (@startOfPeriod_i@).'
  }
  InfoMessage Period_EndMustBeGreaterThanStartOfCalendar (const String kind_i, const String endOfPeriod_i, const String startOfCalendar_i)
  {
    DefaultText: 'End of the @kind_i@ period (@endOfPeriod_i@) must be greater than the start of the calendar (@startOfCalendar_i@).'
  }
  InfoMessage Period_StartMustBeBeforeEndOfEvent (const String kind_i, const String startOfPeriod_i, const String endOfEvent_i)
  {
    DefaultText: 'Start of the @kind_i@ period (@startOfPeriod_i@) must be before the end of the event (@endOfEvent_i@).'
  }
  InfoMessage Period_InvalidEndOfPeriod (const String kind_i)
  {
    DefaultText: 'End of @kind_i@ period is invalid.'
  }
  InfoMessage Period_InvalidStartOfPeriod (const String kind_i)
  {
    DefaultText: 'Start of @kind_i@ period is invalid.'
  }
  InfoMessage Subscription_MultipleEventsSelected
  {
    DefaultText: 'Multiple events selected.'
  }
  InfoMessage Timezone_WarningEvent (const String calendarTimezone_i, const String calendarOffset_i, const String localTimezone_i, 
    const String localOffset_i)
  {
    DefaultText:
    [*
      The event uses the timezone of the calendar (@calendarTimezone_i@, @calendarOffset_i@),   
      which is different from the local timezone (@localTimezone_i@, @localOffset_i@).
      Make sure to enter the start time and end time in the timezone of the calendar.
    *]
  }
  InfoMessage Timezone_WarningSettings (constcontent String calendarTimezone_i, constcontent String calendarOffset_i, constcontent String localTimezone_i, 
    constcontent String localOffset_i)
  {
    DefaultText:
    [*
      The calendar uses timezone @calendarTimezone_i@ (@calendarOffset_i@),   
      which is different from the local timezone (@localTimezone_i@, @localOffset_i@).
      Make sure to enter the Base in the timezone that is used by the calendar.
    *]
  }
}
