Quintiq file version 2.0
Component pnlRecurring
{
  #keys: '[131094.0.1374389493]'
  BaseType: 'Panel'
  GBLayout
  {
    Type: 'GBLayoutDefinition'
    Columns:
    [
      GBFlow.Column { grow: 0 id: 890 parent: 0 }
      GBFlow.Column { grow: 0 id: 218 parent: 0 }
      GBFlow.Column { grow: 0 id: 647 parent: 0 }
      GBFlow.Column { grow: 0 id: 437 parent: 0 }
      GBFlow.Column { grow: 0 id: 544 parent: 0 }
      GBFlow.Column { grow: 0 id: 512 parent: 0 }
      GBFlow.Column { grow: 0 id: 461 parent: 0 }
      GBFlow.Column { grow: 0 id: 340 parent: 0 }
      GBFlow.Column { grow: 0 id: 308 parent: 0 }
    ]
    Elements:
    [
      GBElement
      {
        Component => lblStartTimeRecurring
        Position { startcolumn: 218 startrow: 624 endcolumn: 218 endrow: 624 }
      }
      GBElement
      {
        Component => lblEndTimeRecurring
        Position { startcolumn: 218 startrow: 899 endcolumn: 218 endrow: 899 }
      }
      GBElement
      {
        Component => lblDurationRecurring
        Position { startcolumn: 218 startrow: 640 endcolumn: 218 endrow: 640 }
      }
      GBElement
      {
        Component => valDurationRecurring
        Position { startcolumn: 437 startrow: 640 endcolumn: 544 endrow: 640 }
      }
      GBElement
      {
        Component => durStartTimeOfDayRecurring
        Position { startcolumn: 437 startrow: 624 endcolumn: 437 endrow: 624 }
      }
      GBElement
      {
        Component => ckbIsAllDayRecurring
        Position { startcolumn: 544 startrow: 624 endcolumn: 340 endrow: 624 }
      }
      GBElement
      {
        Component => durEndTimeOfDayRecurring
        Position { startcolumn: 437 startrow: 899 endcolumn: 437 endrow: 899 }
      }
      GBElement
      {
        Component => btnAddDayRecurring
        Position { startcolumn: 340 startrow: 640 endcolumn: 340 endrow: 640 }
      }
      GBElement
      {
        Component => btnSubtractDayRecurring
        Position { startcolumn: 461 startrow: 640 endcolumn: 461 endrow: 640 }
      }
      GBElement
      {
        Component => lblOneDayRecurring
        Position { startcolumn: 308 startrow: 640 endcolumn: 308 endrow: 640 }
      }
      GBElement
      {
        Component => lblSpacingStartRecurring
        Position { startcolumn: 647 startrow: 624 endcolumn: 647 endrow: 624 }
      }
      GBElement
      {
        Component => lblMarginDurationRecurring
        Position { startcolumn: 890 startrow: 640 endcolumn: 890 endrow: 640 }
      }
      GBElement
      {
        Component => lblSpacingDurationRecurring
        Position { startcolumn: 512 startrow: 640 endcolumn: 512 endrow: 640 }
      }
    ]
    Gaps: [ left: 5 right: 5 top: 0 bottom: 0 inner: 5 ]
    Rows:
    [
      GBFlow.Row { grow: 0 id: 624 parent: 0 }
      GBFlow.Row { grow: 0 id: 899 parent: 0 }
      GBFlow.Row { grow: 0 id: 640 parent: 0 }
    ]
  }
  Children:
  [
    Component lblStartTimeRecurring
    {
      #keys: '[131094.0.1374389494]'
      BaseType: 'Label'
      Properties:
      [
        Alignment: 'right'
        Text: '  Start time'
        Transparent: true
      ]
    }
    Component lblEndTimeRecurring
    {
      #keys: '[131094.0.1374389501]'
      BaseType: 'Label'
      Properties:
      [
        Alignment: 'right'
        Text: 'End time'
        Transparent: true
      ]
    }
    Component lblDurationRecurring
    {
      #keys: '[131094.0.1374389500]'
      BaseType: 'Label'
      Properties:
      [
        Alignment: 'right'
        Text: 'Duration'
        Transparent: true
      ]
    }
    Component valDurationRecurring
    {
      #keys: '[131094.0.1374389498]'
      BaseType: 'Label'
      Properties:
      [
        Text: '<Duration>'
        Transparent: true
      ]
    }
    Component durStartTimeOfDayRecurring
    {
      #keys: '[131094.0.1374389504]'
      BaseType: 'GUIDurationSelector'
      Properties:
      [
        BackgroundColor: 'Window'
        CanBeNegative: false
        DataBinding: 'Dialog.Data.StartTimeOfDay'
        Format: 'h:m'
        Granularity: '15_minutes'
        MaxDuration: '23:59:00'
        MinDuration: '0:00:00'
      ]
    }
    Component ckbIsAllDayRecurring
    {
      #keys: '[131094.0.1374389505]'
      BaseType: 'CheckBox'
      Properties:
      [
        DataBinding: 'Dialog.Data.IsAllDay'
        Text: 'All day'
      ]
    }
    Component durEndTimeOfDayRecurring
    {
      #keys: '[131094.0.1374389506]'
      BaseType: 'GUIDurationSelector'
      Properties:
      [
        BackgroundColor: 'Window'
        CanBeNegative: false
        DataBinding: 'Dialog.Data.EndTimeOfDay'
        Format: 'h:m'
        Granularity: '15_minutes'
        MaxDuration: '23:59:00'
        MinDuration: '0:00:00'
      ]
    }
    Component btnAddDayRecurring
    {
      #keys: '[131094.0.1376673451]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'NAVIGATE_PLUS'
      ]
    }
    Component btnSubtractDayRecurring
    {
      #keys: '[131094.0.1376693743]'
      BaseType: 'Button'
      Properties:
      [
        Image: 'NAVIGATE_MINUS_BLUE'
      ]
    }
    Component lblOneDayRecurring
    {
      #keys: '[131094.0.1376695340]'
      BaseType: 'Label'
      Properties:
      [
        Text: ' 1 day'
        Transparent: true
      ]
    }
    Component lblSpacingStartRecurring
    {
      #keys: '[146730.0.1172023218]'
      BaseType: 'Label'
      Properties:
      [
        Text: ''
        Transparent: true
      ]
    }
    Component lblMarginDurationRecurring
    {
      #keys: '[146730.0.1290634847]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 2
        Text: ''
        Transparent: true
      ]
    }
    Component lblSpacingDurationRecurring
    {
      #keys: '[146730.0.1290636585]'
      BaseType: 'Label'
      Properties:
      [
        NumberColumns: 0
        Text: ''
        Transparent: true
      ]
    }
  ]
  Properties:
  [
    BackgroundColor: 'White'
    Visible: false
    ModeledStringList ChildOrdering
    {
      c: lblStartTimeRecurring
      c: durStartTimeOfDayRecurring
      c: ckbIsAllDayRecurring
      c: durEndTimeOfDayRecurring
      c: btnSubtractDayRecurring
      c: btnAddDayRecurring
      c: lblEndTimeRecurring
      c: lblDurationRecurring
      c: valDurationRecurring
      c: lblOneDayRecurring
      c: lblSpacingStartRecurring
      c: lblMarginDurationRecurring
      c: lblSpacingDurationRecurring
    }
  ]
}
