Quintiq file version 2.0
#root
#parent: Calendars
OrphanComponent LibCal_gcResourceCalendars
{
  #keys: '[131094.0.1866787522]'
  BaseType: 'GanttChart'
  Children:
  [
    Component deCalendars
    {
      #keys: '[131094.0.1866751600]'
      BaseType: 'GUIDataExtractor'
      Properties:
      [
        Component: 'dhCalendars'
        DataType: 'structured[LibCal_Calendar]'
        PosX: 52
        PosY: 31
        Transformation: 'Elements'
      ]
    }
    #child: rdCalendar
    Component mrkPlanningTime
    {
      #keys: '[131094.0.1866751603]'
      BaseType: 'ChartMarking'
      Properties:
      [
        MarkPosition: 'DateTime::MinDateTime()'
        PosX: 80
        PosY: 143
      ]
    }
    Component tbNavigation
    {
      #keys: '[131094.0.1866751604]'
      BaseType: 'NavigationToolbar'
      GBLayout
      {
        Type: 'GBLayoutDefinition'
        Columns:
        [
          GBFlow.Column { grow: 128 id: 139 parent: 0 }
        ]
        Elements:
        [
          GBElement
          {
            Component => dpNavigationPanel
            Position { startcolumn: 139 startrow: 587 endcolumn: 139 endrow: 587 }
          }
        ]
        Gaps: [ left: 5 right: 5 top: 5 bottom: 5 inner: 5 ]
        Rows:
        [
          GBFlow.Row { grow: 0 id: 587 parent: 0 }
        ]
      }
      Children:
      [
        #child: dpNavigationPanel
      ]
      Properties:
      [
        Location: 'bottom'
        Priority: 1
        Size: 37
      ]
    }
    Component uciTimeInterval
    {
      #keys: '[131094.0.1866760342]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'TimeInterval'
        ObjectBackgroundColor: 'White'
        ObjectType: 'LibCal_ExplicitTimeInterval'
        PosX: 80
        PosY: 115
        Precondition: 'not object.Participation().Event().IsAlwaysAvailableEvent()'
        TooltipText:
        [*
          <b>VALUE( object.Participation().Event().Subject() )</b>
          FORMAT( object.Start() ; "dd D2-MM  H2:m" ) - FORMAT( object.End() ; "dd D2-MM  H2:m" )
          VALUE( ifexpr( object.Participation().Event().Type() = LibCal_Event::TYPE_PARTIAL(), "Capacity = " + [String]object.Participation().Event().PartialCapacity(), "" ) )
          VALUE( ifexpr( object.Participation().Event().NrOfSubscribers() > 0, "Initiator = " + object.Participation().Event().Initiator(), "" ) )
          VALUE( ifexpr( object.LeadingETI().Comment() <> "", "------", "" ) )
          VALUE( object.LeadingETI().Comment() )
          VALUE( ifexpr( object.Comment() <> "", "---", "" ) )
          VALUE( object.Comment() )
        *]
      ]
    }
    Component menuGanttChart
    {
      #keys: '[131094.0.1866761907]'
      BaseType: 'popupGanttchart'
      Children:
      [
        Component PopupParent
        {
          #keys: '[514.0.555535]'
          BaseType: 'PopupParent'
          IsDerived: true
          Children:
          [
            Component MenuSeparator1 { #keys: '[131094.0.1866761908]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component mnuNewEvent { #keys: '[131094.1.394331082]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR' Text: 'New event...' ] }
            Component mnuEditEvent { #keys: '[131094.1.394331341]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR_EDIT' Text: 'Edit event...' ] }
            Component mnuDeleteEvent { #keys: '[131094.1.394331616]' BaseType: 'Menu' Properties: [ Image: 'GARBAGE' Text: 'Delete event...' ] }
            Component menuSeparator2 { #keys: '[131094.1.394331873]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component mnuEditOccurrence { #keys: '[131094.1.394332057]' BaseType: 'Menu' Properties: [ BindDoubleClick: true Image: 'CLOCK' Shortcut: 'Enter' Text: 'Edit occurrence...' ] }
            Component mnuDeleteOccurrence { #keys: '[131094.1.394332268]' BaseType: 'Menu' Properties: [ Image: 'GARBAGE_FULL2' Shortcut: 'Del' Text: 'Delete occurrence' ] }
            Component MenuNavigation
            {
              #keys: '[104128.0.40881109]'
              BaseType: 'MenuNavigation'
              IsDerived: true
              Children:
              [
                Component MenuNow { #keys: '[103784.990.515374824]' BaseType: 'MenuNow' IsDerived: true }
              ]
            }
            Component mnuEditSubscription { #keys: '[131094.1.1219643287]' BaseType: 'Menu' Properties: [ BindDoubleClick: true Image: 'CALENDAR_EDIT' Text: 'Edit subscription...' ] }
            Component menuSeparator3 { #keys: '[131094.1.1219644492]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component mnuDeleteSubscription { #keys: '[131094.1.1219644835]' BaseType: 'Menu' Properties: [ Image: 'GARBAGE' Text: 'Delete subscription...' ] }
            Component mnuNewSubscription { #keys: '[131094.1.1219692525]' BaseType: 'Menu' Properties: [ Image: 'LINK' Text: 'New subscription...' ] }
          ]
          Properties:
          [
            ModeledStringList ChildOrdering
            {
              c: MenuActions
              c: MenuFilter
              c: MenuNavigation
              c: MenuSeparator1
              c: mnuNewEvent
              c: mnuEditEvent
              c: mnuDeleteEvent
              c: menuSeparator2
              c: mnuNewSubscription
              c: mnuEditSubscription
              c: mnuDeleteSubscription
              c: menuSeparator3
              c: mnuEditOccurrence
              c: mnuDeleteOccurrence
            }
          ]
        }
      ]
      Properties:
      [
        PosX: 52
        PosY: 87
      ]
    }
    Component menuGanttChartRows
    {
      #keys: '[131094.0.1866763653]'
      BaseType: 'popupGanttchartRows'
      Children:
      [
        Component PopupParent id:PopupParent_1
        {
          #keys: '[530.0.59473]'
          BaseType: 'PopupParent'
          IsDerived: true
          Children:
          [
            Component MenuFilter id:MenuFilter_1
            {
              #keys: '[104128.0.41519836]'
              BaseType: 'MenuFilter'
              IsDerived: true
              Properties:
              [
                ModeledStringList ChildOrdering
                {
                  c: menuEditFilter
                  c: MenuClearFilter
                  c: MenuStoredFilters
                  c: Menu_1
                  c: menuHideGanttchartRow
                  c: MenuUnhideAllRows
                  c: Menu1_1
                  c: menuShowAllGanttChartRows
                }
              ]
            }
            Component menuRowSeparator1 { #keys: '[131094.0.1866763654]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component mnuRowCalendarEditor { #keys: '[131094.0.1866763655]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR' Text: '&Edit calendar...' Visible: false ] }
            Component mnuRowNewEvent { #keys: '[131094.0.1866763656]' BaseType: 'Menu' Properties: [ Image: 'CALENDAR' Text: 'New event...' ] }
            Component mnuRowNewSubscription { #keys: '[131094.0.1866763657]' BaseType: 'Menu' Properties: [ Image: 'LINK' Text: 'New subscription...' Tooltip: 'Subscribe to an existing event.' ] }
            Component menuRowSeparator2 { #keys: '[131094.0.1873533193]' BaseType: 'Menu' Properties: [ Separator: true ] }
            Component mnuRowEditCalendar { #keys: '[131094.1.316643315]' BaseType: 'Menu' Properties: [ Image: 'DATE-TIME' Text: 'Edit calendar...' Visible: false ] }
          ]
          Properties:
          [
            ModeledStringList ChildOrdering
            {
              c: MenuFilter_1
              c: MenuSortGanttChartRows
              c: menuRowSeparator1
              c: mnuRowNewEvent
              c: mnuRowNewSubscription
              c: menuRowSeparator2
              c: mnuRowEditCalendar
              c: mnuRowCalendarEditor
            }
          ]
        }
      ]
      Properties:
      [
        PosX: 10
        PosY: 88
      ]
    }
    Component uciCalendar
    {
      #keys: '[131094.0.1874708791]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'Calendar'
        ObjectText: 'VALUE( object.CalendarID() )'
        ObjectType: 'LibCal_Calendar'
        PosX: 80
        PosY: 59
      ]
    }
    Component uciCalendarElement
    {
      #keys: '[131094.0.1955486929]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'CalendarElement'
        ObjectBackgroundColor: 'Dark blue'
        ObjectType: 'CalendarElement'
        PosX: 80
        PosY: 87
      ]
    }
    Component dhCalendars
    {
      #keys: '[131094.1.379588153]'
      BaseType: 'DataHolder'
      Databinding: 'structured[LibCal_Calendar]*'
      Children:
      [
        Component deCalendarsExtractor
        {
          #keys: '[131094.1.379588154]'
          BaseType: 'GUIDataExtractor'
          Properties:
          [
            PosX: 12
            PosY: 11
          ]
        }
      ]
      Properties:
      [
        PosX: 52
        PosY: 60
      ]
    }
    Component mrkStartOfWindow
    {
      #keys: '[131094.1.787254616]'
      BaseType: 'ChartMarking'
      Properties:
      [
        Color: 'Gray'
        MarkPosition: 'DateTime::MinDateTime()'
        MarkWidth: 2
        PosX: 51
        PosY: 143
      ]
    }
    Component mrkEndOfWindow
    {
      #keys: '[131094.1.787254903]'
      BaseType: 'ChartMarking'
      Properties:
      [
        Color: 'Gray'
        MarkPosition: 'DateTime::MaxDateTime()'
        MarkWidth: 2
        PosX: 109
        PosY: 143
      ]
    }
    Component vhStartOfWindow
    {
      #keys: '[131094.1.981124584]'
      BaseType: 'ValueHolder'
      Databinding: 'DateTime'
      Properties:
      [
        DataBinding: 'LibCal_GlobalState.dhGlobalCalendarRegistry().Data().CommonCalendar().Start()'
        PosX: 51
        PosY: 171
      ]
    }
    Component vhEndOfWindow
    {
      #keys: '[131094.1.981125163]'
      BaseType: 'ValueHolder'
      Databinding: 'DateTime'
      Properties:
      [
        DataBinding: 'LibCal_GlobalState.dhGlobalCalendarRegistry().Data().CommonCalendar().End()'
        PosX: 109
        PosY: 171
      ]
    }
    Component vhPlanningTime
    {
      #keys: '[131094.1.1105309545]'
      BaseType: 'ValueHolder'
      Databinding: 'DateTime'
      Properties:
      [
        DataBinding: 'LibCal_GlobalState.dhGlobalCalendarRegistry().Data().PlanningTime()'
        PosX: 80
        PosY: 171
      ]
    }
    Component uciSubscription
    {
      #keys: '[146730.0.881022493]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'Subscription'
        ObjectType: 'LibCal_Subscription'
        PosX: 52
        PosY: 115
        TooltipText:
        [*
          <b>VALUE( object.Event().Subject() )</b>
          VALUE( object.Info() )
        *]
      ]
    }
    Component uciAlwaysAvailable
    {
      #keys: '[146730.0.1166752165]'
      BaseType: 'UserConfigurableInformation'
      Properties:
      [
        Identification: 'AlwaysAvailable'
        ObjectBackgroundColor: 'White'
        ObjectType: 'LibCal_ExplicitTimeInterval'
        PosX: 109
        PosY: 115
        Precondition: 'object.Participation().Event().IsAlwaysAvailableEvent()'
        TooltipText:
        [*
          <b>VALUE( object.Participation().Event().Subject() )</b>
          VALUE( ifexpr( object.LeadingETI().Comment() <> "", "------", "" ) )
          VALUE( object.LeadingETI().Comment() )
          VALUE( ifexpr( object.Comment() <> "", "---", "" ) )
          VALUE( object.Comment() )
        *]
      ]
    }
  ]
  Properties:
  [
    AllowDragCreate: true
    BackgroundColor: 'Window'
    Border: true
    ContextMenu: 'menuGanttChart'
    NavigationRangeManager:
    [*
      {
        Name := '1 Day'
        Interval := 2
        Count := 1
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 2
        Item := 0
      }
      {
        Name := '2 Days'
        Interval := 2
        Count := 2
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 2
        Item := 0
      }
      {
        Name := '4 Days'
        Interval := 2
        Count := 4
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 2
        Item := 0
      }
      {
        Name := '1 Week'
        Interval := 3
        Count := 1
        Offset := 0
        Interval := 1
        Count := 2
        Offset := 0
        IntervalStartType := 3
        Item := 0
      }
      {
        Name := '2 Weeks'
        Interval := 3
        Count := 2
        Offset := 0
        Interval := 2
        Count := 1
        Offset := 0
        IntervalStartType := 3
        Item := 0
      }
      {
        Name := '4 Weeks'
        Interval := 3
        Count := 4
        Offset := 0
        Interval := 2
        Count := 1
        Offset := 0
        IntervalStartType := 3
        Item := 0
      }
      {
        Name := '1 Month'
        Interval := 4
        Count := 1
        Offset := 0
        Interval := 2
        Count := 2
        Offset := 0
        IntervalStartType := 4
        Item := 1
      }
      {
        Name := '3 Months'
        Interval := 4
        Count := 3
        Offset := 0
        Interval := 3
        Count := 1
        Offset := 0
        IntervalStartType := 4
        Item := 1
      }
      {
        Name := '6 Months'
        Interval := 4
        Count := 6
        Offset := 0
        Interval := 3
        Count := 1
        Offset := 0
        IntervalStartType := 4
        Item := 1
      }
      {
        Name := '1 Year'
        Interval := 5
        Count := 1
        Offset := 0
        Interval := 3
        Count := 1
        Offset := 0
        IntervalStartType := 6
        Item := 1
      }
      {
        Name := '5 Years'
        Interval := 5
        Count := 5
        Offset := 0
        Interval := 4
        Count := 1
        Offset := 0
        IntervalStartType := 6
        Item := 1
      }
    *]
    RowContextMenu: 'menuGanttChartRows'
    ModeledStringList ChildOrdering
    {
      c: deCalendars
      c: tbNavigation
      c: rdCalendar
      c: mrkPlanningTime
      c: uciTimeInterval
      c: menuGanttChart
      c: menuGanttChartRows
      c: uciCalendar
      c: uciCalendarElement
      c: dhCalendars
      c: mrkStartOfWindow
      c: mrkEndOfWindow
      c: vhStartOfWindow
      c: vhEndOfWindow
      c: vhPlanningTime
      c: uciSubscription
      c: uciAlwaysAvailable
    }
  ]
  ResponseDefinitions:
  [
    DelegatedResponseDefinition OnClick id:Responsedef_LibCal_gcResourceCalendars_Menu_OnClick
    {
      #keys: '[131094.0.1866751610]'
      Initiator: 'Menu'
      IsInherited: false
      ResponseType: 'OnClick'
      Arguments:
      [
        ResponseDefinitionArgument selection
        {
          #keys: '[3229.0.1085376]'
          Binding: 'this.Selection()'
        }
        ResponseDefinitionArgument row
        {
          #keys: '[3229.0.1085390]'
          Binding: 'this.ContextMenuRowObject()'
        }
      ]
    }
    DelegatedResponseDefinition OnClick id:Responsedef_LibCal_gcResourceCalendars_GUIButtonBase_OnClick
    {
      #keys: '[131094.0.1866751611]'
      Initiator: 'GUIButtonBase'
      IsInherited: false
      ResponseType: 'OnClick'
      Arguments:
      [
        ResponseDefinitionArgument selection
        {
          #keys: '[3229.0.1085407]'
          Binding: 'this.Selection()'
        }
        ResponseDefinitionArgument row
        {
          #keys: '[3229.0.1085421]'
          Binding: 'this.ContextMenuRowObject()'
        }
      ]
    }
  ]
}
