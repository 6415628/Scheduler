Quintiq file version 2.0
#root
#parent: GUIFiltering
OrphanComponent LibGUIFiltering_PanelFilterBox
{
  #keys: '[128900.0.316901188]'
  BaseType: 'Panel'
  GBLayout
  {
    Type: 'GBLayoutDefinition'
    Columns:
    [
      GBFlow.Column { grow: 0 id: 863 parent: 0 }
      GBFlow.Column { grow: 0 id: 548 parent: 0 }
      GBFlow.Column { grow: 128 id: 563 parent: 0 }
      GBFlow.Column { grow: 0 id: 520 parent: 0 }
      GBFlow.Column { grow: 0 id: 180 parent: 0 }
    ]
    Elements:
    [
      GBElement
      {
        Component => PanelFilterBoxHelper
        Position { startcolumn: 863 startrow: 886 endcolumn: 563 endrow: 886 }
      }
      GBElement
      {
        Component => StringSelectionFilterBoxAttributes
        Position { startcolumn: 863 startrow: 601 endcolumn: 548 endrow: 601 }
      }
      GBElement
      {
        Component => ImageFilterWarnings
        Position { startcolumn: 863 startrow: 421 endcolumn: 863 endrow: 421 }
      }
      GBElement
      {
        Component => ImageHelp
        Position { startcolumn: 180 startrow: 601 endcolumn: 180 endrow: 601 }
      }
      GBElement
      {
        Component => LabelFilterWarnings
        Position { startcolumn: 548 startrow: 421 endcolumn: 180 endrow: 421 }
      }
      GBElement
      {
        Component => EditorFilterBox
        Position { startcolumn: 563 startrow: 601 endcolumn: 563 endrow: 601 }
      }
      GBElement
      {
        Component => FilterMenuButton
        Position { startcolumn: 520 startrow: 601 endcolumn: 520 endrow: 601 }
      }
    ]
    Gaps: [ left: 0 right: 0 top: 0 bottom: 0 inner: 5 ]
    Rows:
    [
      GBFlow.Row { grow: 0 id: 601 parent: 0 }
      GBFlow.Row { grow: 128 id: 886 parent: 0 }
      GBFlow.Row { grow: 0 id: 421 parent: 0 }
    ]
  }
  Children:
  [
    #child: StringSelectionFilterBoxAttributes
    Component ImageFilterWarnings
    {
      #keys: '[128900.0.317762141]'
      BaseType: 'Image'
      Properties:
      [
        DesiredSize: 16
        Image: 'warning'
        KeepRatio: true
        MinimumHeight: 16
        MinimumWidth: 16
        Transparent: true
      ]
    }
    Component ImageHelp
    {
      #keys: '[128900.0.322871276]'
      BaseType: 'Image'
      Properties:
      [
        Image: 'MESSAGE'
        Tooltip:
        [*
          <html>
          You can enter as many search terms as you would like separated by a space. If you want to enter a search term<br>
          that contains a space, please enclose the term in single or double quotes. For example, searching for "10 900"<br>
          will search any components that the filter is associated with for any instance that contains both a 10 and a 900<br>
          in any of the visualized elements. This means that if you have a list with a column for OrderNumber and another<br>
          column for Quantity, any row that has an OrderNr of 10 or 900 as well as a Quantity of 10 or 900 will be shown.<br><br>
          In addition to entering search terms, you can also enter operands that affect how the terms are applied. These<br>
          operands are: "or", "and", ".." or "...", &lt;, &lt;=, &gt;=, &gt;, &lt;&gt; and ~.<br>
          If you want to restrict the search to just a single attribute, you can do so by adding the (partial) name of the<br>
          attribute in your search terms preceding your operand and search term. Below are some examples of specific searches<br><br>
          <b>Examples</b>
          <table>
          <tr><td>10</td><td>Searches for any row that contains a 10 in any numeric column or included in a string</td></tr>
          <tr><td>= 10</td><td>Searches for any row that contains a 10 in any numeric column, but does not search string columns</td></tr>
          <tr><td>OrderNr = 10</td><td>Searches for any row for which the OrderNr attribute is set to exactly 10</td></tr>
          <tr><td>'10'</td><td>Searches for any row that contains the (sub)string 10</td></tr>
          <tr><td>10..40</td><td>Searches for any row that has a numeric value that falls in the range from 10 to 40 (inclusive)</td></tr>
          <tr><td>10 11 12</td><td>Searches for any row that contains a 10 and an 11 and a 12 in any numeric field or as a (sub)string</td></tr>
          <tr><td>10 or 11 or 12</td><td>Searches for any row that contains a 10 or an 11 or a 12 in any numeric field or as a (sub)string</td></tr>
          <tr><td>Ord = 10..40</td><td>Searches for any row that has an attribute that starts with 'Ord' in the range of 10 to 40 (inclusive)</td></tr>
          <tr><td>Oct-18-2017</td><td>Searches for any row that has a date or time that falls on October 18th, 2017</td></tr>
          <tr><td>Oct-18</td><td>Searches for any row that has a date or time that falls on October 18th in any year</td></tr>
          <tr><td>Oct-2017</td><td>Searches for any row that has a date or time that falls in October of 2017</td></tr>
          <tr><td>Oct</td><td>Searches for any row that has a date or time that falls in October of any year</td></tr>
          <tr><td>&gt; Oct-18-2017 13:45</td><td>Searches for any row that has a time that falls after October 18th, 2017 1:45PM</td></tr>
          <tr><td>&lt; 17:00</td><td>Searches for any duration that is less than 17 hours or any time field that falls before 5PM</td></tr>
          <tr><td>&gt; 25:00</td><td>Searches for any duration that is greater than 25 hours</td></tr>
          <tr><td></td><td></td></tr>
          </table>
          Please note that when searching for times, AM/PM notation is not supported and all times have to be entered in 24 hour format.
          </html>
        *]
        Transparent: true
      ]
    }
    #child: PanelFilterBoxHelper
    Component LabelFilterWarnings
    {
      #keys: '[128900.0.374810371]'
      BaseType: 'Label'
      Properties:
      [
        Transparent: true
      ]
    }
    #child: EditorFilterBox
    Component FilterMenuButton
    {
      #keys: '[128900.0.380581617]'
      BaseType: 'DropDownButton'
      Children:
      [
        Component FilterPopupMenu
        {
          #keys: '[128900.0.380609620]'
          BaseType: 'PopupMenu'
          Children:
          [
            Component PopupParent { #keys: '[128900.0.380609621]' BaseType: 'Menu' }
          ]
          Properties:
          [
            PosX: 2
            PosY: 9
          ]
        }
      ]
      Properties:
      [
        Image: 'TEXT_ALIGN_JUSTIFIED'
        OptionsMenu: 'FilterPopupMenu'
      ]
    }
    Component DataHolderFiltering
    {
      #keys: '[128900.0.457635087]'
      BaseType: 'DataHolder'
      Databinding: 'shadow[LibGUIFiltering]*'
      Properties:
      [
        PosX: 109
        PosY: 33
      ]
    }
  ]
  Properties:
  [
    ModeledStringList ChildOrdering
    {
      c: PanelFilterBoxHelper
      c: StringSelectionFilterBoxAttributes
      c: EditorFilterBox
      c: ImageFilterWarnings
      c: ImageHelp
      c: LabelFilterWarnings
      c: FilterMenuButton
      c: DataHolderFiltering
    }
  ]
}
