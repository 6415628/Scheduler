Quintiq file version 2.0
#parent: #root
Method ArchiveCumulativeCharacteristicBinaryValue (FeedbackTaskInSchedule feedbacktaskinschedule)
{
  Description: 'Archive cumulative characteristic value in binary value in feedback program'
  TextBody:
  [*
    // Archive cumulative characteristic value in binary value in feedback program
    
    operation := guard( feedbacktaskinschedule.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
    
    if( not isnull( operation ) )
    {
      // Archive program reported start and end
      this.ArchiveReportedStartEnd();
      
      // Get all cumulative program rules
      cumulativecharacteristicbinvalue := BinaryValue::Construct();
      cumulativerealvaluebinvalue := BinaryValue::Construct();
      cumulativecharacteristics := selectset( this, ProgramChange.Schedule.Characteristic, char, char.IsAggregate() );  
      Characteristic::GetCharacteristicBinaryValue( cumulativecharacteristics, 
                                                    operation,
                                                    this.ArchivedCumulativeCharacteristic(),
                                                    this.ArchivedCumulativeRealValues(),
                                                    this.Start(), 
                                                    feedbacktaskinschedule.End(),
                                                    cumulativecharacteristicbinvalue,
                                                    cumulativerealvaluebinvalue );
                                                    
      // Update archived cumulative characteristic attributes
      this.ArchivedCumulativeCharacteristic( cumulativecharacteristicbinvalue );
      this.ArchivedCumulativeRealValues( cumulativerealvaluebinvalue );  
        
      // Archive program phase sequence number
      feedbacktaskinprogramtype := select( feedbacktaskinschedule, FeedbackTaskInFeedbackProgramType, feedbacktaskinprogram, 
                                           feedbacktaskinprogram.FeedbackProgramType() = this );
      
      firstplannedtask := minselect( this, ProgramType.TaskInProgramSet, tips, true, tips.TaskSequenceNr() );
      // Archive previous phase cumulative value and increase phase sequence number if current feedback task is last task of the phase
      if( not isnull( feedbacktaskinprogramtype ) 
          and not isnull( feedbacktaskinprogramtype.AsLastInPhase() )
          and guard( firstplannedtask.ProgramPhase() <> feedbacktaskinprogramtype.FeedbackProgramPhase().ProgramPhase(), true ) )
      {    
        this.ArchivedPhaseSequenceNr( feedbacktaskinprogramtype.SelectedPhaseSequenceNr() + 1 );
        this.ArchivedPreviousPhaseCumulativeCharacteristic( cumulativecharacteristicbinvalue );
        this.ArchivedPreviousPhaseCumulativeRealValues( cumulativerealvaluebinvalue );    
        feedbacktaskinprogramtype.FeedbackProgramPhase().ArchivedReportedEnd( feedbacktaskinprogramtype.FeedbackProgramPhase().End() );
      }
    }
  *]
}
