Quintiq file version 2.0
#parent: #root
Method FSPLFixCycle (Task_SC task, Boolean cyclicfound, Strings taskstrings, 
  Boolean planbefore, Boolean planafter) as Task_SC
{
  Description: 'Fix the cycle detected.'
  TextBody:
  [*
    // josine Jan-19-2015 (created)
    // Get the cyclic tasks
    cyclictasks := this.FSPLGetCyclicTasks( task, taskstrings );
    
    // Fix the cycle on resources
    return this.FSPLFixCycleOnResources( task, cyclictasks, planbefore, planafter );
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    /*
    // resequence cyclictasks so that task of the same pu with minimum task.sequencenr is first (cylce remains though)
    
    cyclictasks := this.GetCyclicTasks( task, after, taskstrings );
    
    if( exists( task,
                FSPLOperationInTask,
                o,
                exists( o.PlanUnit_SC(), Operation_SC, o2, not isnull( o2.GetTask() )
                                                           and o2.GetTask().Resource_SC() = task.Resource_SC()
                                                           and ( ( o2.SequenceNr() > o.SequenceNr()
                                                                  and o2.GetTask().FSPLSequenceNr() < task.FSPLSequenceNr() )
                                                                or ( o2.SequenceNr() < o.SequenceNr()
                                                                     and o2.GetTask().FSPLSequenceNr() > task.FSPLSequenceNr() ) )
                       )
                 )
        )
    {
      // there is a task of the same planunit on the same resource in the cycle that should be planned before/after
      this.FixCycleSameResource( task, after, cyclictasks );
    }
    else
    {
      this.FixCycleDifferentResources( task, after, cyclictasks );
    }
  *]
}
