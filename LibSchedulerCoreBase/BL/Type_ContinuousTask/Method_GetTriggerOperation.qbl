Quintiq file version 2.0
#parent: #root
Method GetTriggerOperation () declarative as Operation_SC
{
  Description: 'Find the trigger operation (loop 20 times)'
  TextBody:
  [*
    // jiex Jan-24-2017 (created)
    // Get trigger operation on current resource
    // Use If statement to "loop" 20 times to traverse through previous task, due to not able to do object assignment in while loop in declarative scope
    // Loop FeedbackTask as well for task that are already received feedback
    // Checking will stop when ( no more previous task / machine is down / trigger operation is found )
    trigger := null( Operation_SC );
    resource := this.Resource_SC();
    previous := this.Previous().astype( ContinuousTask );
    machinedown := false;
    
    //1
    if( not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //2    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }     
    //3 
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //4    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //5    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //6    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //7    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //8    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //9    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }  
    //10    
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //11   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //12   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //13   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //14   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //15   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //16   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //17   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //18   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //19   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }   
    //20   
    if( isnull( trigger ) and not machinedown and not isnull( previous ) )
    {
      trigger := ifexpr( this.GetIsValidTriggerTask( previous ), previous.GetOperation(), trigger );
      machinedown := previous.HasSetupDuration() or previous.IsFirstAfterDownTime();
      previous := previous.Previous().astype( ContinuousTask );
    }      
    
    //Check feedback. Feedback can also be a trigger to current operation
    if( isnull( previous ) and isnull( trigger ) )
    {
      previousfeedback := resource.LastFeedback(); 
      //1
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //2
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //3
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //4
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //5
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //6
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //7
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //8
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {  
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //9
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }  
      //10
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //11
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //12
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //13
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //14
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //15
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //16
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //17
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //18
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //19
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }   
      //20
      if( isnull( trigger ) and not isnull( previousfeedback ) and not machinedown )
      {
        trigger := ifexpr( this.GetIsValidTriggerFeedback( previousfeedback ), previousfeedback.OperationTaskFeedback().Operation_SC(), null( Operation_SC ) );
        machinedown := previousfeedback.ExportedHasSetupDuration() or previousfeedback.ExportedIsFirstAfterDownTime(); 
        previousfeedback := previousfeedback.PreviousFeedback();
      }
    }
    
    return trigger;
  *]
  InterfaceProperties { Accessibility: 'Extensible' }
}
