Quintiq file version 2.0
#parent: #root
MethodOverride SynchronizeWorkOrderDemands
{
  TextBody:
  [*
    allinstances := selectset( this, WorkOrderDemand, workorderdemand, true )
    updatedinstances := construct( WorkOrderDemands );
    
    traverse( this, ImportedWorkOrderOperation.ImportedWorkOrderDemand.astype( ImportedExternalWorkOrderDemand ), row, row.IsValidDataHard() )
    {
      workorderdemand := ExternalWorkOrderDemand::FindExternalWorkOrderDemand( row.Id() );
      
      if( isnull( workorderdemand ) )
      {
        workorderdemand := this.CreateWorkOrderDemand( row.Id() ).astype( ExternalWorkOrderDemand );
    
      }
      else if( workorderdemand.WorkOrderId() <> this.WorkOrderId() or workorderdemand.SequenceNr() <> this.SequenceNr() )
      {
    
        newoperation := WorkOrderOperation::FindWorkOrderOperation( row.WorkOrderId(), row.SequenceNr() );
        
        if( not isnull( newoperation ) )
        {
          newoperation.WorkOrderDemand( relmove, workorderdemand );
        }
      }
      
      workorderdemand.UpdateGeneric( row );
      updatedinstances.Add( workorderdemand );
    }
    
    //Delete work order demands if they do not exist in KT
    oldinstances := allinstances.Difference( updatedinstances );
    
    traverse( oldinstances, Elements, workorderdemand )
    {
      workorderdemand.Remove();
    }
  *]
}
