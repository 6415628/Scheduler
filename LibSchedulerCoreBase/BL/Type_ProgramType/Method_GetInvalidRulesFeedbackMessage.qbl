Quintiq file version 2.0
#parent: #root
Method GetInvalidRulesFeedbackMessage (Boolean ishardconstraintforoptimizer) declarative remote as String
{
  Description: 'Get invalid rules feedback message'
  TextBody:
  [*
    // Get invalid rules feedback message
    feedbacks := construct( Strings );
    
    lasttaskinprogram := guard( this.LastTaskInProgramSet(), null( TaskInProgramSet ) );
    
    if( not isnull( lasttaskinprogram ) )
    {
      // Get all the rules related to program scope
      ruleswithprogramscope := selectset( this.ProgramTypeConfiguration(), RuleScopeInProgramType.Rule, rule,
                                          rule.IsHardConstraintForOptimizer() = ishardconstraintforoptimizer
                                          and rule.RuleSubType().IsCumulativeValueNeeded()
                                          and rule.IsEnabled() );
      
      traverse( ruleswithprogramscope, Elements, rule )
      {   
        // Construct rule data object
        dosequencingrule := lasttaskinprogram.GetRuleDataObjectForConstraintPrecondition( rule.CharacteristicMain(), false, 0.0 );
        value := rule.RuleSubType().Validate( rule, dosequencingrule );
        if( not value )
        {
          feedbacks.Add( rule.RuleSubType().FeedbackMessage( rule, dosequencingrule ) ); 
        }
      }  
    }
    
    return feedbacks.ToString( String::NewLine() );
  *]
}
