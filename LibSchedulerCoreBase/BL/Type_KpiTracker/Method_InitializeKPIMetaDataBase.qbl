Quintiq file version 2.0
#parent: #root
Method InitializeKPIMetaDataBase
{
  Description: 'Initialize KPI Meta Data for base layer.'
  TextBody:
  [*
    // Create KPI Meta Data
    
    // KPI Productivity
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductivity() );
    kpi.astype( KpiMetaData_SC ).Update( 0, true, true, true, "%", "Percentage" );
    
    // KPI Delivery performance
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIDeliveryPerformance() );
    kpi.astype( KpiMetaData_SC ).Update( 1, true, true, true, "%",  "Percentage" );
    
    // KPI Total available time
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPITotalAvailableTime() );
    kpi.astype( KpiMetaData_SC ).Update( 2, true, false, true, "H", "Hours" );
    
    // KPI Total setup time
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPITotalSetupTime() );
    kpi.astype( KpiMetaData_SC ).Update( 3, false, false, true, "H", "Hours" );
    
    // KPI Total production time
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPITotalProductionTime() );
    kpi.astype( KpiMetaData_SC ).Update( 4, true, false, true, "H", "Hours" );
    
    // KPI Total waiting time
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPITotalWaitingTime() );
    kpi.astype( KpiMetaData_SC ).Update( 5, false, false, true, "H", "Hours" );
    
    // KPI Operations on time
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIOperationsOnTime() );
    kpi.astype( KpiMetaData_SC ).Update( 6, true, true, true, "%", "Percentage" );
    
    // KPI Due, not scheduled in time
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIOperationsDueNotPlanned() );
    kpi.astype( KpiMetaData_SC ).Update( 7, false, false, true, "#", "Number of operation" );
    
    // KPI Not due, scheduled too early
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIOperationsScheduledEarly() );
    kpi.astype( KpiMetaData_SC ).Update( 8, false, false, true, "#", "Number of operation" );
    
    // KPI Sequence adherence
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductionSequenceAdherence() );
    kpi.astype( KpiMetaData_SC ).Update( 9, true, true, true, "%", "Percentage" );
    
    // KPI Resource adherence
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductionResourceAdherence() );
    kpi.astype( KpiMetaData_SC ).Update( 10, true, true, true, "%", "Percentage" );
    
    // KPI Batch efficiency
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIBatchEfficiency() );
    kpi.astype( KpiMetaData_SC ).Update( 11, true, true, true, "%", "Percentage" );
    
    // --- Inventory KPIs ---
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductsCurrentStockLevelHigh() );
    kpi.astype( KpiMetaData_SC ).Update( 12, false, false, true, "#", "Number of product in stocking point" );
    
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductsCurrentStockLevelLow() );
    kpi.astype( KpiMetaData_SC ).Update( 13, false, false, true, "#", "Number of product in stocking point" );
    
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductsCurrentStockLevelOK() );
    kpi.astype( KpiMetaData_SC ).Update( 14, true, false, true, "#", "Number of product in stocking point" );
    
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductsScheduledStockLevelHigh() );
    kpi.astype( KpiMetaData_SC ).Update( 15, false, false, true, "#", "Number of product in stocking point" );
    
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductsScheduledStockLevelLow() );
    kpi.astype( KpiMetaData_SC ).Update( 16, false, false, true, "#", "Number of product in stocking point" );
    
    kpi := this.KpiMetaDataFactory().CreateInstance( Translations::SC_KPIProductsScheduledStockLevelOK() );
    kpi.astype( KpiMetaData_SC ).Update( 17, true, false, true, "#", "Number of product in stocking point" );
  *]
}
