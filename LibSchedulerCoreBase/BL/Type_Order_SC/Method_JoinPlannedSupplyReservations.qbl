Quintiq file version 2.0
#parent: #root
Method JoinPlannedSupplyReservations (PlanUnit_SC earliest_planunit, PlanUnit_SCs remainingplanunits)
{
  Description: "Join the plan units' operations' supply's reservations."
  TextBody:
  [*
    // join the remaining demand's fulfillments with the earliest plan unit's fulfillments
    traverse( remainingplanunits, Elements.Operation_SC.PlannedSupply.Fulfillment, fulfillment )
    {
      join_same_demand := fulfillment.Demand();
      // same supply used by both demands, or to be used by equivalent demand
      join_supply := fulfillment.Supply();
      // grab the equivalent demand from the earliest plan unit
      earliest_same_supply := select( earliest_planunit, 
                                      Operation_SC.PlannedSupply, 
                                      supply,
                                      supply.SupplyType() = join_supply.SupplyType(),
                                      guard( supply.astype( ProductPlannedSupply ).WorkOrderSupplyId() = join_supply.astype( ProductPlannedSupply ).WorkOrderSupplyId(), true ) // If it is product-based
                                      and guard( supply.astype( MaterialPlannedSupply ).WorkOrderOutputMaterialId() = join_supply.astype( MaterialPlannedSupply ).WorkOrderOutputMaterialId(), true ) ); // If it is characteristic based
      
      isFixed := fulfillment.CheckIsFixedReservation();
      
      // grab the fulfillment from the equivalent demand to the same supply
      same_fulfillment := select( earliest_same_supply, 
                                  Fulfillment, 
                                  earliest_same_fulfillment, 
                                  earliest_same_fulfillment.CheckIsFixedReservation() = isFixed // Same type of fixed/planned fulfillment
                                  and earliest_same_fulfillment.Demand() = join_same_demand );
      
      qty := fulfillment.QuantityDecision();
      
      if( isnull( same_fulfillment ) )
      {
        same_fulfillment := join_same_demand.CreateFulfillment( earliest_same_supply, fulfillment.IsManualReservation(), qty, isFixed );
        same_fulfillment.ImportedFixedFulfillment( relset, fulfillment.ImportedFixedFulfillment() ); // New external fulfillments need to be set to its ImportedExternalFulfillment
      }
      else
      {
        same_fulfillment.UpdateQuantity( same_fulfillment.QuantityDecision() + qty );
      }
    }
  *]
}
