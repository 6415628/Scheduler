Quintiq file version 2.0
#parent: #root
MethodOverride InterpretFeedbackMaterial
{
  TextBody:
  [*
    // jiex Sep-29-2016 (created)
    importedfbmaterials := selectsortedset( this.Schedule(),
                                            ImportedFeedbackMaterial_SC,
                                            fbmaterial,
                                            not fbmaterial.IsProcessed(),
                                            fbmaterial.OperationId(),
                                            fbmaterial.TimeStamp() );
                                            
    traverse( importedfbmaterials, Elements, importedfeedbackmaterial )
    {  
      operation := select( this.Schedule(), PlanUnit_SC.Operation_SC, op, op.OperationID() = importedfeedbackmaterial.OperationId() );
    
      if( not isnull( operation ) )
      {
        resourceid := importedfeedbackmaterial.ResourceId();
        status := importedfeedbackmaterial.Status();        
        quantity := importedfeedbackmaterial.Quantity();
        timestamp := importedfeedbackmaterial.TimeStamp();
        isaccumulated := importedfeedbackmaterial.IsAccumulated();
        remark := importedfeedbackmaterial.Description();
        supply := Supply::FindSupply( importedfeedbackmaterial.SupplyMaterialID_Type(), importedfeedbackmaterial.SupplyMaterialID() );
        demand := Demand::FindDemand( importedfeedbackmaterial.DemandMaterialID_Type(), importedfeedbackmaterial.DemandMaterialID() );
    
        if( not isnull( supply ) and not isnull( demand ) )
        {
          if( status = Constants::MaterialStatus_SupplyConsumed() )
          {
            this.FeedbackManager().SupplyConsumed( operation, resourceid, supply, demand, quantity, timestamp, isaccumulated, remark );
            importedfeedbackmaterial.IsProcessed( true );
          }
          else if( status = Constants::MaterialStatus_DemandFulfilled() )
          {
            this.FeedbackManager().DemandFulfilled( operation, resourceid, demand, supply, quantity, timestamp, isaccumulated, remark );
            importedfeedbackmaterial.IsProcessed( true );
          }
        }
      }
    }
  *]
}
