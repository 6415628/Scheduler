Quintiq file version 2.0
#parent: #root
InfoMessages id:#InfoMessages #extension
{
  InfoMessage Batch_RemoveLockedOperationConfirmation
  {
    DefaultText: 'One or more selection is locked by optimizer. Remove from batch can have negative impact on optimizer results. Are you sure you want to remove from batch?'
  }
  InfoMessage Calendars_ExportedSuccessfully
  {
    DefaultText: 'Calendars exported successfully.'
  }
  InfoMessage CampaignType_AddNewCampaign
  {
    DefaultText: 'Add New Campaign'
  }
  InfoMessage CampaignType_CreateConfirmation
  {
    DefaultText: 'The campaign type has to be created before any changes to campaign in campaign type can be done. Do you want to proceed to create the campaign type?'
  }
  InfoMessage CampaignType_EditCampaign
  {
    DefaultText: 'Edit Campaign'
  }
  InfoMessage ChangePasswordNotSupported
  {
    DefaultText: 'Changing passwords is not supported by your login service.'
  }
  InfoMessage CharacteristicLink_DefinedInBusinessLogic
  {
    DefaultText: 'The link between the characteristic and the operation/batch is defined in the business logic.'
  }
  InfoMessage CharacteristicType_DefinedInBusinessLogic
  {
    DefaultText: 'The characteristic type is defined in the business logic.'
  }
  InfoMessage Characteristic_CannotBeUsedForBatchResources (const Characteristic characteristic)
  {
    DefaultText: 'Rules for the characteristic [@characteristic.Name()@] cannot be used for batch resources.'
  }
  InfoMessage Characteristic_CannotBeUsedForSingleResources (const Characteristic characteristic)
  {
    DefaultText: 'Rules for the characteristic [@characteristic.Name()@] cannot be used for single resources.'
  }
  InfoMessage Characteristic_CreationIsDoneInBusinessLogic
  {
    DefaultText: 'Creation of characteristics is done in the business logic.'
  }
  InfoMessage Characteristic_DeletionIsDoneInBusinessLogic
  {
    DefaultText: 'Deletion of characteristics is done in the business logic.'
  }
  InfoMessage Characteristic_NameMustNotBeEmpty
  {
    DefaultText: 'Characteristic name must not be empty.'
  }
  InfoMessage Characteristic_ValueTypeTooltips
  {
    DefaultText:
    [*
      Characteristic type:
      - Normal: the characteristic is available for rule definition based on value of the attribute. 
        Example: the thickness or material type of an operation.
      - Aggregate: the characteristic is available as measure based on the cumulative value of the attribute. 
        Example: the total coil length, total duration, or number of tasks.
    *]
  }
  InfoMessage Confirmation_OverrideSoftPrecondition
  {
    DefaultText: 'Do you wish to proceed?'
  }
  InfoMessage DemandBatch_DeleteBatchesLockedByOptimizerConfirmation
  {
    DefaultText: 'One or more selected batches are locked by optimizer. Delete selected batches can have negative impact on optimizer results. Are you sure you want to delete the selected batches?'
  }
  InfoMessage DemandInBatch_DeleteConfirmation
  {
    DefaultText: 'One or more selected demand in batch is locked by optimizer. Remove demands can have negative impact on optimizer results. Are you sure you want to remove those demands?'
  }
  InfoMessage Demand_MaterialReservationConfirmation
  {
    DefaultText: "One or more of the demands' operation is locked by optimizer. Reserve material can have negative impact on optimizer results. Are you sure you want to reserve material?"
  }
  InfoMessage Demand_OperationLockedByOptimizer (constcontent String demandid)
  {
    DefaultText: "Demand @demandid@'s operation is locked by optimizer. Edit reservation can have negative impact on optimizer results."
  }
  InfoMessage Demand_UnreserveConfirmation
  {
    DefaultText: "One or more of the demands' operation is locked by optimizer. Unreserve can have negative impact on optimizer results.  Are you sure you want to unreserve?"
  }
  InfoMessage DemoCategory_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete this category?'
  }
  InfoMessage DemoCategory_NameNotUnique (constcontent String demoCategoryName)
  {
    DefaultText: 'Demo category @demoCategoryName@ already exist. Please provide a unique demo category name.'
  }
  InfoMessage DemoCategory_UnableToDeleteInternalDemoCategory
  {
    DefaultText: 'Sales demo and Test demo is an internal demo category hence cannot be renamed or deleted.'
  }
  InfoMessage DemoScenario_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete this scenario?'
  }
  InfoMessage DemoScenario_NameNotUnique (const String demoCategoryName, const String demoScenarioName)
  {
    DefaultText: 'Demo scenario @demoCategoryName@/@demoScenarioName@ already exist. Please provide a unique combination of demo category name and scenario name.'
  }
  InfoMessage DesignerResourceOverviewHorizontalVertical
  {
    DefaultText: 'Two or more nodes need to be selected in order to perform this action.'
  }
  InfoMessage DialogCreateEditDemoCategory_NewTitle
  {
    DefaultText: 'Create Demo Category'
  }
  InfoMessage DialogCreateEditDemoCategory_RenameTitle
  {
    DefaultText: 'Rename Demo Category'
  }
  InfoMessage DialogCreateEditDemoScenario_NewTitle
  {
    DefaultText: 'Create Demo Scenario'
  }
  InfoMessage DialogCreateEditDemoScenario_RenameTitle
  {
    DefaultText: 'Rename Demo Scenario'
  }
  InfoMessage Disable
  {
    DefaultText: 'Disable'
  }
  InfoMessage Enable
  {
    DefaultText: 'Enable'
  }
  InfoMessage ExternalWorkOrder_HaveDifferentOperationTypeSequenceAsInternalWorkOrder (constcontent String internalWorkOrderID)
  {
    DefaultText: 'This ERP work order does not share the same sequence of operation types as the Scheduler work order(@internalWorkOrderID@) it is going to replace.'
  }
  InfoMessage ExternalWorkOrder_HaveDifferentPISPAsInternalWorkOrder (constcontent String internalWorkOrderID)
  {
    DefaultText: 'This ERP work order does not share the same product in stocking point as the Scheduler work order(@internalWorkOrderID@) it is going to replace.'
  }
  InfoMessage ExternalWorkOrder_HaveDifferentRoutingAsInternalWorkOrder (const String internalWorkOrderID)
  {
    DefaultText: 'This ERP work order does not share the same routing as the Scheduler work order(@internalWorkOrderID@) it is going to replace.'
  }
  InfoMessage ExternalWorkOrder_NotLinkedToAValidInternalWorkOrder (const String internalWorkOrderID)
  {
    DefaultText: 'This ERP work order is referring to a Scheduler work order(@internalWorkOrderID@) that could not be found.'
  }
  InfoMessage FeedbackProgramChangeTask_InvalidProgram (const String resourceName)
  {
    DefaultText: 'A program change task on resource @resourceName@ must be starting at least one program'
  }
  InfoMessage FeedbackStoppageTask_InvalidReportedStartAndEnd
  {
    DefaultText: 'Start or end must be set when creating feedback stoppage task'
  }
  InfoMessage GanttChartSchedulingCentre_EditFeedback_Program_NotAllowed
  {
    DefaultText: 'Editing feedback directly for programs is not supported. Please edit feedback for the program change task which starts the program instead'
  }
  InfoMessage OptimizerStrategy_DisableOptimizerConfirmationMessage
  {
    DefaultText: 'If you disable this optimizer, then optimizer cannot be used at all, are you sure you want to continue?'
  }
  InfoMessage OptimizerStrategy_DisableProgramOptimizer
  {
    DefaultText: 'As there is no program or configurable rule or shutdown defined, program optimizer cannot be used.'
  }
  InfoMessage OptimizerStrategy_DisableSequencing
  {
    DefaultText: 'Sequencing optimizer cannot be used when program or configurable rule or shutdown is defined.'
  }
  InfoMessage Optimizer_CannotOptimizeAllResources
  {
    DefaultText:
    [*
      This option is not available when there are some resources with configurable rules, and some without. 
      Please try re-optimizing resource groups or resources one by one instead.
    *]
  }
  InfoMessage Optimizer_CannotOptimizeThisResourceGroup
  {
    DefaultText:
    [*
      This option is not available when one or more resources in the group have configurable rules. 
      Please try re-optimizing resources one by one using option ‘This resource’ instead.
    *]
  }
  InfoMessage Optimizer_CannotOptimizeThisResources
  {
    DefaultText:
    [*
      This option is not available for resources without configurable rules. 
      Please use option ‘This resource group’ instead.
    *]
  }
  InfoMessage Optimizer_MixedResourcesWithWithoutConfigurableRules
  {
    DefaultText:
    [*
      Selected operations are for resource groups which contain both resources with and without configurable rules, which require different optimizers. 
      This is currently not supported in the Operations form, please try to limit the selection of operations to a single resource only, 
      or add the operations to Optimizer scope and start the optimizer from the Optimizer dashboard form where more options are supported.
    *]
  }
  InfoMessage Optimizer_OnlyOptimizeWhenProgramOptimizerIsEnabled
  {
    DefaultText: 'Optimization for selected operations is only supported when program optimizer is enabled and configurable rules defined on the resources.'
  }
  InfoMessage Optimizer_OnlyOptimizeWhenSequencingOptimizerIsEnabled
  {
    DefaultText: 'Optimization for selected operations is only supported when sequencing optimizer is enabled and no configurable rules defined on the resources.'
  }
  InfoMessage ProgramChange_PlannedInFrozenPeriod
  {
    DefaultText: 'Program change is planned in the frozen period.'
  }
  InfoMessage ProgramConfiguration_ResourceMustNotBeAssigned (const String resourceIDs)
  {
    DefaultText: 'Selected resource(s) in scope [@resourceIDs@] are already assigned to an existing program definition configuration'
  }
  InfoMessage ProgramOptimizer_DisabledForBetaOptimization
  {
    DefaultText:
    [*
      Program optimizer is in its Beta version and therefore before using it on a customer project more testing is recommended. While using program optimizer please keep the following things in mind:
      
      In the current version optimizer doesn't support program type without program phase.
      If there is already a plan on a resource which is created using sequencing optimizer, then before using program optimizer on the same resource, all the operations must be unplanned.
    *]
  }
  InfoMessage Rule_OptimizerOptionNotSupportedForPhaseTransitionRule
  {
    DefaultText: 'The optimizer option is not supported for phase transition rules.'
  }
  InfoMessage Rule_PenaltyParameterIsFixed (const String parametername)
  {
    DefaultText: 'The Value of this parameter @parametername@ is fixed for this rule.'
  }
  InfoMessage SC_ExternalWorkOrderOperationNotAllowedOnResource (const Resource_SC resource)
  {
    DefaultText: 'This operation is not allowed on resource @resource.Name()@ (allowed rule imported from external system).'
  }
  InfoMessage SC_ImportedFeedbackTask_Instance (const String name)
  {
    DefaultText: 'Imported feedback task [@name@]'
  }
  InfoMessage SC_ImportedFeedbackTask_ViolateHasValidStartedProgram
  {
    DefaultText: 'Imported feedback task must be linked to a valid imported started program.'
  }
  InfoMessage SC_ImportedFeedbackTask_ViolateHasValidShutdownType (const String shutdowntypeid)
  {
    DefaultText: 'Imported feedback task must be linked to a valid shutdown type [@shutdowntypeid@].'
  }
  InfoMessage Fulfillment_UnreserveConfirmation
  {
    DefaultText: 'One or more selected fulfillments are for demands whose operations are locked by optimizer. Unreserve can have negative impact on optimizer results. Are you sure you want to unreserve?'
  }
  InfoMessage SC_ImportedFeedbackProgramDetail_ViolateHasValidStartedProgram
  {
    DefaultText: 'Imported feedback program detail must be linked to an imported started program'
  }
  InfoMessage SC_ImportedFeedbackProgramDetail_Instance (const String name)
  {
    DefaultText: 'Imported feedback program detail [@name@]'
  }
  InfoMessage SC_ImportedFeedbackProgramDetail_ViolateHasValidProgramConfiguration
  {
    DefaultText: 'Imported feedback program detail must be linked to a program configuration'
  }
  InfoMessage SC_ImportedFeedbackStartedProgram_ViolateHasValidStoppageTask
  {
    DefaultText: 'Imported feedback started program must be linked to an imported feedback stoppage task.'
  }
  InfoMessage SC_ImportedFeedbackStartedProgram_ViolateHasValidProgramDetail
  {
    DefaultText: 'Imported feedback started program must be linked to an imported program detail.'
  }
  InfoMessage SC_ImportedFeedbackStartedProgram_Instance (const String name)
  {
    DefaultText: 'Imported feedback started program [@name@]'
  }
  InfoMessage SC_ImportedFeedbackTaskInProgram_ViolateHasValidFeedbackProgramDetail
  {
    DefaultText: 'Imported feedback task in program must be linked to an imported feedback program detail.'
  }
  InfoMessage SC_ImportedFeedbackTaskInProgram_ViolateHasValidFeedbackTask
  {
    DefaultText: 'Imported feedback task in program must be linked to an imported feedback task.'
  }
  InfoMessage SC_ImportedFeedbackTask_ViolateHasValidFeedbackTaskInProgram
  {
    DefaultText: 'Imported feedback task must be linked to a valid imported feedback task in program.'
  }
  InfoMessage ImportedWorkOrderOperationResource_Instance (constcontent String name)
  {
    DefaultText: 'Imported work order operation resource [@name@]'
  }
  InfoMessage ImportedWorkOrderOperationResource_ViolateHasResource
  {
    DefaultText: 'Imported work order operation resource must be linked to a valid resource.'
  }
  InfoMessage ImportedWorkOrderOperationResource_ViolateHasWorkOrderOperation
  {
    DefaultText: 'Imported work order operation resource must be linked to an imported work order operation.'
  }
  InfoMessage LibSM_Scenario_ValidateInput_CannotRenameLeadingScenario
  {
    DefaultText: 'You cannot rename leading scenario.'
  }
  InfoMessage LibSM_Scenario_ValidateInput_NameExistsAsOriginalName (String scenarioName)
  {
    DefaultText: "There already exists a scenario with original name '@scenarioName@'"
  }
  InfoMessage No
  {
    DefaultText: 'No'
  }
  InfoMessage Operation_CannotAddToScope_AlreadyInScope
  {
    DefaultText: 'All of the selection are already in scope for optimization.'
  }
  InfoMessage Operation_CannotRemoveAllFromScope_NothingInScope
  {
    DefaultText: 'Nothing is currently in scope for optimization.'
  }
  InfoMessage Operation_CannotRemoveFromScope_NotInScope
  {
    DefaultText: 'None of the selection are currently in scope for optimization.'
  }
  InfoMessage OptimizerHasStopped_OpenDashboard
  {
    DefaultText: 'Optimizer is not running or has stopped. Click to open optimizer dashboard.'
  }
  InfoMessage OptimizerIsRunning_OpenDashboard
  {
    DefaultText: 'Optimizer is running. Click to open optimizer dashboard.'
  }
  InfoMessage Percentage
  {
    DefaultText: '%'
  }
  InfoMessage ProgramChange_AlreadyScheduled
  {
    DefaultText: 'A program is already scheduled to start at this moment. Please edit the existing program instead.'
  }
  InfoMessage ProgramChange_CannotUnplan
  {
    DefaultText: 'Cannot unplan program change task, please delete program change instead.'
  }
  InfoMessage ProgramChange_DoesNotHaveProgramChange
  {
    DefaultText: 'Selected task(s) does not have program change.'
  }
  InfoMessage ProgramChange_Edit
  {
    DefaultText: 'Edit program change'
  }
  InfoMessage ProgramChange_NoProgramDefinitionAssigned
  {
    DefaultText: 'There is no program definition assigned for the selected resource.'
  }
  InfoMessage ProgramChange_NoProgramTypeSelected
  {
    DefaultText: 'There are no selected programs to change to.'
  }
  InfoMessage ProgramChange_OneProgramForEachProgramSet
  {
    DefaultText: 'Only one program can start for each program set.'
  }
  InfoMessage ProgramChange_ProgramDefinitionNotSupported (const ProgramDefinitionConfiguration programdefinition, const Resource_SC resource)
  {
    DefaultText: 'Program defintion @programdefinition.Name()@ is not supported in this resource @resource.ResourceID()@.'
  }
  InfoMessage ProgramChange_ProgramTypeChangeNotAllowed (const String programtypechangename)
  {
    DefaultText: 'The program change [@programtypechangename@] is not allowed.'
  }
  InfoMessage ProgramChange_WarningMessageNotAllowedProgramChange (const String programtypechangename)
  {
    DefaultText: 'Not allowed program change [@programtypechangename@] is selected to the scope'
  }
  InfoMessage ProgramConfiguration_DeleteProgramChangeBeforeDeletion
  {
    DefaultText: 'All scheduled programs of this program configuration need to be deleted before deleting the program configuration data.'
  }
  InfoMessage ProgramConfiguration_DeleteConfirmation (const String type)
  {
    DefaultText: 'Are you sure you want to delete the selected @type@(s)?'
  }
  InfoMessage ProgramConfiguration_Filters
  {
    DefaultText: 'Program configuration filters'
  }
  InfoMessage ProgramConfiguration_IDMustNotEmpty (const String type)
  {
    DefaultText: '@type@ ID must not be empty.'
  }
  InfoMessage ProgramConfiguration_IDMustUnique (const String type)
  {
    DefaultText: '@type@ ID must be unique.'
  }
  InfoMessage ProgramConfiguration_NameMustNotEmpty (const String type)
  {
    DefaultText: '@type@ name must not be empty.'
  }
  InfoMessage ProgramDefinitionConfiguration_CopyProgramDefinition
  {
    DefaultText: 'Copy program definition'
  }
  InfoMessage ProgramDefinitionConfiguration_Edit
  {
    DefaultText: 'Edit program definition'
  }
  InfoMessage ProgramDefinitionConfiguration_MustHasLeadingProgramSet
  {
    DefaultText: 'There must be a program set flagged as leading set.'
  }
  InfoMessage ProgramDefinitionConfiguration_NoSelectedResources
  {
    DefaultText: 'There must be a resource selected for a program definition.'
  }
  InfoMessage ProgramDefinitionConfiguration_ResourceHasOneProgramDefinition
  {
    DefaultText: 'A resource can only have one program definition.'
  }
  InfoMessage ProgramDefinitionConfiguration_TypeName
  {
    DefaultText: 'Program definition'
  }
  InfoMessage ProgramDefinitionConfiguration_DeleteProgramChangeBeforeRemoveResource
  {
    DefaultText: 'All scheduled program changes need to be deleted before removing the resource from this program definition.'
  }
  InfoMessage ProgramPhaseConfiguration_AlreadyAtFirstPosition (const String programphaseconfigurationid)
  {
    DefaultText: 'Program phase @programphaseconfigurationid@ is already at the first position.'
  }
  InfoMessage ProgramPhaseConfiguration_AlreadyAtLastPosition (const String programphaseconfigurationid)
  {
    DefaultText: 'Program phase @programphaseconfigurationid@ is already at the last position.'
  }
  InfoMessage ProgramPhaseConfiguration_Edit
  {
    DefaultText: 'Edit program phase'
  }
  InfoMessage ProgramPhaseConfiguration_NoPhaseTransitionRule
  {
    DefaultText: 'Each program phase which is not the last phase of the program type should at least have one phase transition rule.'
  }
  InfoMessage ProgramPhaseConfiguration_UnassignTransitionRules
  {
    DefaultText: 'This will unassign the phase transition rules for the predecessor phase.'
  }
  InfoMessage ProgramPhaseConfiguration_TypeName
  {
    DefaultText: 'Program phase'
  }
  InfoMessage ProgramPhase_Name
  {
    DefaultText: 'phase'
  }
  InfoMessage ProgramSetConfiguration_AlreadyLeading
  {
    DefaultText: 'The selected program set is already leading.'
  }
  InfoMessage ProgramSetConfiguration_CopyProgramSet
  {
    DefaultText: 'Copy program set'
  }
  InfoMessage ProgramSetConfiguration_Edit
  {
    DefaultText: 'Edit program set'
  }
  InfoMessage ProgramSetConfiguration_TypeName
  {
    DefaultText: 'Program set'
  }
  InfoMessage ProgramTypeChangeConfiguration_Edit
  {
    DefaultText: 'Edit program type change'
  }
  InfoMessage ProgramTypeChangeConfiguration_Filters
  {
    DefaultText: 'Program type change filters'
  }
  InfoMessage ProgramTypeChangeConfiguration_AlreadyExists (const String name)
  {
    DefaultText: 'Program type change ( @name@ ) already exists.'
  }
  InfoMessage ProgramTypeChangeConfiguration_FromProgramTypeMustNotBeEmpty
  {
    DefaultText: 'From program type must not be empty.'
  }
  InfoMessage ProgramTypeChangeConfiguration_ToProgramTypeMustNotBeEmpty
  {
    DefaultText: 'To program type must not be empty.'
  }
  InfoMessage ProgramTypeChangeConfiguration_TypeName
  {
    DefaultText: 'Program type change'
  }
  InfoMessage ProgramTypeConfiguration_CopyProgramType
  {
    DefaultText: 'Copy program type'
  }
  InfoMessage ProgramTypeConfiguration_Edit
  {
    DefaultText: 'Edit program type'
  }
  InfoMessage ProgramTypeConfiguration_TypeName
  {
    DefaultText: 'Program type'
  }
  InfoMessage Program_InvalidProgramPhases (const String currentprogramphases, const String programconfigphases)
  {
    DefaultText: 'The current program phases ( @currentprogramphases@ ) not aligned with configured phases ( @programconfigphases@ ).'
  }
  InfoMessage Program_Name
  {
    DefaultText: 'program'
  }
  InfoMessage Program_TypeName
  {
    DefaultText: 'Program'
  }
  InfoMessage ResetAll_Confirmation
  {
    DefaultText: 'Are you sure you want to reset demo scenario?'
  }
  InfoMessage ResourceGroup_AddNewCampaignType
  {
    DefaultText: 'Add New Campaign Type'
  }
  InfoMessage ResourceGroup_HasInvalidSubtaskAssigned (const String resourceGroup, const String unsupportedSubtasks)
  {
    DefaultText: '@resourceGroup@ have un-supported sub-task(s) in data-driven time constraints mode assigned(@unsupportedSubtasks@).'
  }
  InfoMessage RuleDetailsDifferentJumpChangeover_EditDialogTitle
  {
    DefaultText: 'Edit difference jump changeover'
  }
  InfoMessage RuleDetailsDifferentJumpRange_EditDialogTitle
  {
    DefaultText: 'Edit difference jump range'
  }
  InfoMessage RuleDetailsValues_EditDialogTitle
  {
    DefaultText: 'Edit value set'
  }
  InfoMessage RuleFeedback_DifferenceJump (const String rulename, const String characteristicname, const Real differencejump, 
    const String comparatorstring, const String rulesubtype, const Real value, 
    const String percentagestring)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] difference jump [@differencejump.Round(2)@@percentagestring@] is @comparatorstring@ the @rulesubtype@ of [@value@@percentagestring@].'
  }
  InfoMessage RuleFeedback_EqualTo
  {
    DefaultText: 'equal to'
  }
  InfoMessage RuleFeedback_InNotAllowedValue (const String rulename, const String characteristicname, const String value)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] [@value@] is in the not allowed value set.'
  }
  InfoMessage RuleFeedback_InNotAllowedValueJump (const String rulename, const String characteristicname, const String from, 
    const String to)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] value jump [@from@] to [@to@] is on the list of not allowed changeovers.'
  }
  InfoMessage RuleFeedback_LessThan
  {
    DefaultText: 'less than'
  }
  InfoMessage RuleFeedback_MinMaxCombinedLength (const String rulename, const String characteristicname, const String scope, 
    const Real value, const String operatorstring, const String rulesubtypename, 
    const Real threshold)
  {
    DefaultText: 'Rule [@rulename@]: The total [@characteristicname@] in the @scope@ [@value.Round(2)@] is @operatorstring@ the @rulesubtypename@ of [@threshold@].'
  }
  InfoMessage RuleFeedback_MinMaxValue (const String rulename, const String characteristicname, const Real value, 
    const String operatorstring, const String rulesubtype, const Real rulevalue)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] [@value@] is @operatorstring@ the @rulesubtype@ of [@rulevalue@].'
  }
  InfoMessage RuleFeedback_MoreThan
  {
    DefaultText: 'more than'
  }
  InfoMessage RuleFeedback_NotEqualTo
  {
    DefaultText: 'not equal to'
  }
  InfoMessage RuleFeedback_NotInAllowedValue (const String rulename, const String characteristicname, const String value)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] [@value@] is not in the allowed value set.'
  }
  InfoMessage RuleFeedback_NotInAllowedValueJump (const String rulename, const String characteristicname, const String from, 
    const String to)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] value jump [@from@] to [@to@] is not on the list of allowed changeovers.'
  }
  InfoMessage RuleFeedback_OverlappingHasGap (const String rulename, const String characteristicname, const Real previousmin, 
    const Real previousmax, const Real currentmin, const Real currentmax, 
    const Real gap, const Real value)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] ranges of [@previousmin.Round(2)@-@previousmax.Round(2)@] and [@currentmin.Round(2)@-@currentmax.Round(2)@] have a gap of [@gap.Round(2)@]. There must be a minimum overlap of [@value.Round(2)@].'
  }
  InfoMessage RuleFeedback_OverlappingLessThanMinValue (const String rulename, const String characteristicname, const Real previousmin, 
    const Real previousmax, const Real currentmin, const Real currentmax, 
    const Real overlappingvalue, const Real value)
  {
    DefaultText: 'Rule [@rulename@]: The [@characteristicname@] ranges of [@previousmin.Round(2)@-@previousmax.Round(2)@] and [@currentmin.Round(2)@-@currentmax.Round(2)@] have an overlap of [@overlappingvalue.Round(2)@]. There must be a minimum overlap of [@value.Round(2)@].'
  }
  InfoMessage RuleRange_HasOverlappingRuleRange (const Real from, const Real to, const Real from1, 
    const Real to1)
  {
    DefaultText: 'Allowed difference jump range [@from@] - [@to@] cannot overlap with range [@from1@] - [@to1@].'
  }
  InfoMessage RuleScope_PhaseTransitionNotForLastPhase
  {
    DefaultText: 'A phase transition rule cannot be defined for the last phase of a program type.'
  }
  InfoMessage RuleScope_ThresholdMustBeGreaterThanZero
  {
    DefaultText: 'The shutdown scope threshold must be greater than zero.'
  }
  InfoMessage RuleValue_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete the selected value(s)?'
  }
  InfoMessage Rule_AtLeastOneValue
  {
    DefaultText: 'You must create at least one value.'
  }
  InfoMessage Rule_CannotBeCreatedForContinuousResource
  {
    DefaultText: 'Rules cannot be created for continuous resources.'
  }
  InfoMessage Rule_CharacteristicIsEmpty
  {
    DefaultText: 'Characteristic selection cannot be empty.'
  }
  InfoMessage Rule_ConditionIsEmpty
  {
    DefaultText: 'Condition selection cannot be empty.'
  }
  InfoMessage RuleJumpChangeover_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete the selected difference jump changeover(s)?'
  }
  InfoMessage RuleRange_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete the selected difference jump range(s)?'
  }
  InfoMessage RuleValueStrings_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete the selected rule value string(s)?'
  }
  InfoMessage Rule_ConditionNotSupportedForCombinedLength
  {
    DefaultText: 'Rule conditions are not supported for the min/max combined length rule type.'
  }
  InfoMessage Rule_Filters
  {
    DefaultText: 'Rule filters'
  }
  InfoMessage Rule_ManualPlanningNotSupportedForMinimumCombinedLength
  {
    DefaultText: 'The warning with allowed user override option is not supported for minimum combined length rules.'
  }
  InfoMessage Rule_ManualPlanningNotSupportedForPhaseTransitionRule
  {
    DefaultText: 'The warning with allowed user override option is not supported for phase transition rules.'
  }
  InfoMessage Rule_MinCombinedLengthCannotUsedPhaseTransition
  {
    DefaultText: 'The minimum combined length rule cannot be used as phase transition rule.'
  }
  InfoMessage Rule_NoProgramPhasesSelectedInScope
  {
    DefaultText: 'There are no selected program phases in the scope of this rule.'
  }
  InfoMessage Rule_NoProgramsSelectedInScope
  {
    DefaultText: 'There are no selected programs in the scope of this rule.'
  }
  InfoMessage Rule_NoResourcesSelectedInScope
  {
    DefaultText: 'There are no selected resources in the scope of this rule.'
  }
  InfoMessage Rule_NoShutdownTypesSelectedInScope
  {
    DefaultText: 'There are no selected shutdown types in the scope of this rule.'
  }
  InfoMessage RuleScope_OnlyOnePhaseTransitionRuleForPhase
  {
    DefaultText: 'There can be at most one phase transition rule for a program phase.'
  }
  InfoMessage Rule_PrecondUsedInProgramPhaseScopeWarning
  {
    DefaultText:
    [*
      It is not advised to use the manual planning option 'Warning with allowed user override' for program phase rules. 
      This combination could lead to missing or incorrect warnings.
    *]
  }
  InfoMessage Rule_PrecondUsedInShutdownScopeWarning
  {
    DefaultText:
    [*
      It is not advised to use the manual planning option 'Warning with allowed user override' for shutdown rules. 
      This combination could lead to missing or incorrect warnings when planning multiple operations simultaneously 
      or replanning tasks which are currently in the scope of the rule.
    *]
  }
  InfoMessage Rule_ThresholdCannotBeEmpty
  {
    DefaultText: 'Threshold cannot be empty.'
  }
  InfoMessage Rule_ToMustMoreThanFrom (const Real from, const Real to)
  {
    DefaultText: 'The "To" range value [@to@] must be more than the "From" range value [@from@].'
  }
  InfoMessage Rule_CopyRule
  {
    DefaultText: 'Copy rule'
  }
  InfoMessage Rule_CreateRule
  {
    DefaultText: 'Create rule'
  }
  InfoMessage Rule_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete the selected rule(s)?'
  }
  InfoMessage Rule_EditRule
  {
    DefaultText: 'Edit rule'
  }
  InfoMessage Rule_FromToMustBeUnique (const String from, const String to)
  {
    DefaultText: 'The difference jump changeover from [@from@] to [@to@] already exists.'
  }
  InfoMessage Rule_HasOverlappingRuleRange
  {
    DefaultText: 'The rule contains invalid overlapping difference jump ranges.'
  }
  InfoMessage Rule_NameCannotBeEmpty
  {
    DefaultText: 'Rule name cannot be empty.'
  }
  InfoMessage Rule_NameMustBeUnique
  {
    DefaultText: 'Rule name must be unique.'
  }
  InfoMessage Rule_NoRuleChangeover
  {
    DefaultText: 'You must create at least one difference jump changeover.'
  }
  InfoMessage Rule_NoRuleRange
  {
    DefaultText: 'You must create at least one difference jump range.'
  }
  InfoMessage Rule_RuleTypeCannotBeEmpty
  {
    DefaultText: 'Rule type selection cannot be empty.'
  }
  InfoMessage RuleScope_SelectMeasureCharacteristic
  {
    DefaultText: 'Please select measure characteristic for shutdown scope.'
  }
  InfoMessage Rule_ValueMustBeEqualOrGreaterThanZero
  {
    DefaultText: 'Value must be equal or greater than zero.'
  }
  InfoMessage Rule_ValueMustBeGreaterThanZero
  {
    DefaultText: 'Value must be greater than zero.'
  }
  InfoMessage Rule_ValueSetAlreadyExists (const String value)
  {
    DefaultText: 'The value set with value [@value@] already exists.'
  }
  InfoMessage SC_BatchNotSelected
  {
    DefaultText: 'No batch is selected.'
  }
  InfoMessage SC_CampaignType_EmptyName
  {
    DefaultText: 'The campaign name cannot be empty.'
  }
  InfoMessage SC_Designer_FormBatchDetailTitle
  {
    DefaultText: 'Batch Details,'
  }
  InfoMessage SC_DialogResource_CapacityOverview_CombineCapacityWithAnotherResource
  {
    DefaultText: 'Combine capacity with another resource'
  }
  InfoMessage SC_DialogResource_CapacityOverview_UserDefined
  {
    DefaultText: 'User defined'
  }
  InfoMessage SC_DialogResource_EditMultipleResources
  {
    DefaultText: 'Edit Multiple Resources'
  }
  InfoMessage SC_DialogResource_LeadTimeStrategy_Precondition
  {
    DefaultText: 'This resource is in scope for a shutdown type or program definition, shutdown or program scheduling is only supported for the ASAP lead time strategy.'
  }
  InfoMessage SC_DialogResource_StrategyASAPDescription
  {
    DefaultText: 'Performing the Operation as soon as possible.'
  }
  InfoMessage SC_DialogResource_StrategyInfiniteDescription
  {
    DefaultText: 'Performing multiple operations concurrently, assuming an infinite resource capacity.'
  }
  InfoMessage SC_DialogResource_StrategyJITDescription
  {
    DefaultText: 'Performing the operation just in time for the downstream operation or the requested due date.'
  }
  InfoMessage SC_DialogResource_StrategyToolSimulationDescription
  {
    DefaultText: 'Define additional parameters for tool simulation strategy in corresponding tab.'
  }
  InfoMessage SC_FeedbackCannotBeDragged
  {
    DefaultText: 'Task(s) with execution feedback cannot be rescheduled.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_NoProgramDefined (const String operationID, const String programsets)
  {
    DefaultText: 'Feedback task for operation @operationID@ has no defined program for program set(s) @programsets@'
  }
  InfoMessage SC_ImportedFeedbackTaskInProgram_Instance (const String name)
  {
    DefaultText: 'Imported feedback task in program [@name@]'
  }
  InfoMessage SC_ImportedInventoryTarget_InvalidMaximumStockLevel (const String name)
  {
    DefaultText: "[@name@]'s maximum stock level must be greater or equal to zero."
  }
  InfoMessage SC_ImportedInventoryTarget_InvalidMinimumStockLevel (constcontent String name)
  {
    DefaultText: "[@name@]'s minimum stock level must be greater or equal to zero."
  }
  InfoMessage SC_ImportedInventoryTarget_InvalidTargetStockLevel (constcontent String name)
  {
    DefaultText: "[@name@]'s target stock level must be greater or equal to zero."
  }
  InfoMessage SC_ImportedInventoryTarget_MinimumExceedMaximumStockLevel (constcontent String name, const Real maxStockLevel, const Real minStockLevel)
  {
    DefaultText: "[@name@]'s maximum stock level ( @maxStockLevel@ ) should not exceed minimum stock level ( @minStockLevel@ )."
  }
  InfoMessage SC_ImportedInventoryTarget_TargetNotWithinMinimumAndMaximumStockLevel (const String name, constcontent Real maxStockLevel, constcontent Real minStockLevel, 
    const Real targetStockLevel)
  {
    DefaultText: "[@name@]'s target stock level ( @targetStockLevel@ ) should be within minimum stock level (@ minStockLevel @) and maximum stock level ( @maxStockLevel@ )."
  }
  InfoMessage SC_ImportedInventoryTarget_Instance (constcontent String name)
  {
    DefaultText: 'Imported inventory target [@name@]'
  }
  InfoMessage SC_ImportedInventoryTarget_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported inventory target must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedWorkOrderOperationPrecedence_ViolateDependencyTypeAllowedValues
  {
    DefaultText: 'Imported work order operation precedence must have a valid dependency type. The valid values are FS, FF and SS.'
  }
  InfoMessage SC_ImportedWorkOrderOperationPrecedence_ViolateHasNonCircularPrecedence (const String circularPrecedenceChain)
  {
    DefaultText:
    [*
      Imported work order operation precedence is part of a circular precedence chain.
      
      [@circularPrecedenceChain@]
    *]
  }
  InfoMessage SC_ImportedWorkOrderOperationPrecedence_ViolateNoBufferTypeAllowedValues
  {
    DefaultText: 'Imported work order operation precedence must have a valid no buffer type. The valid values are (empty), ReserveUpstream, ReserveDownstream, ReserveBoth and Outflow.'
  }
  InfoMessage SC_ImportedWorkOrderOperationPrecedence_ViolateOffsetRelationAllowedValues
  {
    DefaultText: 'Imported work order operation precedence must have a valid offset relation. The valid values are (empty), Min, Max and Synch.'
  }
  InfoMessage SC_ImportedSubTaskTypeOnResourceGroup_Instance (const String name)
  {
    DefaultText: 'Imported subtask type on resource group [@name@]'
  }
  InfoMessage SC_ImportedSubtaskTypeOnRG_NotAllowedInTimeConstraintMode
  {
    DefaultText: 'Imported subtask type on resource group not allowed in time constraint mode.'
  }
  InfoMessage SC_IntegrationConfiguration_EnableInventoryTargetSetting
  {
    DefaultText: 'Common Information Model must set to FALSE to enable Inventory Target Setting.'
  }
  InfoMessage SC_IntegrationConfiguration_EnableMPSIntegration
  {
    DefaultText: 'Common Information Model must set to FALSE to enable MPS Integration.'
  }
  InfoMessage SC_KPIUnplanned
  {
    DefaultText: 'Unplanned'
  }
  InfoMessage SC_NrOfOperationsExceedMaxBatchSize (const Real maxBatchSize)
  {
    DefaultText: 'Number of selected operations exceeded allowed resource max batch size (@maxBatchSize@).'
  }
  InfoMessage SC_Operation_IsOnHoldSchdulledWithinOnHoldHorizon (const String operationid, const DateTime taskstart, const DateTime endofonholdhorizon)
  {
    DefaultText: '@operationid@ with an "on hold" status is not allowed to be planned within the on hold horizon that ends at [@endofonholdhorizon@].'
  }
  InfoMessage SC_Operation_IsTaskScheduledBeforeShelfLifeExpirationDate (const String taskend, const String shelflifeexpirationdate)
  {
    DefaultText: 'This operation is planned to end [@taskend@] after the shelf life expiration date [@shelflifeexpirationdate@].'
  }
  InfoMessage SC_OperationsDoNotShareCommonResource
  {
    DefaultText: 'Selected operations do not share a common resource.'
  }
  InfoMessage SC_SanityCheck_ExternalProgramID (const String externalprogramid)
  {
    DefaultText: 'ExternalProgramID (@externalprogramid@)'
  }
  InfoMessage SC_SanityCheck_ExternalStoppageTaskID (const String externalstoppagetaskid)
  {
    DefaultText: 'ExternalStoppageTaskID (@externalstoppagetaskid@)'
  }
  InfoMessage SC_SanityCheck_PlanUnitID (const String planunitid)
  {
    DefaultText: 'PlanUnitID (@planunitid@)'
  }
  InfoMessage SC_SanityCheck_TargetDate (DateTime targetDate)
  {
    DefaultText: 'Target date (@targetDate@)'
  }
  InfoMessage SC_SanityCheck_WorkOrderOperationSequenceNr (const Number workorderoperationseqnr)
  {
    DefaultText: 'WorkOrderOperationSequenceNr (@workorderoperationseqnr@)'
  }
  InfoMessage SC_ScenarioNotCreatedForDataset
  {
    DefaultText: 'Scenario not created for the loaded dataset. Please create it.'
  }
  InfoMessage SC_SchedulingInFrozenPeriodConfirmation
  {
    DefaultText: 'One of more of the selection falls within frozen period. Are you sure you want to continue?'
  }
  InfoMessage Shutdown_PlannedInFrozenPeriod
  {
    DefaultText: 'Shutdown is planned in the frozen period.'
  }
  InfoMessage SC_StoppageTaskFallsInFrozenPeriod (const StoppageTask stoppagetask, const DateTime endoffrozenperiod)
  {
    DefaultText: '@stoppagetask.TaskID()@ falls within the frozen period that ends at @endoffrozenperiod@.'
  }
  InfoMessage SC_StoppageTask_FrozenByUser (const StoppageTask stoppagetask)
  {
    DefaultText: '@stoppagetask.TaskID()@ has been deliberately frozen by the planner, replanning this task outside of the frozen horizon will reset it.'
  }
  InfoMessage SC_Task_IsOnHoldWithinOnHoldHorizon (const DateTime taskstart, const DateTime endofonholdhorizon)
  {
    DefaultText: "This task has the status on hold and is planned to start [@taskstart.Format( 'D2-MM H2:m' )@] within the on hold horizon that ends at [@endofonholdhorizon.Format( 'D2-MM H2:m' )@]."
  }
  InfoMessage SC_Task_IsScheduledBeforeShelfLifeExpirationDate (const String taskend, const String shelflifeexpirationdate)
  {
    DefaultText: 'This task is planned to end [@taskend@] after the shelf life expiration date [@shelflifeexpirationdate@].'
  }
  InfoMessage Scenario_CannotPromoteLeadingScenario
  {
    DefaultText: 'You cannot promote a leading scenario.'
  }
  InfoMessage Scenario_CannotEditLeadingScenario
  {
    DefaultText: 'You cannot edit a leading scenario.'
  }
  InfoMessage Scenario_PromoteMessage (const String promotedScenarioName)
  {
    DefaultText:
    [*
      Promoting this scenario, '@promotedScenarioName@' to leading scenario will cause it to be renamed to 'Schedule'. 
      The leading scenario is the only scenario that can be published and it cannot be edited or deleted.
    *]
  }
  InfoMessage Scenario_PromoteTItle
  {
    DefaultText: 'Promote to Leading Scenario'
  }
  InfoMessage Schedule_OneOrMoreResourceHaveInvalidSubtaskTypeAssigned
  {
    DefaultText: 'Import ERP data is disabled as one or more resource group have invalid subtask type assigned.'
  }
  InfoMessage StoppageSubTask_NotAllowedManualAssignment
  {
    DefaultText: 'The assignment of stoppage subtask type is maintained in shutdown type or program configuration.'
  }
  InfoMessage ShutdownType_DefaultDurationMustGreaterThanZero
  {
    DefaultText: 'Default duration must be greater than zero.'
  }
  InfoMessage ShutdownType_DefaultDurationMustGreaterThanZeroConstraint (const Duration defaultduration)
  {
    DefaultText: 'The default duration of the shutdown type [@defaultduration.Format("DDh:m")@] must be greater than zero.'
  }
  InfoMessage ShutdownType_DeleteConfirmation
  {
    DefaultText: 'Are you sure you want to delete the selected shutdown type(s)?'
  }
  InfoMessage ShutdownType_Edit
  {
    DefaultText: 'Edit shutdown type'
  }
  InfoMessage ShutdownType_IDMustBeUnique
  {
    DefaultText: 'Shutdown type ID must be unique.'
  }
  InfoMessage ShutdownType_IDMustNotBeEmpty
  {
    DefaultText: 'Shutdown type ID must not be empty.'
  }
  InfoMessage ShutdownType_NameMustNotBeEmpty
  {
    DefaultText: 'Shutdown type name must not be empty.'
  }
  InfoMessage ShutdownType_NoSelectedResources
  {
    DefaultText: 'There are no selected resources in the scope of this shutdown type.'
  }
  InfoMessage ShutdownType_NotAvailableInResource
  {
    DefaultText: 'There is no shutdown types available for the selected resource.'
  }
  InfoMessage ShutdownType_NotSupportedInThisResource (const ShutdownType shutdowntype, const Resource_SC resource)
  {
    DefaultText: 'Shutdown type @shutdowntype.Name()@ is not supported in this resource @resource.ResourceID()@.'
  }
  InfoMessage ShutdownType_UsedInResourceSchedule
  {
    DefaultText: 'All scheduled shutdowns of this type need to be deleted before removing the resource from this shutdown type.'
  }
  InfoMessage Shutdown_CannotUnplan
  {
    DefaultText: 'Cannot unplan shutdown task, please delete shutdown instead.'
  }
  InfoMessage Shutdown_DoesNotHaveShutdown
  {
    DefaultText: 'Selected task(s) does not have shutdown.'
  }
  InfoMessage Shutdown_DurationMustGreaterThanZero
  {
    DefaultText: 'Shutdown duration must be greater than zero.'
  }
  InfoMessage Shutdown_Edit
  {
    DefaultText: 'Edit shutdown'
  }
  InfoMessage ShutdownType_DeleteShutdownBeforeDeletion
  {
    DefaultText: 'All scheduled shutdowns of this type need to be deleted before deleting the shutdown type.'
  }
  InfoMessage SC_SchedulingNotSupportBatchResource (const String type)
  {
    DefaultText: '@type@ scheduling is not supported for batch resources.'
  }
  InfoMessage SC_SchedulingNotSupportContinuousResource (const String type)
  {
    DefaultText: '@type@ scheduling is not supported for continuous resources.'
  }
  InfoMessage SC_SchedulingOnlySupportASAPStrategy (const String type)
  {
    DefaultText: '@type@ scheduling is only supported for the ASAP lead time strategy.'
  }
  InfoMessage Shutdown_ShutdownTypeMustNotEmpty
  {
    DefaultText: 'Shutdown type must not be empty.'
  }
  InfoMessage Shutdown_TypeName
  {
    DefaultText: 'Shutdown'
  }
  InfoMessage SubTaskOnResourceGroup_NotAllowedInTimeConstraintMode (const String subTaskType)
  {
    DefaultText: '@subTaskType@ not supported in data-driven time constraint mode.'
  }
  InfoMessage Supply_UnreserveConfirmation
  {
    DefaultText: 'One or more selected supplies have fulfillments to demands whose operations are locked by optimizer. Unreserve can have negative impact on optimizer results. Are you sure you want to unreserve?'
  }
  InfoMessage ImportedWorkOrder_HaveDifferentOperationListAsInternalWorkOrder
  {
    DefaultText: 'Imported work order must share the same sequence of operation type(s) with the internal work order it is going to replace.'
  }
  InfoMessage ImportedWorkOrder_HaveDifferentPISPAsInternalWorkOrder
  {
    DefaultText: 'Imported work order must share the same product in stocking point with the internal work order it is going to replace.'
  }
  InfoMessage ImportedWorkOrder_HaveDifferentRoutingAsInternalWorkOrder
  {
    DefaultText: 'Imported work order must share the same routing with the internal work order it is going to replace.'
  }
  InfoMessage ImportedWorkOrder_InvalidStockingPoint
  {
    DefaultText: 'Imported work order must be linked to an imported stocking point.'
  }
  InfoMessage ImportedWorkOrder_NotLinkedToAValidInternalWorkOrder
  {
    DefaultText: 'Imported work order must refer to a valid Scheduler work order.'
  }
  InfoMessage InternalWorkOrder_CannotSplitPlannedOrderWithMultiplePlanUnits
  {
    DefaultText: 'Cannot split planned order that has more than one plan unit.'
  }
  InfoMessage InternalWorkOrder_HaveDifferentOperationTypeSequenceAsExternalWorkOrder (String externalWorkOrderID)
  {
    DefaultText: 'ERP work order(@externalWorkOrderID@) does not share the same sequence of operation types in stocking point as this Scheduler work order it is suppose to replace.'
  }
  InfoMessage InternalWorkOrder_HaveDifferentPISPAsExternalWorkOrder (String externalWorkOrderID)
  {
    DefaultText: 'ERP work order(@externalWorkOrderID@) does not share the same product in stocking point as this Scheduler work order it is suppose to replace.'
  }
  InfoMessage InternalWorkOrder_HaveDifferentRoutingAsExternalWorkOrder (String externalWorkOrderID)
  {
    DefaultText: 'ERP work order(@externalWorkOrderID@) does not share the same routing as this Scheduler work order it is suppose to replace.'
  }
  InfoMessage Operation_CannotChangeBecauseLockedByOptimizer (const String operationID)
  {
    DefaultText: 'Operation @operationID@ is locked by optimizer and cannot allow changes.'
  }
  InfoMessage SC_DialogSplitInternalWorkOrder_PanelEnterDesiredLotSizeOrQuantity_Title
  {
    DefaultText: 'Enter Desired Lot Size or Quantity'
  }
  InfoMessage SC_DialogSplitInternalWorkOrder_PanelEnterDesiredLotSizeOrQuantity_TitleQuantityOnly
  {
    DefaultText: 'Enter Desired Quantity'
  }
  InfoMessage SC_DialogSplitInternalWorkOrder_SplitTitle
  {
    DefaultText: 'Split Work Order'
  }
  InfoMessage ImportedMPSPlan_Instance (const String name)
  {
    DefaultText: 'Imported MPS plan [@name@]'
  }
  InfoMessage ImportedMPSPlan_MultipleMPSPlanFound
  {
    DefaultText: 'Only one MPS plan can be imported in each import.'
  }
  InfoMessage ImportedMPSPlannedOrder_Instance (const String name)
  {
    DefaultText: 'Imported MPS planned order [@name@]'
  }
  InfoMessage ImportedMPSPlannedOrder_InvalidDueDate
  {
    DefaultText: 'Imported MPS planned order must have a due date that starts after MPS period start.'
  }
  InfoMessage ImportedMPSPlannedOrder_InvalidMPSPlanID
  {
    DefaultText: 'Imported MPS planned order must have a valid MPS Plan ID.'
  }
  InfoMessage ImportedMPSPlannedOrder_InvalidQuantity
  {
    DefaultText: 'Imported MPS planned order must have quantity more than zero.'
  }
  InfoMessage ImportedMPSPlannedOrder_InvalidQuantityMultipleOfLotSize
  {
    DefaultText: "Imported MPS planned order should have a quantity as a multiple of its routing's lot size."
  }
  InfoMessage ImportedMPSPlannedOrder_InvalidRoutingID
  {
    DefaultText: 'Imported MPS planned order must have a valid Routing ID.'
  }
  InfoMessage InternalWorkOrder_CannotJoinInternallyCreatedWorkOrder
  {
    DefaultText: 'Join of internally created work orders is not allowed.'
  }
  InfoMessage InternalWorkOrder_CannotSplitInternallyCreatedWorkOrder
  {
    DefaultText: 'Split of internally created work order is not allowed.'
  }
  InfoMessage InternalWorkOrder_CannotSplitMultiplePlannedOrderAtOneGo
  {
    DefaultText: 'Can only split one planned order at a time.'
  }
  InfoMessage InternalWorkOrder_CannotSplitPlannedOrderWithFeedback
  {
    DefaultText: 'Cannot split planned order with feedback received.'
  }
  InfoMessage InternalWorkOrder_CannotSplitPlannedOrdersWithMaterialReservedForIt
  {
    DefaultText: "Planned orders with reservation of upstream supplies can't be split."
  }
  InfoMessage InternalWorkOrder_CannotSplitPlannedOrdersWithMaterialReservedForOthers
  {
    DefaultText: "Planned orders reserved for a downstream demand can't be split."
  }
  InfoMessage InternalWorkOrder_SplitQuantityHasToBeGreaterThanZero
  {
    DefaultText: 'Planned order split quantity has to be greater than zero.'
  }
  InfoMessage InternalWorkOrder_SplitQuantityHasToBeSmallerThanOriginalQuantity
  {
    DefaultText: "Planned order split quantity has to be smaller than it's original quantity."
  }
  InfoMessage SC_DialogCreateEditInternalWorkOrder_EditTitle
  {
    DefaultText: 'Edit Work Order'
  }
  InfoMessage SC_DialogCreateEditInternalWorkOrder_NewTitle
  {
    DefaultText: 'Create Work Order'
  }
  InfoMessage SC_MPSPlan_ImportFail_MultipleMPSPlan
  {
    DefaultText: 'MPS plan import failed, as multiple MPS plans were detected.'
  }
  InfoMessage SC_MPSPlan_ImportNotRequired_NoNewMPSPlan
  {
    DefaultText: 'MPS import was not required. No new MPS plan has been published.'
  }
  InfoMessage SC_MPSPlan_Import_WithErrors
  {
    DefaultText: 'MPS plan has been imported, but with errors.'
  }
  InfoMessage InternalWorkOrder_CannotJoinPlannedOrdersOfDifferentProduct
  {
    DefaultText: 'Cannot join planned orders with different product.'
  }
  InfoMessage InternalWorkOrder_CannotJoinPlannedOrdersOfDifferentRouting
  {
    DefaultText: 'Cannot join planned orders with different routing.'
  }
  InfoMessage InternalWorkOrder_CannotJoinPlannedOrdersWithMaterialReservedForIt
  {
    DefaultText: "Planned orders with reservation of upstream supplies can't be joined."
  }
  InfoMessage InternalWorkOrder_CannotJoinPlannedOrdersWithMaterialReservedForOthers
  {
    DefaultText: "Planned orders reserved for a downstream demand can't be joined."
  }
  InfoMessage InternalWorkOrder_CannotJoinPlannedOrdersWithOperationPlanned
  {
    DefaultText: 'Cannot join planned orders that have any of their operations planned.'
  }
  InfoMessage SC_MPSPlan_ImportSuccess
  {
    DefaultText: 'MPS plan successfully imported.'
  }
  InfoMessage MobileClient_InvalidMobileClientHandlerGroup
  {
    DefaultText: 'Mobile Client HTTP Handler Group Definition is not found, please ensure that the Mobile Client HTTP Handler Group Definition is configured correctly in Configuration Utility'
  }
  InfoMessage PTF_TestMoveScheduleTimeLaterScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - move schedule time later'
  }
  InfoMessage PTF_TestMoveScheduleTimeLaterScenario_FailResponse (Duration day)
  {
    DefaultText: "PTF_TestMoveScheduleTimeLaterScenario: The input duration: '@day@' is less than 0"
  }
  InfoMessage PTF_TestMoveScheduleTimeLaterScenario_Name
  {
    DefaultText: '1. Move schedule time later'
  }
  InfoMessage PTF_TestMoveScheduleTimeLaterScenario_SCScript (Number day, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Move schedule time later
      Input parameters: MoveScheduleTimeLater day [Number];
      Description: Schedule time will be move later based on the passed in duration in day
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      MoveScheduleTimeLater @day@;
    *]
  }
  InfoMessage PTF_TestMoveScheduleTimeLaterScenario_SuccessResponse (Duration day)
  {
    DefaultText: "Schedule time has moved to '@day@' day(s) later."
  }
  InfoMessage PTF_TestPlanAllOperation_FailResponse
  {
    DefaultText: 'PTF_TestPlanAllOperations: Precondition failed'
  }
  InfoMessage PTF_TestPlanAllOperation_SuccessResponse
  {
    DefaultText: 'All operations has been planned'
  }
  InfoMessage PTF_TestResequenceBeginningTaskScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence task at the beginning of schedule'
  }
  InfoMessage PTF_TestResequenceBeginningTaskScenario_FailResponse (Number nroftask)
  {
    DefaultText: "PTF_TestResequenceBeginningTaskScenario: The input number of task: '@nroftask@' is less than 0."
  }
  InfoMessage PTF_TestResequenceBeginningTaskScenario_Name
  {
    DefaultText: '2. Resequence task at the beginning of schedule'
  }
  InfoMessage PTF_TestResequenceBeginningTaskScenario_SCScript (Number nroftask, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Resequence task at the beginning
      Input parameters: nroftask [Number];
      Description: Tasks at the beginning will be resequenced based on the passed in number of task
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      ResequenceBeginningTask @nroftask@;
    *]
  }
  InfoMessage PTF_TestResequenceBeginningTaskScenario_SuccessResponse (Number nroftask)
  {
    DefaultText: "'@nroftask@' task(s) has been resequence at the beginning of schedule"
  }
  InfoMessage PTF_TestResequenceEndTaskScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence task at the end of schedule'
  }
  InfoMessage PTF_TestResequenceEndTaskScenario_FailResponse (Number nroftask)
  {
    DefaultText: "PTF_TestResequenceEndTaskScenario: The input number of task: '@nroftask@' is less than 0."
  }
  InfoMessage PTF_TestResequenceEndTaskScenario_Name
  {
    DefaultText: '4. Resequence task at the end of schedule'
  }
  InfoMessage PTF_TestResequenceEndTaskScenario_SCScript (Number nroftask, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Resequence task at the end
      Input parameters: nroftask [Number];
      Description: Tasks at the end will be resequenced based on the passed in number of task
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      ResequenceEndTask @nroftask@;
    *]
  }
  InfoMessage PTF_TestResequenceEndTaskScenario_SuccessResponse (Number nroftask)
  {
    DefaultText: "'@nroftask@' task(s) has been resequence at the end of schedule"
  }
  InfoMessage PTF_TestResequenceMiddleTaskScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence task at the middle of schedule'
  }
  InfoMessage PTF_TestResequenceMiddleTaskScenario_FailResponse (Number nroftask)
  {
    DefaultText: "PTF_TestResequenceEndTaskScenario: The input number of task: '@nroftask@' is less than 0."
  }
  InfoMessage PTF_TestResequenceMiddleTaskScenario_Name
  {
    DefaultText: '3. Resequence task at the middle of schedule'
  }
  InfoMessage PTF_TestResequenceMiddleTaskScenario_SCScript (Number nroftask, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Resequence task at the middle
      Input parameters: nroftask [Number];
      Description: Tasks at the middle will be resequenced based on the passed in number of task
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      ResequenceMiddleTask @nroftask@;
    *]
  }
  InfoMessage PTF_TestResequenceMiddleTaskScenario_SuccessResponse (Number nroftask)
  {
    DefaultText: "'@nroftask@' task(s) has been resequence at the Middle of schedule"
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToFirstScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence tool required resource task at the middle of schedule to first in resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToFirstScenario_FailResponse
  {
    DefaultText: 'PTF_TestResequenceToolResourceMiddleTaskToFirstScenario: The input number of task is less than or equal to 0.'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToFirstScenario_Name
  {
    DefaultText: '5. Resequence tool required resource task at the middle of schedule to first in resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToFirstScenario_SCScript (Number nroftask, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Resequence single tool required task at the middle as resource first task
      Input parameters: nroftask [Number]
      Description: Tool required tasks at the middle will be resequenced based on the passed in number of task
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      ResequenceToolResourceMiddleTaskToFirst @nroftask@;
    *]
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToFirstScenario_SuccessResponse (Number nroftask)
  {
    DefaultText: "'@nroftask@' task(s) has been resequenced to first in resource"
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToLastScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence tool required resource task at the middle of schedule to last in resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToLastScenario_FailResponse
  {
    DefaultText: 'PTF_TestResequenceToolResourceMiddleTaskToLastScenario: The input number of task is less than or equal to 0.'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToLastScenario_Name
  {
    DefaultText: '6. Resequence tool required resource task at the middle of schedule to last in resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToLastScenario_SCScript (Number nroftask, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Resequence single tool required task at the middle after resource last task
      Input parameters: nroftask [Number]
      Description: Tool required tasks at the middle will be resequenced based on the passed in number of task
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      ResequenceToolResourceMiddleTaskToLast @nroftask@;
    *]
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToLastScenario_SuccessResponse (Number nroftask)
  {
    DefaultText: "'@nroftask@' task(s) has been resequenced to last in resource"
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence tool required resource task at the middle of schedule to next'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextScenario_FailResponse
  {
    DefaultText: 'PTF_TestResequenceToolResourceMiddleTaskToNextScenario: The input number of loop is less than or equal to 0.'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextScenario_Name
  {
    DefaultText: '10. Resequence tool required resource task at the middle of schedule to next'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextScenario_SCScript (Number nrofloop, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Resequence single tool required task at the middle to next
      Input parameters: nrofloop [Number]
      Description: Tool required tasks at the middle will be resequenced to next in the loop, based on the passed in number of loop
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      Loop @nrofloop@;
      ResequenceToolResourceMiddleTaskToNext @nrofloop@;
      EndLoop;
    *]
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextScenario_SuccessResponse
  {
    DefaultText: 'Task has been resequenced to next'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextToolResourceMiddleScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence tool required resource task at the middle of schedule to next tool resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextToolResourceMiddleScenario_FailResponse
  {
    DefaultText: 'PTF_TestResequenceToolResourceMiddleTaskToNextToolResourceScenario: The input number of task is less than or equal to 0.'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextToolResourceMiddleScenario_Name
  {
    DefaultText: '7. Resequence tool required resource task at the middle of schedule to next tool resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextToolResourceMiddleScenario_SCScript (Number nroftask, Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      /*
      Name: Resequence single tool required task at the middle to next tool resource
      Input parameters: nroftask [Number]
      Description: Tool required tasks at the middle will be resequenced to next tool resource based on the passed in number of task
      */
      
      SetMultiplier @resourcemultiplynr@,@ordermultiplynr@;
      CreateData;
      PlanAllOperation;
      ResequenceToolResourceMiddleTaskToNextToolResourceMiddle @nroftask@;
    *]
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTaskToNextToolResourceMiddleScenario_SuccessResponse (Number nroftask)
  {
    DefaultText: "'@nroftask@' task(s) has been resequenced to next tool resource"
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTasksToFirstScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence tool required resource tasks at the middle of schedule to first in resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTasksToFirstScenario_Name
  {
    DefaultText: '8. Resequence tool required resource tasks at the middle of schedule to first in resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTasksToLastScenario_Description
  {
    DefaultText: 'For Scheduler benchmarking test scenario - resequence tool required resource tasks at the middle of schedule to last in resource'
  }
  InfoMessage PTF_TestResequenceToolResourceMiddleTasksToLastScenario_Name
  {
    DefaultText: '9. Resequence tool required resource tasks at the middle of schedule to last in resource'
  }
  InfoMessage PTF_TestSetDataMultiplier_FailResponse
  {
    DefaultText: 'PTF_TestSetDataMultiplier: Resource multiply number or order multiply number cannot be less than or equal to 0.'
  }
  InfoMessage PTF_TestSetDataMultiplier_SuccessResponse (Number resourcemultiplynr, Number ordermultiplynr)
  {
    DefaultText:
    [*
      Resource multiply number has been set to @resourcemultiplynr@.
      Order multiply number has been set to @ordermultiplynr@.
    *]
  }
  InfoMessage Reason_Batching
  {
    DefaultText: 'Batching'
  }
  InfoMessage Reason_Material
  {
    DefaultText: 'Material'
  }
  InfoMessage Reason_Scheduled
  {
    DefaultText: 'Scheduled'
  }
  InfoMessage Reason_Scheduling
  {
    DefaultText: 'Scheduling'
  }
  InfoMessage Reason_Suggested
  {
    DefaultText: 'Suggested'
  }
  InfoMessage SC_AllowedOnResource
  {
    DefaultText: 'This task violates the allowed rule of the resource.'
  }
  InfoMessage SC_AreNotAllowedAsBatch (String id)
  {
    DefaultText: '@id@ are not allowed as a batch because:'
  }
  InfoMessage SC_BatchCannotBeMovedDown
  {
    DefaultText: 'Batch element(s) cannot be moved down, because some of them are already on the last position'
  }
  InfoMessage SC_BatchCannotBeMovedUp
  {
    DefaultText: 'Batch element(s) cannot be moved up, because some of them are already on the first position'
  }
  InfoMessage SC_BatchContainsOperationWithoutPracticeInCommon
  {
    DefaultText: 'This batch contains operation(s) that does not have practice in common with the selected practice.'
  }
  InfoMessage SC_BatchDetails
  {
    DefaultText: 'Batch details'
  }
  InfoMessage SC_BatchExceedMaxSize (const Real batchsize, const Real maxbatchsize, const String resourcename)
  {
    DefaultText: 'Size of this batch (@batchsize@) exceeds the maximum batch capacity (@maxbatchsize@) of resource @resourcename@.'
  }
  InfoMessage SC_BatchHasDependencyToNextOperation (const String batchid)
  {
    DefaultText: 'Batch @batchid@ has dependencies to its next operation(s).'
  }
  InfoMessage SC_BatchHasFeedback (const String batchid)
  {
    DefaultText: 'Batch (@batchid@) has feedback.'
  }
  InfoMessage SC_BatchHasStarted (const String batchid)
  {
    DefaultText: 'Batch @batchid@ has started.'
  }
  InfoMessage SC_BatchNoAlternativePractice (const String batchID)
  {
    DefaultText: '@batchID@ does not have alternative practice.'
  }
  InfoMessage SC_BatchNotAllowedOnResource (Batch batch, Resource_SC resource)
  {
    DefaultText: '@batch.BatchID()@ does not have batch operations that are allowed on this resource @resource.Name()@.'
  }
  InfoMessage SC_BatchOperationCannotBeBatched (String operationid, Resource_SC resource)
  {
    DefaultText: '@operationid@ cannot be added as a batch in @resource.Name()@ because:'
  }
  InfoMessage SC_BatchOperationNoPracticeInCommonWithBatch
  {
    DefaultText: 'This selection does not have a practice in common with the batch.'
  }
  InfoMessage SC_BatchOperationNotAllowedOnResource
  {
    DefaultText: 'selected batch operations are not allowed on this resource.'
  }
  InfoMessage SC_BatchOperationNotAllowedToAddLaterOperation
  {
    DefaultText: 'Not allowed to add a later operation prior to an earlier operation.'
  }
  InfoMessage SC_BatchSizeNotAllowed (BatchResource resource)
  {
    DefaultText: 'The batch cannot fit in the resource. Max Batch Size is @resource.MaximumBatchSize()@.'
  }
  InfoMessage SC_Confirmation_MaterialReservation_Demands
  {
    DefaultText: "One or more of the demands' operation fall within the frozen period. Are you sure you want to reserve material?"
  }
  InfoMessage SC_Confirmation_MaterialReservation_Operations
  {
    DefaultText: 'One or more of the operations fall within the frozen period. Are you sure you want to reserve material?'
  }
  InfoMessage SC_Confirmation_MaterialReservation_Tasks
  {
    DefaultText: 'One or more of the tasks fall within the frozen period. Are you sure you want to reserve material?'
  }
  InfoMessage SC_Confirmation_Unreserve_Demands
  {
    DefaultText: "One or more of the demands' operation falls within the frozen period. Are you sure you want to unreserve?"
  }
  InfoMessage SC_Confirmation_Unreserve_Supplies
  {
    DefaultText: "One or more of the supplies has fulfillments to demands' whose operation falls within the frozen period. Are you sure you want to unreserve?"
  }
  InfoMessage SC_Converter_InvalidNumberValue
  {
    DefaultText: 'Invalid NUMBER value processed.'
  }
  InfoMessage SC_Converter_InvalidRealValue
  {
    DefaultText: 'Invalid REAL value processed.'
  }
  InfoMessage SC_DemandBatchRoutingStep_CannotDelete_AllHasDemandBatchCreated
  {
    DefaultText: 'All the selected demand batch routing steps are of demand batch types that have demand batches created from them. Please remove all of the demand batches of a demand batch type before removing it.'
  }
  InfoMessage SC_DemandBatchRoutingStep_NotUniqueSequenceNr
  {
    DefaultText: 'Please enter a unique sequence number for this routing step.'
  }
  InfoMessage SC_DemandBatchRoutingStep_InvalidOperationType
  {
    DefaultText: 'Please enter an operation type that corresponds to an existing resource group.'
  }
  InfoMessage SC_DemandBatchType_CannotDelete_AllHasDemandBatchCreated
  {
    DefaultText: 'All the selected demand batch types have demand batches created from them. Please remove all of the demand batches of a demand batch type before removing it.'
  }
  InfoMessage SC_DemandBatchType_InvalidMaxBatchSize
  {
    DefaultText: 'Please enter a max batch size greater or equal to 0.'
  }
  InfoMessage SC_DemandBatchType_NotUniqueBatchType
  {
    DefaultText: 'Please enter a unique batch type.'
  }
  InfoMessage SC_Demand_IsInFrozenPeriod (const String demandid)
  {
    DefaultText: "Demand @demandid@'s operation is planned in the frozen period."
  }
  InfoMessage SC_DialogDemandBatchRoutingStep_EditTitle
  {
    DefaultText: 'Edit demand batch routing step'
  }
  InfoMessage SC_DialogDemandBatchRoutingStep_NewTitle
  {
    DefaultText: 'New demand batch routing step'
  }
  InfoMessage SC_DialogDemandBatchType_EditTitle
  {
    DefaultText: 'Edit demand batch type'
  }
  InfoMessage SC_DialogDemandBatchType_NewTitle
  {
    DefaultText: 'New demand batch type'
  }
  InfoMessage SC_DialogMaterialReservation_Title (const String demandId, const String supplyId)
  {
    DefaultText: 'Reserve material @demandId@ for order @supplyId@'
  }
  InfoMessage SC_EditKT_ProcessDuration_DifferentKTForSelectedResources
  {
    DefaultText: 'Selected resources have different knowledge configuration for process durations.'
  }
  InfoMessage SC_EditKT_SetupDuration_DifferentKTForSelectedResources
  {
    DefaultText: 'Selected resources have different knowledge configuration for setup durations.'
  }
  InfoMessage SC_ImportKTFromExcel (const String scenarioCategory, const String scenarioName)
  {
    DefaultText: 'Replaced with imported KT data from imported scenario @scenarioCategory@\\@scenarioName@.'
  }
  InfoMessage SC_ImportedDemandBatchRoutingStep_Instance (const String name)
  {
    DefaultText: 'Imported demand batch routing step [@name@]'
  }
  InfoMessage SC_ImportedDemandBatchRoutingStep_ViolateHasValidOperationType
  {
    DefaultText: "Imported demand batch routing step doesn't have a valid operation type. The type should correspond to a ResourceGroup entry in the Resources form."
  }
  InfoMessage SC_ImportedDemandBatchRoutingStep_ViolateHasValidSequenceNr
  {
    DefaultText: 'Imported demand batch routing step must have a sequence number of greater than zero.'
  }
  InfoMessage SC_ImportedDemandBatchType_Instance (constcontent String name)
  {
    DefaultText: 'Imported demand batch type [@name@]'
  }
  InfoMessage SC_ImportedDemandBatchType_ViolateHasValidMaxBatchSize
  {
    DefaultText: 'Imported demand batch type must have a maximum batch size of greater than zero.'
  }
  InfoMessage SC_ImportedIntegrationConfiguration_Instance (const String name)
  {
    DefaultText: 'Imported integration configuration [@name@]'
  }
  InfoMessage SC_ImportedIntegrationConfiguration_InvalidActiveFeedbackAdapterValue
  {
    DefaultText: "Imported integration configuration's active feedback adapter must not be empty."
  }
  InfoMessage SC_ImportedIntegrationConfiguration_InvalidSanityCheckLimitValue
  {
    DefaultText: "Imported integration configuration's sanity check limit must have value more than or equal to 0."
  }
  InfoMessage SC_ImportedPlanningConfiguration_Instance (const String name)
  {
    DefaultText: 'Imported planning configuration [@name@]'
  }
  InfoMessage SC_ImportedPlanningConfiguration_ViolateHasValidFSPLMaxNrOfCycles (const Number minNrCycles)
  {
    DefaultText: 'Imported planning configuration must have a minimum FSPL max number of cycles of at least @minNrCycles@.'
  }
  InfoMessage SC_ImportedPlanningConfiguration_ViolateHasValidCapacityPlanningNumberOfBuckets (Number minNrBuckets)
  {
    DefaultText: 'Imported planning configuration must have a minimum number of buckets for capacity planning of at least @minNrBuckets@.'
  }
  InfoMessage SC_IntegrationConfiguration_SanityCheckLimitLessThanZero
  {
    DefaultText: 'Sanity check limit must be bigger or equal to zero.'
  }
  InfoMessage SC_IntegrationConfiguration_ShopFloorHistoryLessThanZero
  {
    DefaultText: 'Shop floor history must be bigger or equal to zero duration.'
  }
  InfoMessage SC_MPSPlannedOrder_CreateFirmPlannedOrders_NoOpenQuantity
  {
    DefaultText: 'Selected planned orders do not have any open quantity, no firm planned orders would be created'
  }
  InfoMessage SC_MPSPlannedOrder_IsQuantityMultipleOfLotSize
  {
    DefaultText: "The quantity of this planned order from MPS is not a multiple of its routing's lot size."
  }
  InfoMessage SC_Operation_FrozenByUser (const String operationid)
  {
    DefaultText: '@operationid@ has been deliberately frozen by the planner, replanning this task outside of the frozen horizon will reset it.'
  }
  InfoMessage SC_PlanUnit_HasDifferentHierarchy
  {
    DefaultText: 'At least one of the plan units is on a different hierarchy level.'
  }
  InfoMessage SC_PlanUnit_HasDifferentParentPlanUnit
  {
    DefaultText: 'At least one of the plan units has a different parent plan unit from the others.'
  }
  InfoMessage SC_PlanUnit_OperationSoftDeleted (const Number operationSequenceNr)
  {
    DefaultText: 'The work order operation of operation @operationSequenceNr@ of this plan unit operation is no longer present, but the operation could not be deleted as it is planned. If the operation is unplanned, it will be removed during the next data synchronization.'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_Instance (const String name)
  {
    DefaultText: 'Imported planned supply to external supply [@name@]'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_ViolateHasIncreasingSupplyConversionQuantity
  {
    DefaultText: 'Imported planned supply to external supply must have a conversion quantity greater than or equal to the previous conversion quantity.'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_ViolateHasSameProductInStockingPoint
  {
    DefaultText: 'Imported planned supply to external supply must have matching product in stocking points for its work order supply and external supply.'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_ViolateHasValidConversionQuantityForExternalSupply
  {
    DefaultText: 'Imported planned supply to external supply must have a conversion quantity equal or lesser than the external supply quantity.'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_ViolateHasValidConversionQuantityForWorkOrderSupply
  {
    DefaultText: 'Imported planned supply to external supply must have a conversion quantity equal or lesser than the work order supply quantity.'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_ViolateHasValidEarlierCompletedSupplyConversion (const Real quantity)
  {
    DefaultText: 'Imported planned supply to external supply already has an earlier completed supply conversion of @quantity@ units.'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_ViolateHasValidQuantity
  {
    DefaultText: 'Imported planned supply to external supply must have a quantity of greater than zero.'
  }
  InfoMessage SC_ImportedPlannedSupply2ExternalSupply_ViolateHasWorkOrderSupply
  {
    DefaultText: 'Imported planned supply to external supply must be linked to an imported work order supply.'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_Instance (const String name)
  {
    DefaultText: 'Imported planned supply to material [@name@]'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_ViolateHasIncreasingSupplyConversionQuantity
  {
    DefaultText: 'Imported planned supply to material must have a conversion quantity greater than or equal to the previous conversion quantity.'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_ViolateHasSameStockingPoint
  {
    DefaultText: 'Imported planned supply to material must have matching stocking points for work order output material and stock material.'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_ViolateHasValidConversionQuantityForMaterial
  {
    DefaultText: 'Imported planned supply to material must have a conversion quantity equal or lesser than the stock material quantity.'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_ViolateHasValidConversionQuantityForWorkOrderOutputMaterial
  {
    DefaultText: 'Imported planned supply to material must have a conversion quantity equal or lesser than the work order output material quantity.'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_ViolateHasValidEarlierCompletedSupplyConversion (const Real quantity)
  {
    DefaultText: 'Imported planned supply to material already has an earlier completed supply conversion of @quantity@ units.'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_ViolateHasValidQuantity
  {
    DefaultText: 'Imported planned supply to material must have a quantity of greater than zero.'
  }
  InfoMessage SC_ImportedPlannedSupply2Material_ViolateHasWorkOrderOutputMaterial
  {
    DefaultText: 'Imported planned supply to material must be linked to an imported work order output material.'
  }
  InfoMessage SC_OptimizationInProgress
  {
    DefaultText: 'Optimizer is running. Please try again after optimizer is completed.'
  }
  InfoMessage SC_PlanUnit_HasPlannedSupplyConvertedToInventory
  {
    DefaultText: "At least one of the plan units of this plan unit's order has planned supplies converted to inventory."
  }
  InfoMessage SC_Demand_FulfilledWithSupplyOfDifferentUoMOrIsDiscrete
  {
    DefaultText: 'This demand has been fulfilled with supplies of different UoM or IsDiscrete.'
  }
  InfoMessage SC_Fulfillment_NotSameUoMOrIsDiscrete
  {
    DefaultText: 'The supply used is not compatible for the demand as their UoM or IsDiscrete are not the same.'
  }
  InfoMessage SC_PlanningConfiguration_FSPLMaxNrOfCyclesNotValid
  {
    DefaultText: 'FSPL max cycles must be bigger than 0.'
  }
  InfoMessage SC_PlanningConfiguration_CapacityPlanningNumberOfBucketsNotValid
  {
    DefaultText: 'Number of buckets must be bigger than 0.'
  }
  InfoMessage SC_QuantityRoundDownTo (Real roundDownQuantity)
  {
    DefaultText: 'Round down (@roundDownQuantity@)'
  }
  InfoMessage SC_QuantityRoundUpTo (const Real roundUpQuantity)
  {
    DefaultText: 'Round up (@roundUpQuantity@)'
  }
  InfoMessage SC_StandardDialogOkButtonFeedbackErrorMsg
  {
    DefaultText: 'Please solve the errors or override them if possible.'
  }
  InfoMessage SC_Supply_FulfillDemandOfDifferentUoMOrDiscrete
  {
    DefaultText: 'This supply has been reserved for demands with different UoM or IsDiscrete.'
  }
  InfoMessage SC_Task_HasFeedbackConsistency
  {
    DefaultText: 'This task has not been reported as finished but later operations have already been reported to have started.'
  }
  InfoMessage SC_Task_HasReservationWithExistingSupply
  {
    DefaultText: 'This task has reserved material that has been deleted in data. Please check material reservation.'
  }
  InfoMessage SC_BatchTask_IsNotSoftDeleted
  {
    DefaultText: 'This batch contains an operation that has been deleted in the data. It will be deleted in Scheduler after it has been unplanned and data is synchronized.'
  }
  InfoMessage SC_BatchTask_IsPlannedWithoutFeedback
  {
    DefaultText: 'This batch task has batch sequence element that has feedback and should be removed.'
  }
  InfoMessage SC_BatchUseDefaultPractice (const String batchID)
  {
    DefaultText: '@batchID@ is using its default practice.'
  }
  InfoMessage SC_CampaignInCampaignType_NameEmpty_Precondition
  {
    DefaultText: 'Campaign name cannot be empty. Please select a different name.'
  }
  InfoMessage SC_CampaignInCampaignType_NameNotUnique_Precondition (const String name)
  {
    DefaultText: 'Campaign "@name@" already in use. Please select a different name.'
  }
  InfoMessage SC_CampaignTask_IsWithinMaxSize (const Number nroftasksincampaign, const Number maxsize)
  {
    DefaultText: 'Campaign size @nroftasksincampaign@ is greater than max size @maxsize@.'
  }
  InfoMessage SC_CampaignTask_IsWithinMinSize (const Number nroftasksincampaign, const Number minsize)
  {
    DefaultText: 'Campaign size @nroftasksincampaign@ is less than min size @minsize@.'
  }
  InfoMessage SC_CampaignType_AddNewCampaign_TC
  {
    DefaultText: 'Add new campaign'
  }
  InfoMessage SC_CampaignType_EditCampaign_TC
  {
    DefaultText: 'Edit campaign'
  }
  InfoMessage SC_CampaignType_IsHighestDisplayIndex
  {
    DefaultText: 'This campaign type has the highest display index.'
  }
  InfoMessage SC_CampaignType_IsLowestDisplayIndex
  {
    DefaultText: 'This campaign type has the lowest display index.'
  }
  InfoMessage SC_CampaignType_UniqueName
  {
    DefaultText: 'This campaign type does not have a unique name.'
  }
  InfoMessage SC_CancelObsoletedFeedbackByScheduler
  {
    DefaultText: 'Canceled by Scheduler due to received an updated feedback on a different resource group'
  }
  InfoMessage SC_CannotBeAddedInto (String id, Batch batch)
  {
    DefaultText: '@id@ cannot be added/merged into @batch.BatchID()@ because:'
  }
  InfoMessage SC_CannotBeBatched (String id)
  {
    DefaultText: '@id@ cannot be batched because:'
  }
  InfoMessage SC_CannotBeChanged (String id)
  {
    DefaultText: '@id@ cannot be changed because:'
  }
  InfoMessage SC_CannotBeDeleted (String id)
  {
    DefaultText: '@id@ cannot be deleted because:'
  }
  InfoMessage SC_CannotBeMovedDown (String id)
  {
    DefaultText: '@id@ cannot be moved down because:'
  }
  InfoMessage SC_CannotBeMovedToBottom (String id)
  {
    DefaultText: '@id@ cannot be moved to bottom because:'
  }
  InfoMessage SC_CannotBeMovedToTop (String id)
  {
    DefaultText: '@id@ cannot be moved to top because:'
  }
  InfoMessage SC_CannotBeMovedUp (String id)
  {
    DefaultText: '@id@ cannot be moved up because:'
  }
  InfoMessage SC_CannotBePlanned (String id)
  {
    DefaultText: '@id@ cannot be planned because:'
  }
  InfoMessage SC_CannotBePlannedBefore (String id, String name)
  {
    DefaultText: '@id@ cannot be planned before @name@ because:'
  }
  InfoMessage SC_CannotBePlannedOn (String id, String name)
  {
    DefaultText: '@id@ cannot be planned on @name@ because:'
  }
  InfoMessage SC_CannotBeRemovedFrom (String id, String name)
  {
    DefaultText: '@id@ cannot be removed from @name@ because:'
  }
  InfoMessage SC_CannotBeReplanned (String id)
  {
    DefaultText: '@id@ cannot be replanned because:'
  }
  InfoMessage SC_CannotBeRescheduledDueToFSPLFeedback
  {
    DefaultText: 'Rescheduling an FSPL bound operation with plan unit already receiving feedback is not allowed.'
  }
  InfoMessage SC_CannotBeScheduledAfter (String id, String name)
  {
    DefaultText: '@id@ cannot be scheduled after @name@ because:'
  }
  InfoMessage SC_CannotBeScheduledDueCircularity (String id)
  {
    DefaultText: '@id@ is not allowed to be scheduled prior to an earlier operation of the same order.'
  }
  InfoMessage SC_CannotBeScheduledDueToFSPLFeedback
  {
    DefaultText: 'Scheduling prior to a FSPL bound operation with plan unit already receiving feedback is not allowed.'
  }
  InfoMessage SC_CannotBeUnplanned (String id)
  {
    DefaultText: '@id@ cannot be unplanned because:'
  }
  InfoMessage SC_CannotCreateFeedbackCalendar
  {
    DefaultText: 'Please select a resource to create calendar feedback'
  }
  InfoMessage SC_CannotPlanOnSingleResource (Resource_SC resource)
  {
    DefaultText: 'Only Single Task are allowed to be planned on Resource @resource.Name()@.'
  }
  InfoMessage SC_CannotRemoveTaskWithFeedback_Resource_NoFeedback
  {
    DefaultText: 'All the tasks on the selected resource did not receive feedback from the shop floor.'
  }
  InfoMessage SC_CannotRemoveTaskWithFeedback_SelectedTasks_NoFeedback
  {
    DefaultText: 'All the selected tasks on this resource did not receive feedback from the shop floor.'
  }
  InfoMessage SC_CannotSetSchedulingHorizonAfter_WithinSchedulingHorizon
  {
    DefaultText: 'The default scheduling horizon is larger than the end of the selected task.'
  }
  InfoMessage SC_CampaignTask_HasFeedbackTask (const String campaignid)
  {
    DefaultText: 'Campaign task (@campaignid@) has tasks with feedback.'
  }
  InfoMessage SC_CannotUnplan_OperationHasFeedbackTask (const String operationid)
  {
    DefaultText: 'Operation (@operationid@) has feedback.'
  }
  InfoMessage SC_CannotUnplan_OperationNotPlanned (const String operationid)
  {
    DefaultText: 'Operation (@operationid@) not yet planned.'
  }
  InfoMessage SC_CannotUnplan_TaskHasFeedbackTask (const String taskid)
  {
    DefaultText: 'Task (@taskid@) has feedback.'
  }
  InfoMessage SC_CannotUseNoBufferActionAndNoBufferOutflow
  {
    DefaultText: 'NoBufferAction and NoBufferOutflow subtasks cannot be both used in the same resource group.'
  }
  InfoMessage SC_CheckBoxToOverride
  {
    DefaultText: '( Check the Checkbox to override. )'
  }
  InfoMessage SC_ContainBatches
  {
    DefaultText: 'Optimizer is disabled in a system that has batches.'
  }
  InfoMessage SC_ContinuousResource_CanSetIsFirstTaskAfterDownTime (const Boolean status)
  {
    DefaultText: "This task is @ifexpr( status, 'already', 'not' )@ the first task after downtime."
  }
  InfoMessage SC_ContinuousResource_PlanBeforeParallelWithFeedback (const String task)
  {
    DefaultText: 'Aftertask @task@ is parallel with feedback.'
  }
  InfoMessage SC_CreateNewFeedbackBatch
  {
    DefaultText: 'Hold down Shift + Ctrl key to create a new feedback batch with selected exported tasks'
  }
  InfoMessage SC_DeleteBatchesConfirmation
  {
    DefaultText: 'Are you sure you want to delete the selected batches?'
  }
  InfoMessage SC_DeleteCampaignInCampaignType
  {
    DefaultText: 'Are you sure you want to delete all the selected campaign(s)?'
  }
  InfoMessage SC_DeleteFeedbackBatchesConfirmation
  {
    DefaultText: 'There are some batches that have feedback. Are you sure you want to delete the selected batches?'
  }
  InfoMessage SC_DeleteFrozenBatchDemandsConfirmation
  {
    DefaultText: 'This batch is in the frozen period. Are you sure you want to remove these demands?'
  }
  InfoMessage SC_DeleteFrozenBatchesConfirmation
  {
    DefaultText: 'There are some batches that fall within the frozen period. Are you sure you want to delete the selected batches?'
  }
  InfoMessage SC_DeleteToolBlock
  {
    DefaultText: 'Are you sure you want to delete the selected tool block?'
  }
  InfoMessage SC_DeleteToolBlocks
  {
    DefaultText: 'Are you sure you want to delete the selected tool blocks?'
  }
  InfoMessage SC_DeleteToolRequirement
  {
    DefaultText: 'Are you sure you want to delete the selected tool requirement?'
  }
  InfoMessage SC_DeleteToolRequirements
  {
    DefaultText: 'Are you sure you want to delete the selected tool requirements?'
  }
  InfoMessage SC_DeleteWorkOrderColorRange
  {
    DefaultText: 'Are you sure you want to delete the selected order colors?'
  }
  InfoMessage SC_DemandBatch_AlreadyFull
  {
    DefaultText: 'The batch is already full.'
  }
  InfoMessage SC_DemandBatch_CannotBeDeleted
  {
    DefaultText: 'Selected demand batches cannot be deleted because:'
  }
  InfoMessage SC_DemandBatch_DemandsQuantityOpenGreaterThanBatchQuantityOpen (const Real demandsquantityopen, const Real batchquantityopen)
  {
    DefaultText: 'The selected demands have a total open quantity of @demandsquantityopen@ but the open quantity of the batch is only @batchquantityopen@. Please reduce the selection of demands in order to specify which demand(s) should be assigned to the batch.'
  }
  InfoMessage SC_DemandBatch_DoesNotHaveAlternativeBatchType
  {
    DefaultText: 'Demand batch does not have alternative batch type.'
  }
  InfoMessage SC_DemandBatch_ExceedMaxSize (const Real batchsize, const Real maxbatchsize)
  {
    DefaultText: 'Total demand batch quantity (@batchsize@) exceeds the maximum batch capacity (@maxbatchsize@).'
  }
  InfoMessage SC_DemandBatch_InFrozenHorizon
  {
    DefaultText: 'Demand batch is in frozen period.'
  }
  InfoMessage SC_DemandBatch_InvalidBatchType
  {
    DefaultText: 'Invalid demand batch type.'
  }
  InfoMessage SC_DemandBatch_OperationsNotAllowedOnAnyResources (const DemandBatch demandbatch)
  {
    DefaultText: 'One or more operations of demand batch @demandbatch.BatchID()@ are not allowed on any resources.'
  }
  InfoMessage SC_DemandInBatchOverAssign (const String demandid, const Real assignedquantity, const Real openquantity)
  {
    DefaultText: 'Assigned quantity for demand @demandid@ to the batch is @assignedquantity@, but the open quantity for the demand is only @openquantity@'
  }
  InfoMessage SC_DemandInBatch_CannotBeRemoveFromBatch (const String batchid)
  {
    DefaultText: 'Demand batch @batchid@ has started.'
  }
  InfoMessage SC_DemandInBatch_NoNextDemandInBatch
  {
    DefaultText: 'Demand is already the last in batch.'
  }
  InfoMessage SC_DemandInBatch_NoPreviousDemandInBatch
  {
    DefaultText: 'Demand is already the first in batch.'
  }
  InfoMessage SC_DemandInBatch_QuantityGreaterThanZero
  {
    DefaultText: 'Quantity has to be higher than zero.'
  }
  InfoMessage SC_DemandNotAllowedOnBatch
  {
    DefaultText: 'Demands are not allowed to add to batch because:'
  }
  InfoMessage SC_Demand_CanFulfill_IsActive (const String d)
  {
    DefaultText: 'This demand @d@ is not active.'
  }
  InfoMessage SC_Demand_DemandInBatchScheduled
  {
    DefaultText: 'Some demands are already in a batch and scheduled.'
  }
  InfoMessage SC_Demand_DoesNotHaveAllowedDemandBatchType
  {
    DefaultText: 'Demands does not have allowed batch type.'
  }
  InfoMessage SC_Demand_DoesNotHaveCommonAllowedDemandBatchType
  {
    DefaultText: 'Demands does not have common allowed demand batch type.'
  }
  InfoMessage SC_Demand_FulfilledDemandCannotBeBatch
  {
    DefaultText: 'Selected demand(s) has been fully batched / fulfilled.'
  }
  InfoMessage SC_Demand_HasBeenReservedByCompletedOperation (const String operationid)
  {
    DefaultText: 'This demand is inactive, it has been reserved by completed operation @operationid@.'
  }
  InfoMessage SC_Demand_HasDifferentStockingPoint
  {
    DefaultText: 'Demands has different stocking point.'
  }
  InfoMessage SC_Demand_HasDifferentStockingPointWithDemandBatch
  {
    DefaultText: 'Demands has different stocking point with demand batch.'
  }
  InfoMessage SC_Demand_NotAllowedOnBatchType (const String batchtype)
  {
    DefaultText: 'Demands are not allowed in @batchtype@ batch type.'
  }
  InfoMessage SC_Demand_NotPlannedInBatch
  {
    DefaultText: 'Demands are not planned in batch.'
  }
  InfoMessage SC_DemoNameExistsUsingOverwrite
  {
    DefaultText: 'There is already an existing dataset with the same name.'
  }
  InfoMessage SC_DemoNameRequired
  {
    DefaultText: 'Demo name can not be empty.'
  }
  InfoMessage SC_DesignerListFeedbackBatch_SelectedBatchIsEmpty
  {
    DefaultText: 'The selected batch is empty.'
  }
  InfoMessage SC_Designer_ListFeedbackBatch_BatchIsNotEnded
  {
    DefaultText: 'Batch is not ended.'
  }
  InfoMessage SC_Designer_ListFeedbackBatch_BatchIsNotStartOrEnded
  {
    DefaultText: 'Batch is not started or has ended.'
  }
  InfoMessage SC_Designer_SaveCurrentChange
  {
    DefaultText: 'Please save current changes'
  }
  InfoMessage SC_Designer_ShopFloorEntryButtonStart_FeedbackOnlyAvailableForBatch
  {
    DefaultText: 'Feedback is only available for Feedback Batch.'
  }
  InfoMessage SC_Designer_ShopFloorEntryButtonStart_NoBatchContentWithoutFeedback
  {
    DefaultText: 'There is no batch content without feedback in selected batch'
  }
  InfoMessage SC_Designer_StockChartProductTitle (const String product, const String stockingpoint)
  {
    DefaultText: 'Inventory chart for @product@ in @stockingpoint@'
  }
  InfoMessage SC_Designer_RowAlreadyHiden
  {
    DefaultText: 'This information is already hiden in the gantt chart.'
  }
  InfoMessage SC_Designer_RowAlreadyShown
  {
    DefaultText: 'This information is already shown in the gantt chart.'
  }
  InfoMessage SC_DialogBatchDetailsShowBatch (const Batch batch)
  {
    DefaultText: '@batch.BatchID()@ - Selected Practice: @batch.Practice().UsedPractice()@'
  }
  InfoMessage SC_DialogEditToolRequirementBase
  {
    DefaultText: 'Edit tool requirement'
  }
  InfoMessage SC_DialogFindBetterPosition (const SingleTaskBase singletaskbase)
  {
    DefaultText: 'Find Better Position for Task @singletaskbase.TaskID()@ on @singletaskbase.Resource_SC().Name()@ Plan Unit: @singletaskbase.OperationAsSingleTask().PlanUnit_SC().PlanUnitID()@'
  }
  InfoMessage SC_DialogFindOperationForSequence (const SingleTaskBase singletaskbase)
  {
    DefaultText: 'Find Operation for Sequence of Task @singletaskbase.SequenceNr()@ on @singletaskbase.Resource_SC().Name()@ Plan Unit: @singletaskbase.OperationAsSingleTask().PlanUnit_SC().PlanUnitID()@'
  }
  InfoMessage SC_DialogOptimizerUserSetting_EditTitle
  {
    DefaultText: 'Edit Optimizer User Setting'
  }
  InfoMessage SC_DialogOptimizerUserSetting_NewTitle
  {
    DefaultText: 'New Optimizer User Setting'
  }
  InfoMessage SC_DialogResourceGroups_OperationType_Precondition
  {
    DefaultText: 'Operation type must not be empty.'
  }
  InfoMessage SC_DialogResource_Continuous_LengthGreaterThanGapLength_Precondition
  {
    DefaultText: 'Resource length must be greater than minimum gap length'
  }
  InfoMessage SC_DialogResource_Continuous_LoadWidthGreaterThanLoadGap_Precondition
  {
    DefaultText: 'Maximum parallel load width must be greater than minimum parallel load gap'
  }
  InfoMessage SC_DialogResource_Continuous_PositiveGapLength_Precondition
  {
    DefaultText: 'Minimum gap length must be greater than 0'
  }
  InfoMessage SC_DialogResource_Continuous_PositiveLoadGap_Precondition
  {
    DefaultText: 'Minimum parallel load gap must be greater than 0'
  }
  InfoMessage SC_DialogResource_Continuous_Speed_Precondition
  {
    DefaultText: 'Resource speed must be greater than 0'
  }
  InfoMessage SC_DialogResource_EditTitle
  {
    DefaultText: 'Edit Resource'
  }
  InfoMessage SC_DialogResource_Name_Precondition
  {
    DefaultText: 'Resource name must not be empty.'
  }
  InfoMessage SC_DialogResource_NewTitle
  {
    DefaultText: 'New Resource'
  }
  InfoMessage SC_DialogResource_NoSelectedResourceGroup
  {
    DefaultText: 'Resource group must not be empty.'
  }
  InfoMessage SC_DialogResource_PositiveMaxBatchSize_Precondition
  {
    DefaultText: 'Batch size must > 0'
  }
  InfoMessage SC_DialogResourceGroups_EditResourceGroup_Title
  {
    DefaultText: 'Edit Resource Group'
  }
  InfoMessage SC_DialogResourceGroups_NewResourceGroup_Title
  {
    DefaultText: 'New Resource Group'
  }
  InfoMessage SC_DemandFullyFulfilled (const Demand demand)
  {
    DefaultText: 'Demand @demand.DemandID()@ has already been fully fulfilled.'
  }
  InfoMessage SC_Designer_FormMaterialReservation_Filtering_AvailableDemands_NotAllowed
  {
    DefaultText: 'Filter by supply is already activated. Please deactivate the filter to filter by demand.'
  }
  InfoMessage SC_Designer_FormMaterialReservation_Filtering_AvailableSupplies_NotAllowed
  {
    DefaultText: 'Filter by demand is already activated. Please deactivate the filter to filter by supply.'
  }
  InfoMessage SC_ExportMPS_Error_FilePathNotFound
  {
    DefaultText: 'A file path cannot be found. Please specify all file paths with the correct model name in the Integration Parameters KT.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_ExecutedInDifferentSequence (const String precedingbatch)
  {
    DefaultText: 'Schedule executed in different sequence: @precedingbatch@ was expected to be started before this batch.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_HadEarlierEndReport (const String batch)
  {
    DefaultText: 'BatchEnd feedback has already been reported earlier for batch @batch@.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_HadEarlierStartReport (const String batch)
  {
    DefaultText: 'Inconsistent execution feedback: BatchStart feedback received for batch @batch@, for which BatchStart feedback was reported earlier.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_HadInconsistentFeedback (const String batch, const DateTime start, const DateTime earlier_end)
  {
    DefaultText: 'Inconsistent execution feedback: BatchStart feedback received for batch @batch@, where @start@ is later than @earlier_end@.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_HasSuccessorBeforeReportEnd (const String front, const String batchid)
  {
    DefaultText: 'Missing TaskEnd feedback: Batch @front@ is expected to end before this batch @batchid@ starts.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_NotScheduled (const String batch, const String op, const String r)
  {
    DefaultText: 'Batch @batch@ has contents @op@ that were not scheduled on resource @r@.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_ReportedOnDifferentResource (const String operation)
  {
    DefaultText: 'This batch has contents @operation@ that were scheduled on a different resource.'
  }
  InfoMessage SC_FeedbackCalendar_ValidInput_Capacity
  {
    DefaultText: 'The capacity should be a posititve numeric value.'
  }
  InfoMessage SC_FeedbackCalendar_ValidInput_StartEnd
  {
    DefaultText: 'The start of the interval should be before the end of the interval.'
  }
  InfoMessage SC_FeedbackMaterial_HasDemandFulfilledDifferentWithPlanned
  {
    DefaultText: 'Actual demand is fulfilled with product that is different than planned'
  }
  InfoMessage SC_FeedbackMaterial_HasDemandFulfilledOutOfRange
  {
    DefaultText: 'Actual demand is fulfilled with quantity that is out of acceptable range.'
  }
  InfoMessage SC_FeedbackMaterial_HasSupplyConsumedDifferentWithPlanned
  {
    DefaultText: 'Actual supply consumes product that is different than planned'
  }
  InfoMessage SC_FeedbackMaterial_HasSupplyConsumedOutOfRange
  {
    DefaultText: 'Actual supply consumes quantity that is out of acceptable range.'
  }
  InfoMessage SC_FeedbackMaterial_TaskHasStarted (const String t)
  {
    DefaultText: 'Cannot create material feedback due to the task @t@ has not started.'
  }
  InfoMessage SC_FeedbackMaterial_ValidMaterial
  {
    DefaultText: 'The reported material is not selected.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_ExecutedInDifferentSequence (const String precedingtask)
  {
    DefaultText: 'Schedule executed in different sequence: @precedingtask@ was expected to be started before this task.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_HasSuccessorBeforeReportEnd (const String frontid, const String taskid)
  {
    DefaultText: 'Missing TaskEnd feedback: Task @frontid@ is expected to end before this task @taskid@ starts.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_NotScheduled (const String ft, const String r)
  {
    DefaultText: 'Task @ft@ was not scheduled on resource @r@.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_ReportedOnDifferResource
  {
    DefaultText: 'This task was scheduled on a different resource.'
  }
  InfoMessage SC_Fulfillment_CtrlShiftForProductOnly
  {
    DefaultText: 'The Ctrl+Shift keys can only be used for Product based demand and supply.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_HasAbortedReport (const String b, const String r, const String remark)
  {
    DefaultText: 'Batch aborted: batch @b@, on resource @r@ has been aborted with remark @remark@.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_HasCancelledReport (const String b, const String r, const String remark)
  {
    DefaultText: 'Batch cancelled: batch @b@, on resource @r@ has been cancelled with remark @remark@.'
  }
  InfoMessage SC_FeedbackBatchInSchedule_HasEndReportWithOutStartReport
  {
    DefaultText: 'TaskEnd feedback has been reported without earlier TaskStart.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_HadEarlierEndReport (const String t)
  {
    DefaultText: 'TaskEnd feedback has already been reported earlier for task @t@.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_HadEarlierStartReport (const String t)
  {
    DefaultText: 'Inconsistent execution feedback: TaskStart feedback received for task @t@, for which TaskStart feedback was reported earlier.'
  }
  InfoMessage SC_FeedbackTaskInSchedule_HadInconsistentFeedback (const String task, const DateTime start, const DateTime earlier_end)
  {
    DefaultText: 'Inconsistent execution feedback: TaskStart feedback received for task @task@, where @start@ is later than @earlier_end@.'
  }
  InfoMessage SC_Fulfillment_CtrlShiftForSingleDemandSupplyOnly
  {
    DefaultText: 'You can adjust reservation quantity manually only when you are dragging one demand or supply.'
  }
  InfoMessage SC_Fulfillment_DiscreteMaterialIntegerQuantity
  {
    DefaultText: 'This is a reservation of discrete materials, and the reservation quantity should be a whole number.'
  }
  InfoMessage SC_Fulfillment_DiscreteProductIntegerQuantity
  {
    DefaultText: 'This is a reservation of a discrete product, and the reservation quantity should be a whole number.'
  }
  InfoMessage SC_Fulfillment_EditQuantityProductPlannedFulfillment
  {
    DefaultText: 'You can only edit the quantity of a user made product based reservation.'
  }
  InfoMessage SC_Fulfillment_EditQuantitySingleFulfillment
  {
    DefaultText: 'You can only edit the quantity of one reservation at a time. Please select only one reservation.'
  }
  InfoMessage SC_Fulfillment_HasWIPDemandFullyFulfilledByUpstream (const String wipdemands)
  {
    DefaultText: 'Cannot unreserve material because the wip demand @wipdemands@ has been fully fulfilled by upstream.'
  }
  InfoMessage SC_Fulfillment_InfiniteQuantity
  {
    DefaultText: 'Please key in a value between 0 and 1000000000.'
  }
  InfoMessage SC_Fulfillment_NoFulfillmentToDelete
  {
    DefaultText: 'No material reservation made, there is nothing to unreserve.'
  }
  InfoMessage SC_Fulfillment_NoResourceConnection (const String supplyid, const String supplyoperationid, const String demandid, 
    const String demandoperationid)
  {
    DefaultText: 'Supply (@supplyid@) has operation (@supplyoperationid@) with no allowed resource connection to operation (@demandoperationid@) of demand (@demandid@).'
  }
  InfoMessage SC_Fulfillment_ZeroQuantity
  {
    DefaultText: 'Reservation quantity has to be higher than zero.'
  }
  InfoMessage SC_HoldCtrlToOverrideForFeedbackObject
  {
    DefaultText: 'Hold ctrl to override'
  }
  InfoMessage SC_ImportCompleted (const String time)
  {
    DefaultText: 'Import completed on @time@'
  }
  InfoMessage SC_ImportERPWarning
  {
    DefaultText: 'Are you sure you want to import ERP data? Doing so will lose your created resources and/or resource groups.'
  }
  InfoMessage SC_ImportStarted (const String time)
  {
    DefaultText: 'Import started on @time@'
  }
  InfoMessage SC_ImportedAprisoOperation_Instance (const String name)
  {
    DefaultText: 'Imported apriso operation [@name@]'
  }
  InfoMessage SC_ImportedAprisoOperation_ViolateHasValidMachineNo
  {
    DefaultText: 'Imported apriso operation must be linked to a resource that exists.'
  }
  InfoMessage SC_ImportedAprisoOperation_ViolateHasValidOperation
  {
    DefaultText: 'Imported apriso operation must be linked to an operation that exists.'
  }
  InfoMessage SC_ImportedCampaignInCampaignType_Instance (const String campaign, const String campaigntype, const String resourcegroup)
  {
    DefaultText: 'Imported campaign in campaign type [@campaign@, @campaigntype@, @resourcegroup@]'
  }
  InfoMessage SC_ImportedCampaignInCampaignType_ViolateHasValidColorHexCode (const String code)
  {
    DefaultText: 'Imported campaign\'s color ("@code@") is not in hexadecimal color format (e.g. "#FFFF00" ).'
  }
  InfoMessage SC_ImportedCampaignType_Instance (const String name, const String resourcegroup, const Number displayindex)
  {
    DefaultText: 'Imported campaign type [@name@, @resourcegroup@, @displayindex@ ]'
  }
  InfoMessage SC_ImportedCampaignType_ViolateHasUniqueDisplayIndex
  {
    DefaultText: 'Imported campaign type has a duplicate display index.'
  }
  InfoMessage SC_ImportedCampaignType_ViolateHasUniqueName
  {
    DefaultText: 'Imported campaign type must have a unique name.'
  }
  InfoMessage SC_ImportedCampaignType_ViolateHasValidColorHexCode (const String code)
  {
    DefaultText: 'Imported campaign type\'s default color ("@code@") is not in hexadecimal color format (e.g. "#FFFF00" ).'
  }
  InfoMessage SC_ImportedExternalSupply_ViolateHasStockingPoint
  {
    DefaultText: 'Imported external supply must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedFeedbackTask_ViolateIsPlannedOnValidResource (const String resourceid)
  {
    DefaultText: 'Imported feedback task have received feedback with invalid resource [@resourceid@].'
  }
  InfoMessage SC_ImportedRoutingStepCampaign_Instance (const String name)
  {
    DefaultText: 'Imported routing step campaign [@name@]'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasResourceGroup
  {
    DefaultText: 'Imported routing step has a resource group that is not configured in the system.'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasValidInputLotSize
  {
    DefaultText: 'Imported routing step must have an input lot size greater or equal to zero.'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasValidOutputLotSize
  {
    DefaultText: 'Imported routing step must have an output lot size greater or equal to zero.'
  }
  InfoMessage SC_ImportedWorkOrderColorRange_Instance (const Number index)
  {
    DefaultText: 'Imported work order color @index@'
  }
  InfoMessage SC_ImportedWorkOrderColorRange_ViolateHasValidColorHexCode (const String color)
  {
    DefaultText: 'Imported work order ("@color@") is not in hexadecimal color format (e.g. "#FFFF00" ).'
  }
  InfoMessage SC_ImportedCustomerOrderLine_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported customer order line has a product id and must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedCustomerOrderLine_ViolateHasValidQuantity
  {
    DefaultText: 'Imported customer order line must have a quantity of greater than zero.'
  }
  InfoMessage SC_ImportedDependentDemand_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported dependent demand has a product id and must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedDependentDemand_ViolateHasValidQuantity
  {
    DefaultText: 'Imported dependent demand must have a quantity of greater than zero.'
  }
  InfoMessage SC_ImportedFeedbackCalendar_Instance (const String name)
  {
    DefaultText: 'Imported feedback calenar [@name@]'
  }
  InfoMessage SC_ImportedFeedbackTask_ViolateHasValidStatus (const String status)
  {
    DefaultText: 'Imported feedback task have received feedback with unknown status [@status@].'
  }
  InfoMessage SC_ImportedLinkStock2COL_Instance (const String name)
  {
    DefaultText: 'Imported link stock material to customer order line [@name@]'
  }
  InfoMessage SC_ImportedLinkStock2COL_ViolateHasCustomerOrderLine
  {
    DefaultText: 'Imported link stock material to customer order line must be linked to an imported customer order line.'
  }
  InfoMessage SC_ImportedLinkStock2COL_ViolateHasMaterial
  {
    DefaultText: 'Imported link stock material to customer order line must be linked to an imported material.'
  }
  InfoMessage SC_ImportedLinkStock2DD_Instance (const String name)
  {
    DefaultText: 'Imported link stock material to dependent demand [@name@]'
  }
  InfoMessage SC_ImportedLinkStock2DD_ViolateHasDependentDemand
  {
    DefaultText: 'Imported link stock material to dependent demand must be linked to an imported dependent demand.'
  }
  InfoMessage SC_ImportedLinkStock2DD_ViolateHasMaterial
  {
    DefaultText: 'Imported link stock material to dependent demand must be linked to an imported material.'
  }
  InfoMessage SC_ImportedFulfillment_ViolateHasValidQuantity
  {
    DefaultText: 'Imported fulfillment must have a quantity of greater than zero.'
  }
  InfoMessage SC_ImportedLink_ViolateHasValidReservationQuantity
  {
    DefaultText: "Imported link must have a quantity that is equal or lesser than the demand's or supply's quantities."
  }
  InfoMessage SC_ImportedOperationCampaign_Instance (const String workorderid, const Number seqnr, const String campaigntype, 
    const String campaign)
  {
    DefaultText: 'Imported operation campaign [@workorderid@, @seqnr@] of [@campaigntype@, @campaign@]'
  }
  InfoMessage SC_ImportedOperationCampaign_ViolateHasValidCampaignType
  {
    DefaultText: 'Imported operation campaign must be linked to a valid campaign type.'
  }
  InfoMessage SC_ImportedReservationExt2COL_Instance (const String name)
  {
    DefaultText: 'Imported reservation external supply to customer order line [@name@]'
  }
  InfoMessage SC_ImportedReservationExt2COL_ViolateHasCustomerOrderLine
  {
    DefaultText: 'Imported reservation external supply to customer order line must be linked to an imported customer order line.'
  }
  InfoMessage SC_ImportedReservationExt2COL_ViolateHasExternalSupply
  {
    DefaultText: 'Imported reservation external supply to customer order line must be linked to an imported external supply.'
  }
  InfoMessage SC_ImportedReservationExt2DD_Instance (const String name)
  {
    DefaultText: 'Imported reservation external supply to dependent demand [@name@]'
  }
  InfoMessage SC_ImportedReservationExt2DD_ViolateHasDependentDemand
  {
    DefaultText: 'Imported reservation external supply to dependent demand must be linked to an imported dependent demand.'
  }
  InfoMessage SC_ImportedReservationExt2DD_ViolateHasExternalSupply
  {
    DefaultText: 'Imported reservation external supply to dependent demand must be linked to an imported external supply.'
  }
  InfoMessage SC_ImportedReservationWO2WO_ViolateSupplyDemandOperationSequence
  {
    DefaultText: 'Imported reservation work order supply and work order demand from the same work order cannot reserve supply from a downstream operation to a demand from an upstream operation.'
  }
  InfoMessage SC_ImportedReservation_ViolateHasValidReservationQuantity
  {
    DefaultText: "Imported reservation must have a quantity that is equal or lesser than the demand's or supply's quantities."
  }
  InfoMessage SC_ImportedRoutingStepCampaign_ViolateHasValidCampaignType
  {
    DefaultText: 'Imported routing step has a campaign type that is not configured in the system.'
  }
  InfoMessage SC_ImportedRoutingStepCampaign_ViolateHasValidRoutingStep
  {
    DefaultText: 'points to a routing step that does not exist.'
  }
  InfoMessage SC_ImportedRoutingStepInput_ViolateHasStockingPoint
  {
    DefaultText: 'Imported routing step input must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedRoutingStepInput_ViolateHasValidInputFactor
  {
    DefaultText: 'Imported routing step input must have a input factor of greater than zero.'
  }
  InfoMessage SC_ImportedRoutingStepOutput_ViolateHasStockingPoint
  {
    DefaultText: 'Imported routing step output must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedRoutingStepOutput_ViolateHasValidOutputFactor
  {
    DefaultText: 'Imported routing step output must have a output factor of greater than zero.'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasAllowedPreferredResource
  {
    DefaultText: 'Imported routing step has a preferred resource with different operation type than the type of the routing step.'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasValidYield
  {
    DefaultText: 'Imported routing step must have a yield of greater than zero.'
  }
  InfoMessage SC_ImportedResource_Instance (const String name)
  {
    DefaultText: 'Imported resource [@name@]'
  }
  InfoMessage SC_ImportedRouting_Instance (const String name)
  {
    DefaultText: 'Imported routing [@name@]'
  }
  InfoMessage SC_ImportedRouting_ViolateHasValidLotSizeGreaterEqualZero
  {
    DefaultText: 'Imported routing must have a lot size of greater or equal to zero.'
  }
  InfoMessage SC_ImportedRouting_ViolateHasValidLotSizeLesserEqualMaxSize
  {
    DefaultText: 'Imported routing must have a lot size lesser or equal to its max size.'
  }
  InfoMessage SC_ImportedRouting_ViolateHasValidMaxSizeGreaterEqualZero
  {
    DefaultText: 'Imported routing must have a max size of greater or equal to zero.'
  }
  InfoMessage SC_ImportedRouting_ViolateHasValidMaxSizeGreaterEqualMinSize
  {
    DefaultText: 'Imported routing must have a max size greater or equal to its min size.'
  }
  InfoMessage SC_ImportedRouting_ViolateHasValidMinSizeGreaterEqualZero
  {
    DefaultText: 'Imported routing must have a min size of greater or equal to zero.'
  }
  InfoMessage SC_ImportedSupply_ViolateHasValidQuantity
  {
    DefaultText: 'Imported supply must have a quantity of greater than zero.'
  }
  InfoMessage SC_ImportedWorkOrderDemand_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported work order demand must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedWorkOrderDemand_ViolateHasValidQuantity
  {
    DefaultText: 'Imported work order demand must have a quantity of greater than zero.'
  }
  InfoMessage SC_ImportedWorkOrderInputMaterial_ViolateHasStockingPoint
  {
    DefaultText: 'Imported work order input material must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedWorkOrderOperation_ViolateHasValidInputLotSize
  {
    DefaultText: 'Imported work order operation must have an input lot size greater or equal to zero.'
  }
  InfoMessage SC_ImportedWorkOrderOperation_ViolateHasValidOutputLotSize
  {
    DefaultText: 'Imported work order operation must have an output lot size greater or equal to zero.'
  }
  InfoMessage SC_ImportedWorkOrderOutputMaterial_ViolateHasStockingPoint
  {
    DefaultText: 'Imported work order output material must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedWorkOrderSupply_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported work order supply must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedWorkOrderSupply_ViolateHasValidQuantity
  {
    DefaultText: 'Imported work order supply must have a quantity of greater than zero.'
  }
  InfoMessage SC_InvalidOperationBatchType (const Boolean operationIsBatch, const Boolean resourceIsBatch)
  {
    DefaultText: "@ifexpr( operationIsBatch, 'Batch', 'Single' )@ operation cannot be scheduled on @ifexpr( resourceIsBatch, 'batch', 'single' )@ resource."
  }
  InfoMessage SC_KPIProductsCurrentStockLevelHigh
  {
    DefaultText: 'Current stock level high'
  }
  InfoMessage SC_KPIProductsCurrentStockLevelLow
  {
    DefaultText: 'Current stock level low'
  }
  InfoMessage SC_KPIProductsCurrentStockLevelOK
  {
    DefaultText: 'Current stock level ok'
  }
  InfoMessage SC_KPIProductsScheduledStockLevelHigh
  {
    DefaultText: 'Sched. stock level high'
  }
  InfoMessage SC_KPIProductsScheduledStockLevelLow
  {
    DefaultText: 'Sched. stock level low'
  }
  InfoMessage SC_KPIProductsScheduledStockLevelOK
  {
    DefaultText: 'Sched. stock level ok'
  }
  InfoMessage SC_LeadTimeStrategy_CannotDeleteLastStrategy_Precondition
  {
    DefaultText: 'Resources must have at least one strategy.'
  }
  InfoMessage SC_LoadEmptyDatasetFirst (String demodataset)
  {
    DefaultText: 'Please load the empty demo dataset first before loading demo dataset @demodataset@.'
  }
  InfoMessage SC_MaterialDemand_CheckIsWithinAllowedQuantity (const MaterialDemand demand, const Real quantity)
  {
    DefaultText: 'The supply quantity (@quantity@) should be at least @demand.MinQuantityPerReservation()@'
  }
  InfoMessage SC_MaterialDemand_MaxQuantity (const MaterialDemand demand)
  {
    DefaultText: ' and smaller than or equal to @demand.MaxQuantityPerReservation()@.'
  }
  InfoMessage SC_MaterialNotSameDiscreteness (const Boolean supplydiscrete, const Boolean demanddiscrete)
  {
    DefaultText: 'The discrete value of supply (@supplydiscrete@) and demand (@demanddiscrete@) must be the same.'
  }
  InfoMessage SC_MaterialNotSameStockingPoint
  {
    DefaultText: 'The selected supplies and demands do not have the same stocking point.'
  }
  InfoMessage SC_MaterialNotSameUoM (const String supplyuom, const String demanduom)
  {
    DefaultText: 'The unit of measurement of supply (@supplyuom@) and demand (@demanduom@) must be the same.'
  }
  InfoMessage SC_MaterialReservationNotSameCategory_MaterialSupplyProductDemand
  {
    DefaultText: 'Supply with specific characteristics cannot be used to supply a demand for a standard product.'
  }
  InfoMessage SC_MaterialReservationNotSameCategory_ProductSupplyMaterialDemand
  {
    DefaultText: 'Supply of standard products cannot be used to supply a demand with specific characteristics.'
  }
  InfoMessage SC_MaterialSupplyLaterThanDemand
  {
    DefaultText: 'The demand for a planned production cannot be reserved with a planned supply that is only available later.'
  }
  InfoMessage SC_NoWithShortcutKey
  {
    DefaultText: '&No'
  }
  InfoMessage SC_NoMaterialReservationNeeded_Operations
  {
    DefaultText: 'The selected operations do not require any material reservation.'
  }
  InfoMessage SC_NoMaterialReservationNeeded_Tasks
  {
    DefaultText: 'The selected tasks do not have operations that require any material reservation.'
  }
  InfoMessage SC_NoRemovableFulfillment
  {
    DefaultText: 'You cannot unreserve imported, fixed reservations.'
  }
  InfoMessage SC_ExportCompleted (String time)
  {
    DefaultText: 'Export completed on @time@'
  }
  InfoMessage SC_ExportFailed (String time)
  {
    DefaultText: 'Export failed on @time@'
  }
  InfoMessage SC_ExportStarted (String time)
  {
    DefaultText: 'Export started on @time@'
  }
  InfoMessage SC_FeedbackBatchInSF_BatchHasStarted (ImportedFeedbackBatch importedfeedbackbatch)
  {
    DefaultText: 'The batch operation has started at @importedfeedbackbatch.Start()@'
  }
  InfoMessage SC_Fulfillment_Empty
  {
    DefaultText: 'Quantity input cannot be empty.'
  }
  InfoMessage SC_Fulfillment_InvalidQuantity (const Real openquantity)
  {
    DefaultText: 'Quantity is more than open quantity of (@openquantity@)'
  }
  InfoMessage SC_Fulfillment_NotAllowedDeleteExternal
  {
    DefaultText: 'Not allowed to delete external fulfillment.'
  }
  InfoMessage SC_HintToMergeBatch
  {
    DefaultText: 'Using [Ctrl+Shift] key you can merge two batches, but you need to drop on a batch.'
  }
  InfoMessage SC_HoldCtrlShiftToCreateNewBatch
  {
    DefaultText: '( Hold [Ctrl+Shift] key to create new batch. )'
  }
  InfoMessage SC_HoldCtrlShiftToMergeIntoBatch
  {
    DefaultText: '( Hold [Ctrl+Shift] key to merge into batch. )'
  }
  InfoMessage SC_HoldCtrlShiftToPlanBatch (String batchid)
  {
    DefaultText: '( Hold [Ctrl+Shift] key to plan @batchid@ at the end of this resource )'
  }
  InfoMessage SC_HoldCtrlShiftToPlanCampaignTask (String campaigntaskid)
  {
    DefaultText: '( Hold [Ctrl+Shift] key to plan @campaigntaskid@ at the end of this resource )'
  }
  InfoMessage SC_HoldCtrlShiftToPlanOperation (String operationid)
  {
    DefaultText: '( Hold [Ctrl+Shift] key to plan @operationid@ at the last of the resource. )'
  }
  InfoMessage SC_HoldCtrlShiftToPlanTask (String taskid)
  {
    DefaultText: '( Hold [Ctrl+Shift] key to plan @taskid@ at the end of the resource )'
  }
  InfoMessage SC_HoldCtrlToOverride
  {
    DefaultText: '( Hold [Ctrl] key to override. )'
  }
  InfoMessage SC_ImportedCustomerOrderLine_Instance (const String name)
  {
    DefaultText: 'Imported customer order line [@name@]'
  }
  InfoMessage SC_ImportedCustomerOrderLine_ViolateHasStockingPoint
  {
    DefaultText: 'Imported customer order line must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedDependentDemand_Instance (const String name)
  {
    DefaultText: 'Imported dependent demand [@name@]'
  }
  InfoMessage SC_ImportedDependentDemand_ViolateHasStockingPoint
  {
    DefaultText: 'Imported dependent demand must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedExternalSupply_Instance (const String name)
  {
    DefaultText: 'Imported external supply [@name@]'
  }
  InfoMessage SC_ImportedExternalSupply_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported external supply must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedLinkStock2WO_Instance (const String name)
  {
    DefaultText: 'Imported link stock material to work order input material [@name@]'
  }
  InfoMessage SC_ImportedLinkStock2WO_ViolateHasMaterial
  {
    DefaultText: 'Imported link stock material to work order input material must be linked to an imported material.'
  }
  InfoMessage SC_ImportedLinkStock2WO_ViolateHasWorkOrderInputMaterial
  {
    DefaultText: 'Imported link stock material to work order input material must be linked to an imported work order input material.'
  }
  InfoMessage SC_ImportedLinkWO2COL_Instance (const String name)
  {
    DefaultText: 'Imported link work order output material to customer order line [@name@]'
  }
  InfoMessage SC_ImportedLinkWO2COL_ViolateHasCustomerOrderLine
  {
    DefaultText: 'Imported link work order output material to customer order line must be linked to an imported customer order line.'
  }
  InfoMessage SC_ImportedLinkWO2COL_ViolateHasWorkOrderOutputMaterial
  {
    DefaultText: 'Imported link work order output material to customer order line must be linked to an imported work order output material.'
  }
  InfoMessage SC_ImportedLinkWO2DD_Instance (const String name)
  {
    DefaultText: 'Imported link work order output material to dependent demand [@name@]'
  }
  InfoMessage SC_ImportedLinkWO2DD_ViolateHasDependentDemand
  {
    DefaultText: 'Imported link work order output material to dependent demand must be linked to an imported dependent demand.'
  }
  InfoMessage SC_ImportedLinkWO2DD_ViolateHasWorkOrderOutputMaterial
  {
    DefaultText: 'Imported link work order output material to dependent demand must be linked to an imported work order output material.'
  }
  InfoMessage SC_ImportedMaterial_Instance (const String name)
  {
    DefaultText: 'Imported material [@name@]'
  }
  InfoMessage SC_ImportedMaterial_ViolateHasStockingPoint
  {
    DefaultText: 'Imported material must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedProductInStockingPoint_Instance (const String name)
  {
    DefaultText: 'Imported product in stocking point [@name@]'
  }
  InfoMessage SC_ImportedProductInStockingPoint_ViolateHasProduct
  {
    DefaultText: 'Imported product in stocking point must be linked to an imported product.'
  }
  InfoMessage SC_ImportedProductInStockingPoint_ViolateHasStockingPoint
  {
    DefaultText: 'Imported product in stocking point must be linked to an imported stocking point.'
  }
  InfoMessage SC_ImportedReservationExt2WO_Instance (const String name)
  {
    DefaultText: 'Imported reservation external supply to work order demand [@name@]'
  }
  InfoMessage SC_ImportedReservationExt2WO_ViolateHasExternalSupply
  {
    DefaultText: 'Imported reservation external supply to work order demand must be linked to an imported external supply.'
  }
  InfoMessage SC_ImportedReservationExt2WO_ViolateHasWorkOrderDemand
  {
    DefaultText: 'Imported reservation external supply to work order demand must be linked to an imported work order demand.'
  }
  InfoMessage SC_ImportedReservationWO2COL_Instance (const String name)
  {
    DefaultText: 'Imported reservation work order supply to customer order line [@name@]'
  }
  InfoMessage SC_ImportedReservationWO2COL_ViolateHasCustomerOrderLine
  {
    DefaultText: 'Imported reservation work order supply to customer order line must be linked to an imported customer order line.'
  }
  InfoMessage SC_ImportedReservationWO2COL_ViolateHasWorkOrderSupply
  {
    DefaultText: 'Imported reservation work order supply to customer order line must be linked to an imported work order supply.'
  }
  InfoMessage SC_ImportedReservationWO2DD_Instance (const String name)
  {
    DefaultText: 'Imported reservation work order supply to dependent demand [@name@]'
  }
  InfoMessage SC_ImportedReservationWO2DD_ViolateHasDependentDemand
  {
    DefaultText: 'Imported reservation work order supply to dependent demand must be linked to an imported dependent demand.'
  }
  InfoMessage SC_ImportedReservationWO2DD_ViolateHasWorkOrderSupply
  {
    DefaultText: 'Imported reservation work order supply to dependent demand must be linked to an imported work order supply.'
  }
  InfoMessage SC_ImportedReservationWO2WO_Instance (const String name)
  {
    DefaultText: 'Imported reservation work order supply to work order demand [@name@]'
  }
  InfoMessage SC_ImportedReservationWO2WO_ViolateHasWorkOrderDemand
  {
    DefaultText: 'Imported reservation work order supply to work order demand must be linked to an imported work order demand.'
  }
  InfoMessage SC_ImportedReservationWO2WO_ViolateHasWorkOrderSupply
  {
    DefaultText: 'Imported reservation work order supply to work order demand must be linked to an imported work order supply.'
  }
  InfoMessage SC_ImportedRoutingStepInput_Instance (const String name)
  {
    DefaultText: 'Imported routing step input [@name@]'
  }
  InfoMessage SC_ImportedRoutingStepInput_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported routing step input must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedRoutingStepInput_ViolateHasRoutingStep
  {
    DefaultText: 'Imported routing step input must be linked to an imported routing step.'
  }
  InfoMessage SC_ImportedRoutingStepOutput_Instance (const String name)
  {
    DefaultText: 'Imported routing step output [@name@]'
  }
  InfoMessage SC_ImportedRoutingStepOutput_ViolateHasProductInStockingPoint
  {
    DefaultText: 'Imported routing step output must be linked to an imported product in stocking point.'
  }
  InfoMessage SC_ImportedRoutingStepOutput_ViolateHasRoutingStep
  {
    DefaultText: 'Imported routing step output must be linked to an imported routing step.'
  }
  InfoMessage SC_ImportedRoutingStep_Instance (const String name)
  {
    DefaultText: 'Imported routing step [@name@]'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasPreferredResource
  {
    DefaultText: 'Imported routing step must be linked to a preferred resource if specified.'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasRouting
  {
    DefaultText: 'Imported routing step must be linked to an imported routing.'
  }
  InfoMessage SC_ImportedRoutingStep_ViolateHasValidType
  {
    DefaultText: "Imported routing step doesn't have a valid operation type. The type should correspond to an entry in the Resource Groups knowledge table."
  }
  InfoMessage SC_ImportedWorkOrderDemand_Instance (const String name)
  {
    DefaultText: 'Imported work order demand [@name@]'
  }
  InfoMessage SC_ImportedWorkOrderDemand_ViolateHasWorkOrderOperation
  {
    DefaultText: 'Imported work order demand must be linked to an imported work order operation.'
  }
  InfoMessage SC_ImportedWorkOrderInputMaterial_Instance (const String name)
  {
    DefaultText: 'Imported work order input material [@name@]'
  }
  InfoMessage SC_ImportedWorkOrderInputMaterial_ViolateHasWorkOrderOperation
  {
    DefaultText: 'Imported work order input material must be linked to an imported work order operation.'
  }
  InfoMessage SC_ImportedWorkOrderOperationPrecedence_Instance (const String name)
  {
    DefaultText: 'Imported work order operation precedence [@name@]'
  }
  InfoMessage SC_ImportedWorkOrderOperationPrecedence_ViolateHasFromWorkOrderOperation
  {
    DefaultText: 'Imported work order operation precedence must be linked to an "From" imported work order operation.'
  }
  InfoMessage SC_ImportedWorkOrderOperationPrecedence_ViolateHasToWorkOrderOperation
  {
    DefaultText: 'Imported work order operation precedence must be linked to an "To" imported work order operation.'
  }
  InfoMessage SC_ImportedWorkOrderOperation_Instance (const String name)
  {
    DefaultText: 'Imported work order operation [@name@]'
  }
  InfoMessage SC_ImportedWorkOrderOperation_ViolateHasPreferredResource
  {
    DefaultText: 'Imported work order operation must be linked to a preferred resource if specified.'
  }
  InfoMessage SC_ImportedWorkOrderOperation_ViolateHasValidType
  {
    DefaultText: "Imported work order operation doesn't have a valid operation type. The type should correspond to a ResourceGroup entry in the Resources form."
  }
  InfoMessage SC_ImportedWorkOrderOperation_ViolateHasWorkOrder
  {
    DefaultText: 'Imported work order operation must be linked to an imported work order.'
  }
  InfoMessage SC_ImportedWorkOrderOutputMaterial_Instance (const String name)
  {
    DefaultText: 'Imported work order output material [@name@]'
  }
  InfoMessage SC_ImportedWorkOrderOutputMaterial_ViolateHasWorkOrderOperation
  {
    DefaultText: 'Imported work order output material must be linked to an imported work order operation.'
  }
  InfoMessage SC_ImportedWorkOrderSupply_Instance (const String name)
  {
    DefaultText: 'Imported work order supply [@name@]'
  }
  InfoMessage SC_ImportedWorkOrderSupply_ViolateHasWorkOrderOperation
  {
    DefaultText: 'Imported work order supply must be linked to an imported work order operation.'
  }
  InfoMessage SC_ImportedWorkOrder_Instance (const String name)
  {
    DefaultText: 'Imported work order [@name@]'
  }
  InfoMessage SC_ImportedWorkOrder_ViolateHasProduct
  {
    DefaultText: 'Imported work order must be linked to an imported product.'
  }
  InfoMessage SC_InvalidLocalSearchSettings
  {
    DefaultText: 'Please set all local search parameters.'
  }
  InfoMessage SC_InvalidOperationSelectionSize
  {
    DefaultText: 'Please select more than one operation.'
  }
  InfoMessage SC_InvalidTaskSelectionSize
  {
    DefaultText: 'Please select more than one task.'
  }
  InfoMessage SC_KPIBatchEfficiency
  {
    DefaultText: 'Batch efficiency'
  }
  InfoMessage SC_KPIDeliveryPerformance
  {
    DefaultText: 'Delivery performance'
  }
  InfoMessage SC_KPIOperationsDueNotPlanned
  {
    DefaultText: 'Operations due not planned'
  }
  InfoMessage SC_KPIOperationsOnTime
  {
    DefaultText: 'Operations on time'
  }
  InfoMessage SC_KPIOperationsScheduledEarly
  {
    DefaultText: 'Operations scheduled early'
  }
  InfoMessage SC_KPIProductionResourceAdherence
  {
    DefaultText: 'Production resource adherence'
  }
  InfoMessage SC_KPIProductionSequenceAdherence
  {
    DefaultText: 'Production sequence adherence'
  }
  InfoMessage SC_KPIProductivity
  {
    DefaultText: 'Productivity'
  }
  InfoMessage SC_KPITotalAvailableTime
  {
    DefaultText: 'Total available time'
  }
  InfoMessage SC_KPITotalProductionTime
  {
    DefaultText: 'Total production time'
  }
  InfoMessage SC_KPITotalSetupTime
  {
    DefaultText: 'Total setup time'
  }
  InfoMessage SC_KPITotalWaitingTime
  {
    DefaultText: 'Total waiting time'
  }
  InfoMessage SC_MaterialNotAllowedProduct (const ProductDemand demand, const ProductSupply supply)
  {
    DefaultText: 'Supply @supply.SupplyID()@ of product @supply.ProductId()@ cannot be used to fulfill Demand @demand.DemandID()@ of product @demand.ProductId()@.'
  }
  InfoMessage SC_LeadTimeStrategy_CannotDeleteActive_Precondition
  {
    DefaultText: 'It is not possible to delete the active strategy. Please activate another strategy before deleting this one.'
  }
  InfoMessage SC_LeadTimeStrategy_IsActive_Precondition
  {
    DefaultText: 'This lead time strategy is already active.'
  }
  InfoMessage SC_LeadTimeStrategy_Name_ToolSimulation
  {
    DefaultText: 'StrategyToolSimulation'
  }
  InfoMessage SC_MaterialNotSuitableForOrder
  {
    DefaultText: 'this material is not suitable for this order.'
  }
  InfoMessage SC_NextOperationIsAscendant
  {
    DefaultText: 'the next operation from same plan unit is ascendant of this task.'
  }
  InfoMessage SC_NextOperationIsEarlier
  {
    DefaultText: 'the next operation from the same plan unit is sequenced earlier than selected task.'
  }
  InfoMessage SC_NoCommonBatchType (String id)
  {
    DefaultText: '@id@ does not have batch type in common.'
  }
  InfoMessage SC_NoCommonPractice (String id)
  {
    DefaultText: '@id@ do not have a practice in common.'
  }
  InfoMessage SC_NoCommonPracticeWithBatch
  {
    DefaultText: 'This operation does not have practice in common with the batch selected practice.'
  }
  InfoMessage SC_NoLinkedImportedStockingPoint
  {
    DefaultText: 'There are no imported stocking point linked to this imported product in stocking point.'
  }
  InfoMessage SC_BatchNotPlanned (const String batchid)
  {
    DefaultText: 'Batch @batchid@ not planned.'
  }
  InfoMessage SC_NoRelatedResources
  {
    DefaultText: 'The selected resource group has no resources.'
  }
  InfoMessage SC_NoResourceData
  {
    DefaultText: 'The system has no resource data available. Please provide resource data.'
  }
  InfoMessage SC_NoResourceSelected
  {
    DefaultText: 'No resource is selected.'
  }
  InfoMessage SC_NoSelectedDemoDataset
  {
    DefaultText: 'No selected demo dataset.'
  }
  InfoMessage SC_NoSelectedFeedbackBatch
  {
    DefaultText: 'There is no selected feedback batch.'
  }
  InfoMessage SC_NoTaskAfterSelectedTime
  {
    DefaultText: 'There are no tasks after the selected point in time on the Gantt chart.'
  }
  InfoMessage SC_NoTaskAfterSelection
  {
    DefaultText: 'There is no task after the select task.'
  }
  InfoMessage SC_NonBatchNotAllowed (Resource_SC resource)
  {
    DefaultText: 'Only Batch Tasks are allowed to be dropped on Resource @resource.Name()@.'
  }
  InfoMessage SC_NotAllowedOn (String id, Resource_SC resource)
  {
    DefaultText: '@id@ are not allowed on @resource.Name()@ because:'
  }
  InfoMessage SC_NotAllowedToAddBatchOperationFromSamePlanUnit
  {
    DefaultText: 'Operations from  the same plan unit are not allowed to be batched.'
  }
  InfoMessage SC_NotAssignedToBatch (Operation_SC operation)
  {
    DefaultText: '@operation.OperationID()@ is not assigned to batch.'
  }
  InfoMessage SC_NotBatchOperation (String resource)
  {
    DefaultText: '@resource@ is not a Batch Operation.'
  }
  InfoMessage SC_NotBatchResource (Resource_SC resource)
  {
    DefaultText: '@resource.Name()@ is not a Batch Resource.'
  }
  InfoMessage SC_NotEnoughTool (const String subtaskid, const Number nroftoolrequired, const String toolgroup, 
    const Number nroftool)
  {
    DefaultText: '@subtaskid@ needs a number of @nroftoolrequired@ tools from @toolgroup@ tool group. The number of available tools for @toolgroup@ tool group is @nroftool@.'
  }
  InfoMessage SC_NotPreferedOrAlternativeResource (Resource_SC resource)
  {
    DefaultText: '@resource.Name()@ is neither the preferred resource nor the alternative resource of the preferred resource of this operation.'
  }
  InfoMessage SC_NotUniqueToolID
  {
    DefaultText: 'There is already a Tool with this ToolID.'
  }
  InfoMessage SC_NumberOfHiddenSanityCheckMessage (const Number hiddenviolations)
  {
    DefaultText: 'There are @hiddenviolations@ more violations. Refresh the list or increase the max violations limit.'
  }
  InfoMessage SC_NullTask
  {
    DefaultText: 'Null Task'
  }
  InfoMessage SC_OnlyAllowedToExportInLeadingSchedule
  {
    DefaultText: 'Export is only allowed if active scenario is the leading schedule.'
  }
  InfoMessage SC_OnlySingleBatchSelectionAllowed
  {
    DefaultText: 'Please select only 1 batch when planning batch operations.'
  }
  InfoMessage SC_OnlySingleBatchTaskSelectionAllowed
  {
    DefaultText: 'Please select only 1 task when dropping operation(s) into batch operation list.'
  }
  InfoMessage SC_OperationAlreadyFinished (Operation_SC operation)
  {
    DefaultText: 'Operation @operation.OperationID()@ is completed.'
  }
  InfoMessage SC_OperationAlreadyStarted (Operation_SC operation)
  {
    DefaultText: 'Operation @operation.OperationID()@ is started.'
  }
  InfoMessage SC_OperationBatchNotAllowedOnAnyResource
  {
    DefaultText: 'Resulting batch is not allowed on any of the resources.'
  }
  InfoMessage SC_OperationCannotBeAddedToOptimizerScope_FrozenPeriod
  {
    DefaultText: 'Operations cannot be added to optimizer scope as one or more operation(s) are scheduled or has FSPL upstream operation scheduled in frozen period.'
  }
  InfoMessage SC_OperationCannotBeAddedToOptimizerScope_HasFeedback
  {
    DefaultText: 'Operations cannot be added to optimizer scope as one or more operation(s) are with feedback.'
  }
  InfoMessage SC_OperationCannotBeAddedToOptimizerScope_NoAllowedResource
  {
    DefaultText: 'Selected operations do not have allowed resource.'
  }
  InfoMessage SC_OperationMaximumWaitingTimeViolated (const Operation_SC operation)
  {
    DefaultText: "Operation @operation.OperationID()@ starts @operation.WaitingDuration().Format( 'DDh:m' )@ after previous operation ends, while the maximum allowed waiting duration is @operation.MaximumWaitingDuration().Format( 'DDh:m' )@."
  }
  InfoMessage SC_OperationWidthLargerThanLength (const Real operationlength, const Real resourcelength)
  {
    DefaultText: 'The operation length is @operationlength@ while the resource length is @resourcelength@.'
  }
  InfoMessage SC_OperationWidthNotAllowed (const Real op_width, const Real r_width)
  {
    DefaultText: 'The width is @op_width@ while the maximum parallel load width of the resource is @r_width@.'
  }
  InfoMessage SC_Operation_IsScheduledOnTime (const DateTime duedate, const DateTime end, const Duration difference)
  {
    DefaultText: 'The due date of the operation is @duedate@ but it is scheduled on @end@, later by @difference@.'
  }
  InfoMessage SC_Operation_NotAllowedOnAnyResources (const Operation_SC operation)
  {
    DefaultText: 'Operation @operation.OperationID()@ is not allowed on any resources.'
  }
  InfoMessage SC_Operation_OperationNotDefinedInBatchTypeKT (const String selectedoperation)
  {
    DefaultText: 'Operation of type @selectedoperation@ does not have valid batch type defined.'
  }
  InfoMessage SC_Operation_Downstream_NotAllowedOnResource (const String operationid, const Resource_SC resource, const Resource_SC notallowed_resource)
  {
    DefaultText: 'The planning from operation @operationid@ on resource (@resource.Type()@, @resource.ResourceID()@) to resource (@notallowed_resource.Type()@, @notallowed_resource.ResourceID()@) is not allowed'
  }
  InfoMessage SC_Operation_Downstream_NotAllowedOnResource_Constraint (const Resource_SC resource)
  {
    DefaultText: 'One or more downstream operations are planned on a resource without allowed resource connection from this resource (@resource.Type()@, @resource.ResourceID()@).'
  }
  InfoMessage SC_Operation_IsUsedInOptimizer (const String operationid)
  {
    DefaultText: 'Operation @operationid@ has the status "IsOptimizing" and cannot allow changes until the optimizer is completed.'
  }
  InfoMessage SC_Operation_NullOperation
  {
    DefaultText: 'Null Operation'
  }
  InfoMessage SC_Operation_NullSelection
  {
    DefaultText: 'Null Selection'
  }
  InfoMessage SC_Operation_ReasonDueDate_Batching
  {
    DefaultText: 'Batching'
  }
  InfoMessage SC_Operation_ReasonDueDate_Leadtime
  {
    DefaultText: 'Leadtime'
  }
  InfoMessage SC_Operation_ReasonDueDate_Scheduling
  {
    DefaultText: 'Scheduling'
  }
  InfoMessage SC_Operation_ReasonDueDate_Suggested
  {
    DefaultText: 'Suggested'
  }
  InfoMessage SC_Operation_RelatedDownstreamNotAllowedOnAnyResources
  {
    DefaultText: 'One or more related downstream operations are not allowed on any resources.'
  }
  InfoMessage SC_Operation_RelatedUpstreamNotAllowedOnAnyResources
  {
    DefaultText: 'One or more related upstream operations are not allowed on any resources.'
  }
  InfoMessage SC_Operation_SelectedOperations
  {
    DefaultText: 'Selected operations'
  }
  InfoMessage SC_Operation_SomeOperationToBeAddToBatchAlreadyScheduled
  {
    DefaultText: 'Some operations is already scheduled.'
  }
  InfoMessage SC_Operation_TaskCancelled (const String t, const String r, const String remark)
  {
    DefaultText: 'Task cancelled : task @t@, on resource @r@ has been cancelled with remark @remark@.'
  }
  InfoMessage SC_Operation_UnnecessaryOperationScheduled (const String operationid)
  {
    DefaultText: 'Operation @operationid@ has the status "completed" and does not need to be scheduled.'
  }
  InfoMessage SC_Operation_Upstream_NotAllowedOnResource (const String operationid, const Resource_SC resource, const Resource_SC notallowed_resource)
  {
    DefaultText: 'The planning from operation @operationid@ on resource (@notallowed_resource.Type()@, @notallowed_resource.ResourceID()@) to resource (@resource.Type()@, @resource.ResourceID()@) is not allowed'
  }
  InfoMessage SC_Operation_Upstream_NotAllowedOnResource_Constraint (const Resource_SC resource)
  {
    DefaultText: 'One or more upstream operations are planned on a resource without allowed resource connection to this resource (@resource.Type()@, @resource.ResourceID()@).'
  }
  InfoMessage SC_OperationsExistsInBatch
  {
    DefaultText: 'Selected operations exists in the batch'
  }
  InfoMessage SC_OptimizerInProgressStatusMessage
  {
    DefaultText: 'Local search optimization in progress...'
  }
  InfoMessage SC_OptimizerNoSettingsSelected
  {
    DefaultText: 'Optimizer has no selected setting. Please select a setting.'
  }
  InfoMessage SC_OptimizerNoSolutionForSnapshot
  {
    DefaultText: 'No solution associated with this snapshot.'
  }
  InfoMessage SC_OptimizerParameter_EmptyID
  {
    DefaultText: 'The ID field is empty.'
  }
  InfoMessage SC_OptimizerParameter_ID_NotUnique
  {
    DefaultText: 'The ID is not unique.'
  }
  InfoMessage SC_OptimizerParameter_IsInvalidTimeLimit
  {
    DefaultText: 'The timelimit should be non-negative'
  }
  InfoMessage SC_OptimizerSettings_SettingsIsInUse
  {
    DefaultText: 'Optimizer is running. Cannot update current settings.'
  }
  InfoMessage SC_OptimizerRun_JobExecuteStrategyFailed
  {
    DefaultText: 'Job to execute strategy failed.'
  }
  InfoMessage SC_OptimizerRun_JobFinalizeFailed
  {
    DefaultText: 'Job to finalize run failed.'
  }
  InfoMessage SC_OptimizerStatusMessageOptimizing
  {
    DefaultText: 'Optimizing...'
  }
  InfoMessage SC_OptimizerRun_DoesNotHaveSnapshot
  {
    DefaultText: 'Cannot roll back because run does not have snapshots to roll back to.'
  }
  InfoMessage SC_OptimizerRun_DoesNotSupportRollbacks (const String type)
  {
    DefaultText: 'This optimizer run of type "@type@" does not support roll backs'
  }
  InfoMessage SC_OptimizerSelectResourceGroup
  {
    DefaultText: 'Select the resource group on which this step should be run.'
  }
  InfoMessage SC_OptimizerSnapshotNameBackupBeforeUIRestore
  {
    DefaultText: 'Before UI restore'
  }
  InfoMessage SC_OptimizerSnapshotNameBenchmark
  {
    DefaultText: 'Benchmark'
  }
  InfoMessage SC_OptimizerSnapshotNameInitialDescription
  {
    DefaultText: 'Initial snapshot'
  }
  InfoMessage SC_OptimizerSnapshotNameLSFinishing
  {
    DefaultText: 'LS: finishing'
  }
  InfoMessage SC_OptimizerSnapshotNameLSInitialSolution
  {
    DefaultText: 'LS: created initial solution'
  }
  InfoMessage SC_OptimizerSnapshotNamePOAOptimize
  {
    DefaultText: 'POA optimize'
  }
  InfoMessage SC_OptimizerSnapshotNamePOASolveConflict
  {
    DefaultText: 'POA solve conflict'
  }
  InfoMessage SC_OptimizerSnapshotNameSolutionExport
  {
    DefaultText: 'Solution export'
  }
  InfoMessage SC_OptimizerSnapshotNameUI
  {
    DefaultText: 'UI snapshot'
  }
  InfoMessage SC_OptimizerStrategy_StrategyIsInUse
  {
    DefaultText: 'Optimizer is running. Cannot update current strategy.'
  }
  InfoMessage SC_OptimizerTemporarySnapshotToSaveSolution
  {
    DefaultText: 'Temporary snapshot to save solution'
  }
  InfoMessage SC_Optimizer_ScopeNotValid
  {
    DefaultText: 'Optimizer scope not valid. Please make sure there is at least 1 relevant operation in scope for the selected optimizer.'
  }
  InfoMessage SC_OrderAlreadyHasMaterial
  {
    DefaultText: 'The order already has material'
  }
  InfoMessage SC_OrderHasBeenFullfiled (Order_SC order)
  {
    DefaultText: 'Order @order.OrderNr()@ has been fully fulfilled.'
  }
  InfoMessage SC_Order_IsScheduledOnTime (const DateTime duedate, const DateTime expecteddate, const Duration difference)
  {
    DefaultText: 'The due date of the order is @duedate@ but it is scheduled on @expecteddate@, later by @difference@.'
  }
  InfoMessage SC_PlanUnitCannotBeAddedIntoBatch (String planunitid, Batch batch)
  {
    DefaultText: '@planunitid@ cannot be added into @batch.BatchID()@ because'
  }
  InfoMessage SC_PlanUnitCannotBeBatched (String planunitid, Resource_SC resource)
  {
    DefaultText: '@planunitid@ cannot be added as a batch in @resource.Name()@ because'
  }
  InfoMessage SC_PlanUnitCannotBeEdited
  {
    DefaultText: 'This plan unit cannot be edited because:'
  }
  InfoMessage SC_PlanUnitCannotBeJoined
  {
    DefaultText: 'The selected plan units cannot be joined because:'
  }
  InfoMessage SC_PlanUnitCannotBeSplit
  {
    DefaultText: 'This cannot be split because:'
  }
  InfoMessage SC_PlanUnit_CannotBeDeleted_HasFeedback
  {
    DefaultText: 'All the selected plan units have operations with feedback.'
  }
  InfoMessage SC_PlanUnit_AllCannotBeDeleted_HasOperationInFrozenHorizon
  {
    DefaultText: 'All the selected plan units have operations in the frozen horizon.'
  }
  InfoMessage SC_PlanUnit_CannotBeDeleted_LastPlanUnit
  {
    DefaultText: 'All the selected plan units are the last plan unit in their orders, they cannot be deleted, delete the work order instead.'
  }
  InfoMessage SC_PlanUnit_DiscreteSupplyDemandIndiscreteQuantity
  {
    DefaultText: 'This plan unit split would require splitting its inputs and/or outputs into parts with fractional quantities. This is not supported for entities that have been specified as discrete quantities. If splitting those quantities into fractional parts is intended, please specify IsDiscrete=FALSE in the import data.'
  }
  InfoMessage SC_PlanUnit_HasBatchOperationInBatch
  {
    DefaultText: 'At least one of the plan units has batch operations in a batch. Please unbatch their operations.'
  }
  InfoMessage SC_PlanUnit_HasFeedback
  {
    DefaultText: 'At least one of the plan units has operations with feedback.'
  }
  InfoMessage SC_PlanUnit_HasOperationInFrozenHorizon
  {
    DefaultText: 'At least one of the plan units has operations in the frozen horizon.'
  }
  InfoMessage SC_PlanUnitCannotBePlanned (String planunitid)
  {
    DefaultText: '@planunitid@ cannot be planned because'
  }
  InfoMessage SC_PlanUnitCannotBePlannedOnResource (String planunitid, Resource_SC resource)
  {
    DefaultText: '@planunitid@ cannot be planned on @resource.Name()@.'
  }
  InfoMessage SC_PlanUnitNotAllowedOnResource (String planunit, Resource_SC resource)
  {
    DefaultText: '@planunit@ has operations that is not allowed on this resource @resource.Name()@.'
  }
  InfoMessage SC_PlanUnit_HasOperationSupplyReserved
  {
    DefaultText: 'At least one of the plan units has operations with supply reserved. Please unreserve their supplies.'
  }
  InfoMessage SC_PlanUnit_MultiplePlanUnit
  {
    DefaultText: 'There must be more than one plan unit or more than one task selected to join.'
  }
  InfoMessage SC_PlanUnit_QuantityIsNotFitLotSize (const PlanUnit_SC planunit, const Routing routing)
  {
    DefaultText: 'Plan unit quantity (@planunit.Quantity()@) is less than lot size (@routing.LotSize()@) for Routing @routing.RoutingId()@.'
  }
  InfoMessage SC_PlanUnit_QuantityIsNotMultipleOfLotSize (const PlanUnit_SC planunit, const Routing routing)
  {
    DefaultText: 'Plan unit quantity (@planunit.Quantity()@) should be an integral multiple of lot size (@routing.LotSize()@) for Routing @routing.RoutingId()@.'
  }
  InfoMessage SC_PlanUnit_QuantityLessThanMinSize (const PlanUnit_SC planunit, const Routing routing)
  {
    DefaultText: 'Plan unit quantity (@planunit.Quantity()@) is less than the minimum size (@routing.MinSize()@) of Routing @routing.RoutingId()@.'
  }
  InfoMessage SC_PlanUnit_QuantityMoreThanMaxSize (const PlanUnit_SC planunit, const Routing routing)
  {
    DefaultText: 'Plan unit quantity (@planunit.Quantity()@) is more than the maximum size (@routing.MaxSize()@) for Routing @routing.RoutingId()@.'
  }
  InfoMessage SC_PlanUnit_QuantityNotAll (const Real quantity, const Real planunitquantity)
  {
    DefaultText: 'The input quantity (@quantity@) is equal to the plan unit quantity (@planunitquantity@), there is nothing to split.'
  }
  InfoMessage SC_PlanUnit_QuantityNotGreaterThanCurrent (const Real quantity, const Real planunitquantity)
  {
    DefaultText: 'The input quantity (@quantity@) cannot be greater than the plan unit quantity (@planunitquantity@), there is nothing left for the split plan unit.'
  }
  InfoMessage SC_PlanUnit_SameWorkOrder
  {
    DefaultText: 'These need to be from the same order to be joined.'
  }
  InfoMessage SC_PreviousOperationIsDescendent
  {
    DefaultText: 'the previous operation from same plan unit is descendant of this task.'
  }
  InfoMessage SC_PreviousOperationIsLater
  {
    DefaultText: 'the previous operation from the same plan unit is sequenced later than selected task.'
  }
  InfoMessage SC_ProductInStockingPoint_CannotCreateWO_NoAvailableRouting
  {
    DefaultText: 'There are no available routings to create work orders.'
  }
  InfoMessage SC_ProductNotAllowedOnResource (Operation_SC operation, Resource_SC resource)
  {
    DefaultText: '@operation.OperationID()@ has product @operation.PlanUnit_SC().ProductId()@ which is not allowed on resource @resource.Name()@.'
  }
  InfoMessage SC_ProductNotPreferredForFulfillment (const ProductDemand demand, const ProductSupply supply)
  {
    DefaultText:
    [*
      Product @supply.ProductId()@ is a non-preferred alternative for product @demand.ProductId()@.
      Do you want to use non-preferred alternative product as supply?
    *]
  }
  InfoMessage SC_RemoveFeedbackOperationFromBatchConfirmation
  {
    DefaultText: 'One or more of the selection have feedback. Are you sure you want to remove from batch?'
  }
  InfoMessage SC_RemoveFrozenOperationFromBatchConfirmation
  {
    DefaultText: 'One or more of the selection falls within the frozen period. Are you sure you want to remove from batch?'
  }
  InfoMessage SC_ResourceGroup_AddNewCampaignType_TC
  {
    DefaultText: 'Add new campaign type'
  }
  InfoMessage SC_ResourceCalendar_EditNotAllowedCapacityResource (const String name)
  {
    DefaultText: "Edit Resource Calendar is not allowed because  @name@ capacity resource has multiple resources.'"
  }
  InfoMessage SC_ResourceGroup_CanNotDelete_Precondition
  {
    DefaultText: 'Schedule of the resource needs to be deleted before deleting the resource'
  }
  InfoMessage SC_ResourceGroup_ChangeType_Precondition
  {
    DefaultText: 'Please delete the schedule on all resources of this resource group before changing resource type.'
  }
  InfoMessage SC_ResourceGroup_EditCampaignType
  {
    DefaultText: 'Edit campaign type'
  }
  InfoMessage SC_ResourceGroup_NameEmpty_Precondition
  {
    DefaultText: 'Name cannot be empty. Please select a different name.'
  }
  InfoMessage SC_ResourceGroup_NameNotUnique_Precondition (const String name)
  {
    DefaultText: '@name@ already in use. Please select a different name.'
  }
  InfoMessage SC_ResourceNotSupportCampaign (Resource_SC resource)
  {
    DefaultText: 'Resource @resource.Name()@ does not support campaign.'
  }
  InfoMessage SC_ResourceType (Resource_SC resource)
  {
    DefaultText: 'Resource @resource.Name()@ has type @resource.Type()@.'
  }
  InfoMessage SC_ResourceTypeUnmatched (String id, Operation_SC operation, Resource_SC resource)
  {
    DefaultText: '@id@ has type @operation.Type()@ while resource @resource.Name()@ has type @resource.Type()@.'
  }
  InfoMessage SC_ResourceTypeUnmatchedMultiple (const String resource, const String type)
  {
    DefaultText: 'Multiple operations have incompatible type for resource @resource@ having type @type@.'
  }
  InfoMessage SC_ResourceType_BatchResource
  {
    DefaultText: 'BatchResource'
  }
  InfoMessage SC_ResourceType_ContinuousResource
  {
    DefaultText: 'ContinuousResource'
  }
  InfoMessage SC_ResourceType_SingleResource
  {
    DefaultText: 'SingleResource'
  }
  InfoMessage SC_ResourceViewNotSelected
  {
    DefaultText: 'Resource view is not selected.'
  }
  InfoMessage SC_ResourceView_ImportFromXML_InvalidFile
  {
    DefaultText: 'Import failed, select a valid file.'
  }
  InfoMessage SC_Resource_CanNotDelete_Precondition
  {
    DefaultText: 'Schedule of this resource needs to be deleted before deleting the resource'
  }
  InfoMessage SC_Resource_EditMultipleResourceUnallowed
  {
    DefaultText: 'Please select multiple resources within the same resource group.'
  }
  InfoMessage SC_Resource_HasSameResourceGroup_Precondition
  {
    DefaultText: 'The target Resource must belong to the same Resource Group as the selected Resource.'
  }
  InfoMessage SC_Resource_ResourceIDEmpty
  {
    DefaultText: 'Resource ID must not be empty.'
  }
  InfoMessage SC_Resource_ResourceID_NotUnique
  {
    DefaultText: 'This Resource ID already exists. Please select a unique one.'
  }
  InfoMessage SC_Resources_AllResources
  {
    DefaultText: 'All resources'
  }
  InfoMessage SC_Routing_DueDateEarlierThanCompanyTime (const Date duedate, const Date companytime)
  {
    DefaultText: 'The input due date (@duedate@) is earlier than the company time (@companytime@).'
  }
  InfoMessage SC_Routing_InfiniteQuantity (const Real quantity)
  {
    DefaultText: 'The input quantity (@quantity@) must be between 0 and 1000000000.'
  }
  InfoMessage SC_Routing_NotDiscrete (const Real quantity)
  {
    DefaultText: 'The input quantity (@quantity@) must be an integer.'
  }
  InfoMessage SC_Routing_NotLessThanMaxSize (const Real quantity, const Real maxsize)
  {
    DefaultText: "The input quantity (@quantity@) is greater than the routing's max size (@maxsize@)."
  }
  InfoMessage SC_Routing_NotMoreThanMinSize (const Real quantity, const Real minsize)
  {
    DefaultText: "The input quantity (@quantity@) is less than the routing's min size (@minsize@)."
  }
  InfoMessage SC_Routing_NotMultipleOfLotSize (const Real quantity, const Real lotsize)
  {
    DefaultText: "The input quantity (@quantity@) is not a multiple of the routing's lot size (@lotsize@)."
  }
  InfoMessage SC_Routing_SelectRouting
  {
    DefaultText: 'Please select a routing to create this work order.'
  }
  InfoMessage SC_Routing_ZeroQuantity
  {
    DefaultText: 'The input quantity must be more than zero.'
  }
  InfoMessage SC_SanityCheckGroup_CanIgnoreUnignore_AllIgnored
  {
    DefaultText: 'All groups are already ignored.'
  }
  InfoMessage SC_SanityCheckGroup_CanIgnoreUnignore_AllNotIgnored
  {
    DefaultText: 'All groups are already unignored.'
  }
  InfoMessage SC_SanityCheckMessage_CanIgnore_AllIgnored
  {
    DefaultText: 'All messages are already ignored.'
  }
  InfoMessage SC_SanityCheckMessage_CanShow_AllIShown
  {
    DefaultText: 'All messages are already unignored.'
  }
  InfoMessage SC_SanityCheck_CampaignType (const String type)
  {
    DefaultText: 'CampaignType (@type@)'
  }
  InfoMessage SC_SanityCheck_DependentDemandId (const String name)
  {
    DefaultText: 'DependentDemandId (@name@)'
  }
  InfoMessage SC_SanityCheck_End (const DateTime end)
  {
    DefaultText: 'End(@end@)'
  }
  InfoMessage SC_SanityCheck_ExternalSupplyId (const String name)
  {
    DefaultText: 'ExternalSupplyId (@name@)'
  }
  InfoMessage SC_SanityCheck_Failed
  {
    DefaultText: 'Sanity check failed. Click to show sanity check messages.'
  }
  InfoMessage SC_SanityCheck_Id (const String name)
  {
    DefaultText: 'Id (@name@)'
  }
  InfoMessage SC_SanityCheck_IsLengthExceeded
  {
    DefaultText: 'Length exceeded.'
  }
  InfoMessage SC_SanityCheck_IsMissingName
  {
    DefaultText: 'Missing name'
  }
  InfoMessage SC_SanityCheck_MaterialNr (const String name)
  {
    DefaultText: 'MaterialNr (@name@)'
  }
  InfoMessage SC_SanityCheck_Name (const String name)
  {
    DefaultText: 'Name (@name@)'
  }
  InfoMessage SC_SanityCheck_OrderLineNr (const String orderlinenr)
  {
    DefaultText: 'OrderLineNr (@orderlinenr@)'
  }
  InfoMessage SC_SanityCheck_OrderNr (const String ordernr)
  {
    DefaultText: 'OrderNr (@ordernr@)'
  }
  InfoMessage SC_SanityCheck_Passed
  {
    DefaultText: 'Sanity check passed!'
  }
  InfoMessage SC_SanityCheck_ProductId (const String name)
  {
    DefaultText: 'ProductId (@name@)'
  }
  InfoMessage SC_SanityCheck_Resource (const String resource)
  {
    DefaultText: 'Resource(@resource@)'
  }
  InfoMessage SC_SanityCheck_RoutingId (const String name)
  {
    DefaultText: 'RoutingId (@name@)'
  }
  InfoMessage SC_SanityCheck_RoutingStepSequenceNr (const Number number)
  {
    DefaultText: 'RoutingStepSequenceNr (@number@)'
  }
  InfoMessage SC_SanityCheck_SequenceNr (const Number number)
  {
    DefaultText: 'SequenceNr (@number@)'
  }
  InfoMessage SC_SanityCheck_Start (const DateTime start)
  {
    DefaultText: 'Start(@start@)'
  }
  InfoMessage SC_SanityCheck_StockMaterialId (const String name)
  {
    DefaultText: 'StockMaterialId (@name@)'
  }
  InfoMessage SC_SanityCheck_StockingPointId (const String name)
  {
    DefaultText: 'StockingPointId (@name@)'
  }
  InfoMessage SC_SanityCheck_WorkOrderDemandId (const String name)
  {
    DefaultText: 'WorkOrderDemandId (@name@)'
  }
  InfoMessage SC_SanityCheck_WorkOrderId (const String name)
  {
    DefaultText: 'WorkOrderId (@name@)'
  }
  InfoMessage SC_SanityCheck_WorkOrderInputMaterialId (const String name)
  {
    DefaultText: 'WorkOrderInputMaterialId (@name@)'
  }
  InfoMessage SC_SanityCheck_WorkOrderOutputMaterialId (const String name)
  {
    DefaultText: 'WorkOrderOutputMaterialId (@name@)'
  }
  InfoMessage SC_SanityCheck_WorkOrderSupplyId (const String name)
  {
    DefaultText: 'WorkOrderSupplyId (@name@)'
  }
  InfoMessage SC_Scenario
  {
    DefaultText: 'Scenario'
  }
  InfoMessage SC_ScenarioManagerDatasetNotCreatedOrSelected
  {
    DefaultText: 'ScenarioManager dataset is not created or selected.'
  }
  InfoMessage SC_ScheduleDatasetNotCreatedOrSelected
  {
    DefaultText: 'Schedule dataset is not created or selected.'
  }
  InfoMessage SC_SelectOperation
  {
    DefaultText: 'Please select an operation.'
  }
  InfoMessage SC_SelectResource
  {
    DefaultText: 'Please select a Batch Resource.'
  }
  InfoMessage SC_SelectionAlreadyAtFirstPosition (String id)
  {
    DefaultText: '@id@ is already at the first position.'
  }
  InfoMessage SC_SelectionAlreadyAtLastPosition (String id)
  {
    DefaultText: '@id@ is already at the last position.'
  }
  InfoMessage SC_ShopFloor_MaterialFeedbackNotAllowed_NoPlannedDemand
  {
    DefaultText: 'Operation does not have planned demand.'
  }
  InfoMessage SC_ShopFloor_MaterialFeedbackNotAllowed_NoPlannedSupply
  {
    DefaultText: 'Operation does not have planned supply.'
  }
  InfoMessage SC_ShopFloor_MaterialFeedbackNotAllowed_NotStarted
  {
    DefaultText: 'Operation is not started.'
  }
  InfoMessage SC_ShopfloorEndCancelNotAllowed
  {
    DefaultText: 'Operation is not ended.'
  }
  InfoMessage SC_ShopfloorOperationIsAborted (const String t, const String r, const String remark)
  {
    DefaultText: 'Task aborted: task @t@, on resource @r@ has been aborted with remark @remark@.'
  }
  InfoMessage SC_ShopfoorStartCancelNotAllowed
  {
    DefaultText: 'Operation is not started or has ended.'
  }
  InfoMessage SC_StartedDemandBatchCannotBeDeleted
  {
    DefaultText: 'Demand batch has already started.'
  }
  InfoMessage SC_StatusNotPlanned (String id)
  {
    DefaultText: '@id@ is not planned.'
  }
  InfoMessage SC_StockHasNotDefined
  {
    DefaultText: 'The stock is not defined for'
  }
  InfoMessage SC_StoreDemoData_NoSelectedDataset
  {
    DefaultText: 'No selected dataset to be stored.'
  }
  InfoMessage SC_StoreDemoData_SelectedDatasetNotSchedule (const String name)
  {
    DefaultText: "Selected dataset name is @name@, only 'Schedule' dataset can be stored."
  }
  InfoMessage SC_StoreDemoData_SelectedDatasetNotStandalone
  {
    DefaultText: 'Selected dataset state is not standalone, only standalone dataset can be stored.'
  }
  InfoMessage SC_SupplyIsFullyReserved (const Supply supply)
  {
    DefaultText: 'Supply @supply.SupplyID()@ has been fully reserved.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_AlreadyFirstRespectMachine_Precondition
  {
    DefaultText: 'This subtask type is already the first respect machine subtask type.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_AlreadyFirstRespectRouting_Precondition
  {
    DefaultText: 'This subtask type is already the first respect routing subtask type.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_AlreadyLastRespectMachine_Precondition
  {
    DefaultText: 'This subtask type is already the last respect machine subtask type.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_AlreadyLastRespectRouting_Precondition
  {
    DefaultText: 'This subtask type is already the last respect routing subtask type.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_FirstRespectMachine_Precondition
  {
    DefaultText: 'The first respect machine subtask needs to be earlier in the sequence than the last respect machine subtask.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_FirstRespectRouting_Precondition
  {
    DefaultText: 'The first respect routing subtask needs to be earlier in the sequence than the last respect routing subtask.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_LastRespectMachine_Precondition
  {
    DefaultText: 'The last respect machine subtask needs to be later in the sequence than the first respect machine subtask.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_LastRespectRouting_Precondition
  {
    DefaultText: 'The last respect routing subtask needs to be later in the sequence than the first respect routing subtask.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_MachineReorder_Precondition
  {
    DefaultText: 'The first respect machine subtask type cannot be sequenced after the last respect machine subtask type.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_RecieveSubTaskExists_Precondition
  {
    DefaultText: 'The first respect routing should be Receive subtask.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_RoutingReorder_Precondition
  {
    DefaultText: 'The first respect routing subtask type cannot be sequenced after the last respect routing subtask type.'
  }
  InfoMessage SC_SubTaskTypeOnResourceGroup_TransferSubTaskExists_Precondition
  {
    DefaultText: "The transfer subtask's prior subtask must be the last respect routing subtask when present."
  }
  InfoMessage SC_Supply_HasBeenReservedByCompletedOperation (const String operationid)
  {
    DefaultText: 'This supply is inactive, it has been reserved by completed operation @operationid@.'
  }
  InfoMessage SC_Supply_SamePlanUnitWithWIPDemand (const String d)
  {
    DefaultText: 'This supply cannot fulfill selected wip demand @d@, it has same planunit with selected wip demand.'
  }
  InfoMessage SC_TaskFallsInFrozenPeriod (Operation_SC operation, DateTime endoffrozenperiod)
  {
    DefaultText: '@operation.OperationID()@ falls within the frozen period that ends at @endoffrozenperiod@.'
  }
  InfoMessage SC_TaskOnlyApplicableForBatchTask
  {
    DefaultText: 'Batch details only applicable for batch task.'
  }
  InfoMessage SC_TaskStrategyInvalid
  {
    DefaultText: 'No Strategy is selected or the selected strategy is not recognized. Please change the strategy.'
  }
  InfoMessage SC_TaskStrategyToolSimulationNoToolTask (const String strategyname)
  {
    DefaultText: 'There are tool requirements for this resource, but the selected strategy is @strategyname@.'
  }
  InfoMessage SC_Task_HasFeedback (const String taskid)
  {
    DefaultText: '@taskid@ has feedback.'
  }
  InfoMessage SC_Task_LastRespectRouting_EarlierThan_FirstRespectRouting
  {
    DefaultText: 'Last respect routing cannot be earlier than first respect routing.'
  }
  InfoMessage SC_ToolGroup_CannotBeDeleted (const String toolgroupname)
  {
    DefaultText: 'Cannot delete ToolGroup @toolgroupname@, because it still has related tool requirement(s).'
  }
  InfoMessage SC_ToolGroup_TypeNotUnique_Precondition
  {
    DefaultText: 'Tool Group must have a unique type.'
  }
  InfoMessage SC_ToolIsBlocked
  {
    DefaultText: 'This task is positioned where it requires tool but the tool is blocked.'
  }
  InfoMessage SC_NotUniqueBlockID
  {
    DefaultText: 'Block must have a unique ID.'
  }
  InfoMessage SC_ToolRequirementAlreadyLinkedToToolBlock (const String blockid)
  {
    DefaultText: 'This tool requirement is already part of block @blockid@ of selected block.'
  }
  InfoMessage SC_ToolRequirement_IsNotUnique
  {
    DefaultText: 'There is already a tool requirement for the same from/to resources, subtask and tool group.'
  }
  InfoMessage SC_ToolRequirement_PositiveNrOfTools
  {
    DefaultText: 'Please fill in an appropriate number of tools.'
  }
  InfoMessage SC_ToolRequirements_DeleteToolRequirements
  {
    DefaultText: 'Selection does not have any tool requirements to delete.'
  }
  InfoMessage SC_ToolSimulationHorizonInvalid
  {
    DefaultText: 'Tool simulation horizon must be greater than zero.'
  }
  InfoMessage SC_UnplanConfirmation
  {
    DefaultText: 'One or more of the selection falls within the frozen period. Are you sure you want to unplan?'
  }
  InfoMessage SC_Confirmation_Unreserve_Fulfillments
  {
    DefaultText: "One or more of the fulfillments are for a demand's operation that falls within the frozen period. Are you sure you want to unreserve?"
  }
  InfoMessage SC_WIPDemandFullyFulfilledByUpstream (const Demand demand)
  {
    DefaultText: 'Upstreams of wip demand @demand.DemandID()@ has already been fully fulfilled.'
  }
  InfoMessage SC_WorkOrderColorRange_AddNewOrderColor
  {
    DefaultText: 'Add new order color'
  }
  InfoMessage SC_WorkOrderColorRange_CannotMoveDownLastOrderColor (const WorkOrderColorRange ordercolor)
  {
    DefaultText: 'Cannot move order color @ordercolor.ColorIndex()@ down because its color index is the last in the list.'
  }
  InfoMessage SC_WorkOrderColorRange_CannotMoveUpFirstOrderColor (const WorkOrderColorRange ordercolor)
  {
    DefaultText: 'Cannot move order color @ordercolor.ColorIndex()@ up because its color index is the first in the list.'
  }
  InfoMessage SC_WorkOrderColorRange_EditOrderColor
  {
    DefaultText: 'Edit order color'
  }
  InfoMessage SC_WorkOrder_CannotChangeRouting (const String routingid)
  {
    DefaultText: 'This work order cannot change its routing (@routingid@) because:'
  }
  InfoMessage SC_WorkOrder_CannotChangeRouting_HasBatchOperationInBatch
  {
    DefaultText: 'This work order has batch operations in a batch.'
  }
  InfoMessage SC_WorkOrder_IsNotLate (const DateTime duedate)
  {
    DefaultText: 'Late order. This order was due on @duedate@.'
  }
  InfoMessage SC_WorkOrder_IsPlanUnitsQuantitiesEqualWorkOrder
  {
    DefaultText: "This order's quantity is not equal to the sum of its plan units' quantity."
  }
  InfoMessage SC_WorkOrder_NotAllowedDelete_HasFeedbackOperation (const String woid)
  {
    DefaultText: 'Work order @woid@ has operations with feedback.'
  }
  InfoMessage SC_WorkOrder_NotAllowedDelete_HasPlannedOperation (const String woid)
  {
    DefaultText: 'Work order @woid@ has operations planned.'
  }
  InfoMessage SC_WorkOrder_CannotChangeRouting_HasSupplyReserved
  {
    DefaultText: 'This work order has operations with supply reserved.'
  }
  InfoMessage SC_WorkOrder_CannotEdit
  {
    DefaultText: 'Only work orders created in Scheduler can be edited.'
  }
  InfoMessage SC_WorkOrder_PlanUnitsWithNonAllowedQuantity (const WorkOrder workorder)
  {
    DefaultText: 'This order @workorder.Id()@ has plan units with non-allowed quantity.'
  }
  InfoMessage SC_WorkOrder_QuantityIsNotFitLotSize (const WorkOrder order, const Routing routing)
  {
    DefaultText: 'Order quantity (@order.Quantity()@) is less than lot size (@routing.LotSize()@) for Routing @routing.RoutingId()@.'
  }
  InfoMessage SC_WorkOrder_QuantityIsNotMultipleOfLotSize (const WorkOrder order, const Routing routing)
  {
    DefaultText: 'Order quantity (@order.Quantity()@) should be an integral multiple of lot size (@routing.LotSize()@) for Routing @routing.RoutingId()@.'
  }
  InfoMessage SC_WorkOrder_NotAllowedDelete_AllOperationNotEnded (const String woid)
  {
    DefaultText: 'Work order @woid@ cannot be deleted because MES feedback has not yet reported that all their executions have ended.'
  }
  InfoMessage SC_WorkOrder_NotAllowedDelete_NotCreatedInSchedule (const String woid)
  {
    DefaultText: 'Work order @woid@ is not created in scheduler.'
  }
  InfoMessage SC_YesWithShortcutKey
  {
    DefaultText: '&Yes'
  }
  InfoMessage SM_ConfirmDeleteSelectedOptimizerStrategy
  {
    DefaultText: 'Are you sure you want to delete the selected optimizer strategy?'
  }
  InfoMessage SM_ConfirmDeleteSelectedOptimizerStrategy_SelectedWarning
  {
    DefaultText: 'This strategy is selected by one or more optimizers. Deleting it reverts them to the default strategy.'
  }
  InfoMessage SM_ConfirmDeleteSelectedOptimizerUserSetting
  {
    DefaultText: 'Are you sure you want to delete the selected optimizer setting?'
  }
  InfoMessage SM_ConfirmDeleteSelectedOptimizerUserSetting_SelectedWarning
  {
    DefaultText: 'This setting is selected by one or more optimizers. Deleting it reverts them to the default setting.'
  }
  InfoMessage SM_DialogOptimizerStrategy_EditTitle
  {
    DefaultText: 'Edit Optimizer Strategy'
  }
  InfoMessage SM_DialogOptimizerStrategy_NewTitle
  {
    DefaultText: 'New Optimizer Strategy'
  }
  InfoMessage SM_OptimizerSettings_CannotDeleteDefault
  {
    DefaultText: 'Cannot delete default settings.'
  }
  InfoMessage SM_OptimizerStrategy_CannotDeleteDefault
  {
    DefaultText: 'Cannot delete default strategy.'
  }
  InfoMessage SM_OptimizerStrategy_ID_Empty
  {
    DefaultText: 'This Optimizer Strategy ID cannot be empty. Please enter a unique ID.'
  }
  InfoMessage SM_OptimizerStrategy_ID_NotUnique
  {
    DefaultText: 'This Optimizer Strategy ID already exists. Please select a unique one.'
  }
  InfoMessage Schedule_PublishedSuccessfully
  {
    DefaultText: 'Schedule published successfully.'
  }
  InfoMessage SetKPI_NotImplemented
  {
    DefaultText: 'Snapshot.SetKPI method not implemented!'
  }
  InfoMessage Task_CannotUnplanBecauseLockedByOptimizer
  {
    DefaultText: 'One or more of the selection is locked by optimizer. Unplan can have negative impact on optimizer results. Are you sure you want to unplan?'
  }
  InfoMessage Task_InvalidShutdownTargetStart (const DateTime plannedstart, const DateTime targetstart, const Duration maxdeviation)
  {
    DefaultText: 'The deviation between planned start [@plannedstart@] and target start is [@targetstart@] is more than the allowed deviation [@maxdeviation.Format("DDh:m")@].'
  }
  InfoMessage Task_ReserveMaterialConfirmation
  {
    DefaultText: 'One or more selected task(s) is locked by optimizer. Reserve material can have negative impact on optimizer results. Are you sure you want to reserve material?'
  }
  InfoMessage TechnicalConfiguration_CannotToggleTimeConstraintsMode
  {
    DefaultText: 'Data-driven time constraints mode can only be toggled when there is no task planned.'
  }
  InfoMessage WorkOrder_MoreThanOneWorkOrders
  {
    DefaultText: 'Select at least two work orders.'
  }
  InfoMessage WorkOrder_NotAllIsInternalWorkOrder (const String function, const String externalworkorder)
  {
    DefaultText: 'Cannot @function@ @externalworkorder@ as the selected work orders are not internal work order.'
  }
  InfoMessage WorkOrder_CannotMarkBatchOrExternalWorkOrderForRelease
  {
    DefaultText: 'Scheduler does not own the selected work order(s). Only internal work orders can be released.'
  }
  InfoMessage WorkOrder_CannotMarkInternalWorkOrderForReleaseTwice
  {
    DefaultText: 'Selected work order(s) already marked for release.'
  }
  InfoMessage WorkOrder_CannotModifyReleasedWorkOrder
  {
    DefaultText: 'Selected work order(s) are already released.'
  }
  InfoMessage WorkOrder_JoinSuccessMessage (const String joinedWorkOrders, const String newWorkOrder)
  {
    DefaultText: 'Work order @joinedWorkOrders@ joined to work order @newWorkOrder@.'
  }
  InfoMessage WorkOrder_NotAllowedToDeleteMarkedForReleaseWorkOrder (constcontent String woid)
  {
    DefaultText: 'Work order @woid@ is marked for release hence cannot be deleted.'
  }
  InfoMessage WorkOrder_NotAllowedToEditMarkedForReleaseWorkOrder (const String woid)
  {
    DefaultText: 'Work order @woid@ is marked for release hence no further changes are allowed.'
  }
  InfoMessage WorkOrder_NotAllowedToJoinMarkedForReleaseWorkOrder
  {
    DefaultText: 'At least one of the selected work orders is already marked for release, therefore they cannot be joined.'
  }
  InfoMessage WorkOrder_NotAllowedToSplitMarkedForReleaseWorkOrder
  {
    DefaultText: 'At least one of the selected work orders is already marked for release, therefore they cannot be split.'
  }
  InfoMessage WorkOrder_UnReleaseAndUnMarkForRelease_WorkOrderNotReleasedOrMarkedForReleaseManually
  {
    DefaultText: 'None of the selected work orders are released or marked for released manually.'
  }
  InfoMessage WorkOrder_Warning_CancelRelease
  {
    DefaultText: 'One or more selected work orders have been released already. Cancelling the release now will not stop work order release. Are you sure you want to cancel releasing of this work order?'
  }
  InfoMessage Yes
  {
    DefaultText: 'Yes'
  }
}
