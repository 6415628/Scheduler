Quintiq file version 2.0
#parent: #root
Method AllowedScheduling (Task_SCs tasks, Boolean skipsoftcheck, Boolean movedown, 
  output String feedback_o, output Boolean isallowedhard_o) declarative remote as Boolean
{
  Description: 'Checks allowed scheduling. The before and after task is not generic across the selection.'
  TextBody:
  [*
    // janer Jul-9-2014 (created)
    // Traverse is used instead of forall because before and after task is not generic across the selection.
    value := tasks.Size() > 0;
    
    traverse( tasks, Elements, task )
    {
      //Move Up
      aftertask := task.Previous();
      beforetask := guard( aftertask.Previous(), null( Task_SC ) );
      //Move Down
      if( movedown )
      {
        beforetask := task.Next();
        aftertask := guard( beforetask.Next(), null( Task_SC ) );
      }
    
      operations := selectset( task, OperationInTask, op, true, true );
    
      value := this.AllowedScheduling( operations, beforetask, aftertask, skipsoftcheck, feedback_o, isallowedhard_o )
               and value;
    }
    
    return value;
  *]
}
