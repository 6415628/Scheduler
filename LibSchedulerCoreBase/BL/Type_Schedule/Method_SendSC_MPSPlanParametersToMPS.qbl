Quintiq file version 2.0
#parent: #root
Method SendSC_MPSPlanParametersToMPS (LibDEF_DataRepository datarepository_i)
{
  Description: 'Exports SC_MPSPlanParameters to MPS system.'
  TextBody:
  [*
    channelname := LibDEC_ChannelSC_MPSPlanParameters::CHANNEL_NAME();
    channel := datarepository_i.FindChannel( channelname );
    
    if( not isnull( channel ) )
    {
      // Get the set type name
      setTypeName := Constants::DEF_SC_MPSPlanParameters();
      setName := Constants::DEF_SC_MPSPlanParameters();
    
      // 1. Create set type for SC_Plan if not exists
      settype := select( channel, SetType, settype, settype.Name() = setTypeName );
      if( isnull( settype ) )
      {
        settype := LibDEF_SetType::Create( datarepository_i,
                                           channelname,
                                           setTypeName );
      }
    
      // 2. Create set for SC_Plan if not exists
      set := select( settype, Set, set, set.Name() = setName );
      if( isnull( set ) )
      {
        set := LibDEF_Set::Create( settype, setName );
      }
    
      // 3. Update set of SC_Plan to send feedback tasks to CP
      dtHandler := this.DataTransformationDefinition().GetDataTransformationHandler( channelname );
      datarepository_i.CreateUpdateSet( settype.GUID(), setName, set.GUID(), dtHandler, "" );    
    }
    else
    {
      LibDEF_Util::LogError( "Unable to get the '" + channelname + "' Channel. Please check if the Channel exist." );
    }
  *]
}
