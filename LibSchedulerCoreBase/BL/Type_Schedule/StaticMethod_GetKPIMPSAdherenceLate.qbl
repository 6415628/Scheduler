Quintiq file version 2.0
#parent: #root
StaticMethod GetKPIMPSAdherenceLate (const OptimizerStrategyInSchedule optimizerstrategy, constcontent Operation_SCs operations) const declarative remote as Real
{
  Description: 'Returns the KPI quantity of operations which are scheduled after MPS scheduling window'
  TextBody:
  [*
    // Calculate the quantity of operations which are scheduled after MPS scheduling window
    // Only the following operations will be calculated
    // 1. MPS_WindowEnd is finite
    // 2. Not dummy work order ( Checking logic in Operation.IsEligibleForKPICalculation )
    // 3. No feedback ( Checking logic in Operation.IsEligibleForKPICalculation )
    // 4. Not finished yet ( Checking logic in Operation.IsEligibleForKPICalculation )
    // 5. IsPlanned
    // 6. IsDueInSchedulingHorizon 
    // 7. Not adherence with MPS_WindowEnd ( End > MPS_WindowEnd )
    
    value := 0.0;
    
    if( not isnull( optimizerstrategy ) )
    {
      a := optimizerstrategy.PenaltyParameterMPSAdherenceLateSlope_a();
      b := optimizerstrategy.PenaltyParameterMPSAdherenceLatePower_b();
      c := optimizerstrategy.PenaltyParameterMPSAdherenceLateOffset_c();
      
      value := sum( operations,
                    Elements,
                    op,
                    op.MPS_WindowEnd().IsFinite()
                    and op.IsEligibleForKPICalculation()
                    and op.IsPlanned()
                    and op.IsDueInSchedulingHorizon()
                    and not op.IsAdherenceCPPlannedEnd(),
                    op.PlanUnit_SC().Quantity() 
                    * ( a * pow( op.GetMPSAdherenceLateDeviation() + c, b ) ) );
    }
    
    return value.Round( 2 );
  *]
}
