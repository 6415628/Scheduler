Quintiq file version 2.0
#parent: #root
Method GetCostTransitionViolation (Operation_SC prevop, Operation_SC currentop, Boolean onlycheckhard) declarative remote as Real
{
  Description: 'check that according to the rules on the phase,  plan the input two operations continuously allowed or not'
  TextBody:
  [*
    // zyi1 Jul-22-2021 (created)
    value := 0.0;
    
    traverse( this, 
              PPCOnResource.RuleOnPPCOnResource.Rule,
              rule,
              rule.RuleSubType().IsCheckOnPreviousOperation()
              and not rule.RuleSubType().IsCumulativeValueNeeded() 
              and ( not onlycheckhard 
                  or (rule.IsHardConstraintForOptimizer() or rule.IsProgramPhaseTransitionRule() ) ) )
    {
      deviation := rule.RuleSubType().GetDeviation( rule, prevop, currentop );
      if( deviation > 0.0 )
      {
        value := value + rule.PenaltyParameterSlope_a() * pow( ( deviation + rule.PenaltyParameterOffset_c() ), rule.PenaltyParameterPower_b() );
      }
    }
    
    return value;
  *]
}
