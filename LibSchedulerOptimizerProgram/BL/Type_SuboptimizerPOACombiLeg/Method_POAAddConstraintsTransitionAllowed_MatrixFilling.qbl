Quintiq file version 2.0
#parent: #root
Method POAAddConstraintsTransitionAllowed_MatrixFilling (SuboptimizerPOACombiLeg_SequenceCombiLeg poa, CombiLeg combileg, Operation_SCs operations)
{
  TextBody:
  [*
    rules := combileg.GetSequenceRules( combileg );
    
    traverse( rules, Elements, rule, rule.IsHardConstraintForOptimizer() or rule.IsProgramPhaseTransitionRule() )
    {
      Operation_SC::SetCurrentCharacteristicIDs( operations, rule );
      Transaction::Transaction().Propagate( relation( Operation_SC, CurrentMainCharacteristic ) );
      Transaction::Transaction().Propagate( relation( Operation_SC, CurrentConditionCharacteristic ) );
    
      //For some rulesubtypes we can check based on values which is faster than checking every pair of operations.
      //Calling a method on the subtype to differentiate the value type on which to check if the rule is broken.
      isforsoftrulepenalty := false;
      rule.RuleSubType().POA_MatrixFilling( poa, combileg, operations, rule, isforsoftrulepenalty );
    }
  *]
}
