Quintiq file version 2.0
#parent: #root
Method Update (const ImportedSettingsProgram imported_settings)
{
  Description:
  [*
    Update this setting object's data with the given imported data.
    Recursively also updates owned subsettings.
    Precondition: the 'hard' sanity check has passed for the imported object.
  *]
  TextBody:
  [*
    // jkr8 Jul-23-2021 (created)
    
    this.Update(); // ensures that all owned subsettings are created
    
    if( imported_settings.IsActive() )
    {
      this.Optimizer().ActiveSettings( relset, this );
    }
    
    this.MaxIterations( imported_settings.MaxIterations() );
    this.MaxOperationsInLeg( imported_settings.MaxOperationsInLeg() );
    this.ProbabilityOfUsingPurePOAImprovementPhase( imported_settings.ProbabilityOfUsingPurePOAImprovementPhase() );
    this.ProbabilityOfUsing2NodeDestructPOA( imported_settings.ProbabilityOfUsing2NodeDestructPOA() );
    
    if( not isnull( imported_settings.ImportedSettingsProgramPTAssignment() ) )
    {
      this.PTAssignment().CopyFrom( imported_settings.ImportedSettingsProgramPTAssignment() );
    }
    
    if( not isnull( imported_settings.ImportedSettingsPOACombiLeg() ) )
    {
      this.POACombiLeg().CopyFrom( imported_settings.ImportedSettingsPOACombiLeg() );
    }
    
    if( not isnull( imported_settings.ImportedSettingsProgramSetCovering() ) )
    {
      this.SetCovering().CopyFrom( imported_settings.ImportedSettingsProgramSetCovering() );
    }
    
    if( not isnull( imported_settings.ImportedSettingsSelectorCombiLeg() ) )
    {
      this.SelectorCombiLeg().CopyFrom( imported_settings.ImportedSettingsSelectorCombiLeg() );
    }
    
    if( not isnull( imported_settings.ImportedSettingsSelectorLeg() ) )
    {
      this.SelectorLeg().CopyFrom( imported_settings.ImportedSettingsSelectorLeg() );
    }
  *]
}
